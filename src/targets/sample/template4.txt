

@@BEGIN-TEMPLATE NAME="MAIN" TYPE="ROOT"
@@OPEN-OUTPUT-FILE FILENAME="output.h"
  @@INCLUDE TEMPLATE="V1"
@@CLOSE-OUTPUT-FILE
@@END-TEMPLATE NAME="MAIN"


@@BEGIN-TEMPLATE NAME="V1" TYPE="ROOT"
// structures

  @@INCLUDE TEMPLATE="MAP_3"
  
// serialization

  @@INCLUDE TEMPLATE="ROOT_3"
@@END-TEMPLATE NAME="V1"


@@BEGIN-TEMPLATE NAME="MAP_3" TYPE="ROOT"
  @@FOR-EACH-OF PUBLISHABLE-STRUCTS() TYPE="STRUCT" TEMPLATE="MAP-S-CALLING"
@@END-TEMPLATE NAME="MAP_3"


@@BEGIN-TEMPLATE NAME="ROOT_3" TYPE="ROOT"
  @@FOR-EACH-OF PUBLISHABLE-STRUCTS() TYPE="STRUCT" TEMPLATE="SERIALIZE-S-CALLING-ALT"
@@END-TEMPLATE NAME="ROOT_3"


@@BEGIN-TEMPLATE NAME="SERIALIZE-S-CALLING-ALT" TYPE="STRUCT"
void serialize@STRUCT-NAME@( @STRUCT-NAME@& s, OStream& o ) {
@@FOR-EACH-OF MEMBERS() BEGIN
@@INCLUDE TEMPLATE="SERIALIZE-S-FOR-EACH-OF-MEMBERS" PARAM-NAME="s.@MEMBER-NAME@" PARAM-TYPE="@MEMBER-TYPE@"
@@FOR-EACH-OF END
}
@@END-TEMPLATE NAME="SERIALIZE-S-CALLING-ALT"


@@BEGIN-TEMPLATE NAME="SERIALIZE-S-FOR-EACH-OF-MEMBERS" TYPE="STRUCT-MEMBER"
@@INCLUDE-WITH MEMBER-TYPE() TEMPLATE="SERIALIZE-TYPE" TYPE="DATATYPE" PARAM-NAME="@PARAM-NAME@"
@@END-TEMPLATE NAME="SERIALIZE-S-FOR-EACH-OF-MEMBERS"


@@BEGIN-TEMPLATE NAME="SERIALIZE-TYPE" TYPE="DATATYPE"
@@IF IS-INTEGER()
   o.writeInt(@PARAM-NAME@);
@@ELIF IS-FIXED-POINT()
   o.writeDouble(@PARAM-NAME@);
@@ELIF IS-FLOATING-POINT()
   o.writeDouble(@PARAM-NAME@);
@@ELIF IS-CHARACTER-STRING()
   o.writeString(@PARAM-NAME@);
@@ELIF IS-STRUCTURE()
   serialize@MEMBER-TYPE@(@PARAM-NAME@, o);
@@ELIF IS-ENUM()
   o.writeInt(@PARAM-NAME@);
@@ELIF IS-SEQUENCE()
   for(auto item:@PARAM-NAME@) {
@@INCLUDE-WITH COLLECTION-TYPE() TEMPLATE="SERIALIZE-TYPE" PARAM-NAME="item" TYPE="DATATYPE"
   }
@@ELIF IS-DICTIONARY()
   for(auto item:@PARAM-NAME@) {
@@INCLUDE-WITH COLLECTION-TYPE2() TEMPLATE="SERIALIZE-TYPE" PARAM-NAME="item.first" TYPE="DATATYPE"
@@INCLUDE-WITH COLLECTION-TYPE() TEMPLATE="SERIALIZE-TYPE" PARAM-NAME="item.second" TYPE="DATATYPE"
   }
@@ELSE
@@ASSERT "0" MSG="Cannot process member for serialization: name=@PARAM-NAME@, type=@MEMBER-TYPE@"
@@ENDIF
@@END-TEMPLATE NAME="SERIALIZE-TYPE"


@@BEGIN-TEMPLATE NAME="MAP-S-CALLING" TYPE="STRUCT"
typedef _@STRUCT-NAME@ {
@@LET LOCAL-MEMCTR=1
@@FOR-EACH-OF MEMBERS() BEGIN
   @@INCLUDE-WITH MEMBER-TYPE() TEMPLATE="MAP-TYPE" TYPE="DATATYPE"
   @MEMBER-NAME@; // @LOCAL-MEMCTR@
   @@LET LOCAL-MEMCTR=1+LOCAL-MEMCTR
@@FOR-EACH-OF END
} @STRUCT-NAME@;

@@END-TEMPLATE NAME="MAP-S-CALLING"


@@BEGIN-TEMPLATE NAME="MAP-TYPE" TYPE="DATATYPE"
@@IF IS-INTEGER()
@@IF IS-UNSIGNED-INTEGER()
  @@IF IS-UNSIGNED-INTEGER-FITTING-UINT(8)
   uint8_t 
  @@ELIF IS-UNSIGNED-INTEGER-FITTING-UINT(16)
   uint16_t
  @@ELIF IS-UNSIGNED-INTEGER-FITTING-UINT(32)
   uint32_t
  @@ELIF IS-UNSIGNED-INTEGER-FITTING-UINT(64)
   uint64_t
  @@ELSE
    @@ASSERT "0" MSG="Cannot process member for declaring: type=@MEMBER-TYPE@"
  @@ENDIF
@@ELSE
  @@IF IS-SIGNED-INTEGER-FITTING-INT(8)
   int8_t 
  @@ELIF IS-SIGNED-INTEGER-FITTING-INT(16)
   int16_t
  @@ELIF IS-SIGNED-INTEGER-FITTING-INT(32)
   int32_t
  @@ELIF IS-SIGNED-INTEGER-FITTING-INT(64)
   int64_t
  @@ELSE
    @@ASSERT "0" MSG="Cannot process member for declaring: type=@MEMBER-TYPE@"
  @@ENDIF
@@ENDIF
@@ELIF IS-FIXED-POINT()
   double 
@@ELIF IS-FLOATING-POINT()
  @@IF IS-FLOATING-POINT-FITTING-FLOAT(23,9)
   float 
  @@ELIF IS-FLOATING-POINT-FITTING-FLOAT(53,11)
   double 
  @@ELIF IS-FLOATING-POINT-FITTING-FLOAT(64,16)
   long double 
  @@ELSE
    @@ASSERT "0" MSG="Cannot process member for declaring: type=@MEMBER-TYPE@"
  @@ENDIF
@@ELIF IS-CHARACTER-STRING()
   std::string 
@@ELIF IS-STRUCTURE()
   @MEMBER-TYPE@ 
@@ELIF IS-SEQUENCE()
   vector<
@@INCLUDE-WITH COLLECTION-TYPE() TEMPLATE="MAP-TYPE"
   >
@@ELIF IS-DICTIONARY()
   map<
@@INCLUDE-WITH COLLECTION-TYPE2() TEMPLATE="MAP-TYPE"
   ,
@@INCLUDE-WITH COLLECTION-TYPE() TEMPLATE="MAP-TYPE"
   >
@@ELIF IS-ENUM()
enum @MEMBER-TYPE@ {
   @@FOR-EACH-OF ENUM-VALUES() BEGIN
      @@INCLUDE TEMPLATE="MAP-ENUM-VALUE-ALT"
   @@FOR-EACH-OF END
} 
@@ELSE
   @@ASSERT "0" MSG="Cannot process member for declaring: type=@MEMBER-TYPE@"
@@ENDIF
@@END-TEMPLATE NAME="MAP-TYPE"


@@BEGIN-TEMPLATE NAME="MAP-ENUM-VALUE" TYPE="ENUMVALUE"
@ENUM-VALUE-NAME@=@ENUM-VALUE-VALUE@,
@@END-TEMPLATE NAME="MAP-ENUM-VALUE"


@@BEGIN-TEMPLATE NAME="MAP-ENUM-VALUE-ALT" TYPE="ENUMVALUE"
@@LET LOCAL-NAME="@ENUM-VALUE-NAME@"
@LOCAL-NAME@=@ENUM-VALUE-VALUE@, 
@@END-TEMPLATE NAME="MAP-ENUM-VALUE-ALT"







