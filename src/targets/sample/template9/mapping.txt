

@@-----------  GENERATION OF DECLARATIONS  -----------------


@@BEGIN-TEMPLATE NAME="MAP-DU"
@@ASSERT IS-SERIALIZABLE-DISCRIMINATED-UNION(PARAM-STRUCT)
struct @PARAM-STRUCT.STRUCT-NAME()@ {
@@FOR-EACH LOCAL-MEMBERS IN PARAM-STRUCT.MEMBERS()
   @@INCLUDE TEMPLATE="MAP-TYPE" PARAM-TYPE=LOCAL-MEMBERS.MEMBER-TYPE()
   @LOCAL-MEMBERS.MAPPING-MEMBER-NAME()@;
@@FOR-EACH END
};

@@END-TEMPLATE NAME="MAP-DU"


@@BEGIN-TEMPLATE NAME="MAP-S-CALLING"
@@ASSERT IS-SERIALIZABLE-STRUCT(PARAM-STRUCT)
struct @PARAM-STRUCT.STRUCT-NAME()@ {
@@FOR-EACH LOCAL-MEMBERS IN PARAM-STRUCT.MEMBERS()
   @@INCLUDE TEMPLATE="MAP-TYPE" PARAM-TYPE=LOCAL-MEMBERS.MEMBER-TYPE()
   @LOCAL-MEMBERS.MAPPING-MEMBER-NAME()@;
@@FOR-EACH END
};

@@END-TEMPLATE NAME="MAP-S-CALLING"


@@BEGIN-TEMPLATE NAME="MAP-TYPE"
@@ASSERT IS-MEMBER-TYPE(PARAM-TYPE)
@@IF (PARAM-TYPE.IS-INTEGER()) || (PARAM-TYPE.IS-FIXED-POINT()) || (PARAM-TYPE.IS-FLOATING-POINT()) || (PARAM-TYPE.IS-STRUCTURE())
   @PARAM-TYPE.MAPPING-MEMBER-TYPE()@
@@ELIF PARAM-TYPE.IS-CHARACTER-STRING()
   std::string 
@@ELIF PARAM-TYPE.IS-DISCRIMINATED-UNION()
@@IF "@PARAM-TYPE.MAPPING-MEMBER-TYPE()@" == "unique_ptr"
   @PARAM-TYPE.MAPPING-MEMBER-TYPE()@<
@@INCLUDE TEMPLATE="MAP-TYPE" PARAM-TYPE=PARAM-TYPE.COLLECTION-TYPE()
   >
@@ELSE
   @@ASSERT "0" MSG="Cannot process member for declaring: type=@PARAM-TYPE.MEMBER-TYPE()@"
@@ENDIF
@@ELIF PARAM-TYPE.IS-SEQUENCE()
   @PARAM-TYPE.MAPPING-MEMBER-TYPE()@<
@@INCLUDE TEMPLATE="MAP-TYPE" PARAM-TYPE=PARAM-TYPE.COLLECTION-TYPE()
   >
@@ELIF PARAM-TYPE.IS-DICTIONARY()
   @PARAM-TYPE.MAPPING-MEMBER-TYPE()@<
@@INCLUDE TEMPLATE="MAP-TYPE" PARAM-TYPE=PARAM-TYPE.COLLECTION-TYPE2() 
   ,
@@INCLUDE TEMPLATE="MAP-TYPE" PARAM-TYPE=PARAM-TYPE.COLLECTION-TYPE()
   >
@@ELIF PARAM-TYPE.IS-ENUM()
enum @PARAM-TYPE.MAPPING-MEMBER-TYPE()@ {
   @@FOR-EACH LOCAL-ENUM-VAL IN PARAM-TYPE.ENUM-VALUES()
      @@INCLUDE TEMPLATE="MAP-ENUM-VALUE" PARAM-ENUM-VALUE=LOCAL-ENUM-VAL
   @@FOR-EACH END
} 
@@ELSE
   @@ASSERT "0" MSG="Cannot process member for declaring: type=@PARAM-TYPE.MEMBER-TYPE()@"
@@ENDIF
@@END-TEMPLATE NAME="MAP-TYPE"


@@BEGIN-TEMPLATE NAME="MAP-ENUM-VALUE"
@@ASSERT IS-ENUM-VALUE(PARAM-ENUM-VALUE)
@PARAM-ENUM-VALUE.ENUM-VALUE-NAME()@=@PARAM-ENUM-VALUE.MAPPING-ENUM-VALUE-VALUE()@,
@@END-TEMPLATE NAME="MAP-ENUM-VALUE"






@@-----------  processing SEQUENCEs (detailed list )  -----------------


@@BEGIN-TEMPLATE NAME="SEQUENCE-SIZE"
@@ASSERT IS-MEMBER-TYPE(PARAM-TYPE)
@@IF (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "vector") || (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "list")
        @PARAM-NAME@.size() 
@@ELIF PARAM-TYPE.MAPPING-MEMBER-TYPE() == "unique_ptr"
        (@PARAM-NAME@ != nullptr ? 1 : 0) 
@@ELSE
        @PARAM-NAME@._size() 
@@ENDIF
@@END-TEMPLATE NAME="SEQUENCE-SIZE"


@@BEGIN-TEMPLATE NAME="SERILAIZE_SEQUENCE_BEGIN"
@@ASSERT IS-MEMBER-TYPE(PARAM-TYPE)
@@IF (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "vector") || (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "list")
        auto& @PARAM-ITERATOR@ = @PARAM-NAME@.begin() 
@@ELIF PARAM-TYPE.MAPPING-MEMBER-TYPE() == "unique_ptr"
        auto& @PARAM-ITERATOR@ = *@PARAM-NAME@, int k=0 
@@ELSE
        @PARAM-NAME@._size() 
@@ENDIF
@@END-TEMPLATE NAME="SERILAIZE_SEQUENCE_BEGIN"


@@BEGIN-TEMPLATE NAME="SERILAIZE_IS_SEQUENCE_END"
@@ASSERT IS-MEMBER-TYPE(PARAM-TYPE)
@@IF (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "vector") || (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "list")
        @PARAM-ITERATOR@ == @PARAM-NAME@.end() 
@@ELIF PARAM-TYPE.MAPPING-MEMBER-TYPE() == "unique_ptr"
        k 
@@ELSE
        @PARAM-NAME@._size() 
@@ENDIF
@@END-TEMPLATE NAME="SERILAIZE_IS_SEQUENCE_END"


@@BEGIN-TEMPLATE NAME="SERILAIZE_SEQUENCE_NEXT"
@@ASSERT IS-MEMBER-TYPE(PARAM-TYPE)
@@IF (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "vector") || (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "list")
        ++@PARAM-ITERATOR@ 
@@ELIF PARAM-TYPE.MAPPING-MEMBER-TYPE() == "unique_ptr"
        ++k
@@ELSE
        @PARAM-NAME@._size() 
@@ENDIF
@@END-TEMPLATE NAME="SERILAIZE_SEQUENCE_NEXT"


@@BEGIN-TEMPLATE NAME="SERILAIZE_SEQUENCE_DECLARE_OBJECT_AND_INIT_BY_ITERATOR"
@@ASSERT IS-MEMBER-TYPE(PARAM-TYPE)
@@IF (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "vector") || (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "list")
        auto& @PARAM-OBJECT@ = *@PARAM-ITERATOR@;
@@ELIF PARAM-TYPE.MAPPING-MEMBER-TYPE() == "unique_ptr"
        auto& @PARAM-OBJECT@ = *@PARAM-ITERATOR@;
@@ELSE
//        auto& @PARAM-OBJECT@ = *@PARAM-ITERATOR@; // why am I here?!
@@ENDIF
@@END-TEMPLATE NAME="SERILAIZE_SEQUENCE_DECLARE_OBJECT_AND_INIT_BY_ITERATOR"


@@BEGIN-TEMPLATE NAME="DESERILAIZE_SEQUENCE_DECLARE_TMP_OBJECT"
@@ASSERT IS-MEMBER-TYPE(PARAM-TYPE)
@@IF (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "vector") || (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "list")
@@INCLUDE TEMPLATE="MAP-TYPE" PARAM-TYPE=PARAM-TYPE.COLLECTION-TYPE()
        @PARAM-TMP-OBJECT@;
@@ELIF PARAM-TYPE.MAPPING-MEMBER-TYPE() == "unique_ptr"
@@INCLUDE TEMPLATE="MAP-TYPE" PARAM-TYPE=PARAM-TYPE.COLLECTION-TYPE()
        &@PARAM-TMP-OBJECT@ = *(new 
@@INCLUDE TEMPLATE="MAP-TYPE" PARAM-TYPE=PARAM-TYPE.COLLECTION-TYPE()
        );
@@ELSE
@@INCLUDE TEMPLATE="MAP-TYPE" PARAM-TYPE=PARAM-TYPE.COLLECTION-TYPE()
        @PARAM-TMP-OBJECT@;
@@ENDIF
@@END-TEMPLATE NAME="DESERILAIZE_SEQUENCE_DECLARE_TMP_OBJECT"


@@BEGIN-TEMPLATE NAME="DESERILAIZE_SEQUENCE_ADD_NEXT"
@@ASSERT IS-MEMBER-TYPE(PARAM-TYPE)
@@IF (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "vector") || (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "list")
        @PARAM-NAME@.push_back(@PARAM-TMP-OBJECT@) 
@@ELIF PARAM-TYPE.MAPPING-MEMBER-TYPE() == "unique_ptr"
        @PARAM-NAME@.reset(&@PARAM-TMP-OBJECT@) 
@@ELSE
        @PARAM-NAME@._add_item(&@PARAM-TMP-OBJECT@);
@@ENDIF
@@END-TEMPLATE NAME="DESERILAIZE_SEQUENCE_ADD_NEXT"




@@-----------  processing SEQUENCEs (shortcuts )  -----------------


@@BEGIN-TEMPLATE NAME="SERILAIZE_SEQUENCE_ITERATION_BEGIN"
@@ASSERT IS-MEMBER-TYPE(PARAM-TYPE)
@@IF (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "vector") || (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "list")
        for( auto& @PARAM-OBJECT@ : @PARAM-NAME@ )
		{ 
@@ELIF PARAM-TYPE.MAPPING-MEMBER-TYPE() == "unique_ptr"
        if ( @PARAM-NAME@ != nullptr )
		{
		   auto& @PARAM-OBJECT@ = *@PARAM-NAME@;
@@ELSE
        for( auto& iter_@PARAM-OBJECT@ = @PARAM-NAME@._begin_sequence(); !@PARAM-NAME@._is_sequence_end(iter_@PARAM-OBJECT@); @PARAM-NAME@._sequence_next(iter_@PARAM-OBJECT@))
		{
		   auto& @PARAM-OBJECT@ = *iter_@PARAM-OBJECT@;
@@ENDIF
@@END-TEMPLATE NAME="SERILAIZE_SEQUENCE_ITERATION_BEGIN"


@@BEGIN-TEMPLATE NAME="SERILAIZE_SEQUENCE_ITERATION_END"
@@ASSERT IS-MEMBER-TYPE(PARAM-TYPE)
@@IF (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "vector") || (PARAM-TYPE.MAPPING-MEMBER-TYPE() == "list")
        } 
@@ELIF PARAM-TYPE.MAPPING-MEMBER-TYPE() == "unique_ptr"
        } 
@@ELSE
        } 
@@ENDIF
@@END-TEMPLATE NAME="SERILAIZE_SEQUENCE_ITERATION_END"




@@-----------  processing DISCRIMINATED-UNIONs  -----------------


@@BEGIN-TEMPLATE NAME="MAPPING-DISCRIMINATOR-NAME"
@@ASSERT IS-SERIALIZABLE-OBJECT(PARAM-DU)
@@-- we may want to have different option for different mapping types (say, unique_ptr, etc)
      @PARAM-DU.MAPPING-DISCRIMINATOR-NAME()@ 
@@END-TEMPLATE NAME="MAPPING-DISCRIMINATOR-NAME"



