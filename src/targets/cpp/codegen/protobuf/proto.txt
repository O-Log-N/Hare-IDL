@@--------   PROTO DEFINITION   --------


@@BEGIN-TEMPLATE NAME="PROTO-GENERATE"
@@ASSERT IS-ROOT(PARAM-ROOT)
  @@FOR-EACH LOCAL-PS-IT IN PARAM-ROOT.PUBLISHABLE-STRUCTS()
     @@INCLUDE TEMPLATE="PROTO-MESSAGE" PARAM-STRUCT=LOCAL-PS-IT
  @@FOR-EACH END

@@END-TEMPLATE NAME="PROTO-GENERATE"


@@BEGIN-TEMPLATE NAME="PROTO-MESSAGE"
@@ASSERT IS-SERIALIZABLE-STRUCT(PARAM-STRUCT)
message @PARAM-STRUCT.STRUCT-NAME()@ {
   @@LET LOCAL-MEMCTR=1
   @@FOR-EACH LOCAL-MEMBER IN PARAM-STRUCT.MEMBERS()
      @@INCLUDE TEMPLATE="PROTO-FOR-EACH-OF-MEMBERS" PARAM-MEMBER=LOCAL-MEMBER 
      @LOCAL-MEMBER.MAPPING-MEMBER-NAME()@ = @LOCAL-MEMCTR@; 
   @@LET LOCAL-MEMCTR=1+LOCAL-MEMCTR
   @@FOR-EACH END
}

@@END-TEMPLATE NAME="PROTO-MESSAGE"


@@BEGIN-TEMPLATE NAME="PROTO-FOR-EACH-OF-MEMBERS"
@@ASSERT IS-MEMBER(PARAM-MEMBER)
@@INCLUDE TEMPLATE="PROTO-TYPE" PARAM-TYPE=PARAM-MEMBER.MEMBER-TYPE()
@@END-TEMPLATE NAME="PROTO-FOR-EACH-OF-MEMBERS"


@@BEGIN-TEMPLATE NAME="PROTO-TYPE"
@@ASSERT IS-MEMBER-TYPE(PARAM-TYPE)
@@IF PARAM-TYPE.IS-INTEGER()
  @@IF PARAM-TYPE.IS-UNSIGNED-INTEGER()
    @@IF PARAM-TYPE.IS-UNSIGNED-INTEGER-FITTING-UINT(8)
     optional uint32 
    @@ELIF PARAM-TYPE.IS-UNSIGNED-INTEGER-FITTING-UINT(16)
     optional uint32 
    @@ELIF PARAM-TYPE.IS-UNSIGNED-INTEGER-FITTING-UINT(32)
     optional uint32 
    @@ELIF PARAM-TYPE.IS-UNSIGNED-INTEGER-FITTING-UINT(64)
     optional uint64 
    @@ELSE
      @@ASSERT "0" MSG="Cannot process member for declaring: type=@PARAM-TYPE.MAPPING-MEMBER-TYPE()@"
    @@ENDIF
  @@ELSE
    @@IF PARAM-TYPE.IS-SIGNED-INTEGER-FITTING-INT(8)
     optional sint32
    @@ELIF PARAM-TYPE.IS-SIGNED-INTEGER-FITTING-INT(16)
     optional sint32
    @@ELIF PARAM-TYPE.IS-SIGNED-INTEGER-FITTING-INT(32)
     optional sint32
    @@ELIF PARAM-TYPE.IS-SIGNED-INTEGER-FITTING-INT(64)
     optional sint64
    @@ELSE
      @@ASSERT "0" MSG="Cannot process member for declaring: type=@PARAM-TYPE.MAPPING-MEMBER-TYPE()@"
    @@ENDIF
  @@ENDIF
  @@ELIF PARAM-TYPE.IS-FIXED-POINT()
   optional double
@@ELIF PARAM-TYPE.IS-FLOATING-POINT()
  @@IF PARAM-TYPE.IS-FLOATING-POINT-FITTING-FLOAT(23,9)
   optional float
  @@ELIF PARAM-TYPE.IS-FLOATING-POINT-FITTING-FLOAT(53,11)
   optional double
  @@ELSE
    @@ASSERT "0" MSG="Cannot process member for declaring: type=@PARAM-TYPE.MAPPING-MEMBER-TYPE()@"
  @@ENDIF
@@ELIF PARAM-TYPE.IS-CHARACTER-STRING()
   optional string 
@@ELIF PARAM-TYPE.IS-STRUCTURE()
   @PARAM-TYPE.MAPPING-MEMBER-TYPE()@
@@ELIF PARAM-TYPE.IS-ENUM()
   @@INCLUDE TEMPLATE="PROTO-TYPE-ENUM" PARAM-TYPE=PARAM-TYPE
   optional @PARAM-TYPE.MAPPING-MEMBER-TYPE()@
@@ELIF PARAM-TYPE.IS-SEQUENCE()
  @@IF (PARAM-TYPE.COLLECTION-TYPE().IS-INTEGER()) || (PARAM-TYPE.COLLECTION-TYPE().IS-FIXED-POINT()) || (PARAM-TYPE.COLLECTION-TYPE().IS-FLOATING-POINT()) || (PARAM-TYPE.COLLECTION-TYPE().IS-CHARACTER-STRING())
    @@ASSERT "0" MSG="Cannot process sequence for declaring: type=@PARAM-TYPE.COLLECTION-TYPE().MAPPING-MEMBER-TYPE()@"
  @@ELIF PARAM-TYPE.COLLECTION-TYPE().IS-STRUCTURE()
    repeated @PARAM-TYPE.COLLECTION-TYPE().MAPPING-MEMBER-TYPE()@
  @@ELSE
    @@ASSERT "0" MSG="Cannot process sequence for declaring: type=@PARAM-TYPE.COLLECTION-TYPE().MAPPING-MEMBER-TYPE()@"
  @@ENDIF
@@ENDIF
@@END-TEMPLATE NAME="PROTO-TYPE"


@@BEGIN-TEMPLATE NAME="PROTO-TYPE-ENUM"
@@ASSERT PARAM-TYPE.IS-ENUM()
  enum @PARAM-TYPE.MAPPING-MEMBER-TYPE()@ {
  @@FOR-EACH LOCAL-ENUM-VALUE IN PARAM-TYPE.ENUM-VALUES()
    @LOCAL-ENUM-VALUE.ENUM-VALUE-NAME()@ = @LOCAL-ENUM-VALUE.MAPPING-ENUM-VALUE-VALUE()@;
  @@FOR-EACH END
  }
@@END-TEMPLATE NAME="PROTO-TYPE-ENUM"
