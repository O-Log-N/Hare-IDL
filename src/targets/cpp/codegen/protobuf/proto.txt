@@--------   PROTO DEFINITION   --------


@@BEGIN-TEMPLATE NAME="PROTO-GENERATE"
@@ASSERT IS-ROOT(PARAM-ROOT)
  @@FOR-EACH LOCAL-PS-IT IN PARAM-ROOT.PUBLISHABLE-STRUCTS()
     @@INCLUDE TEMPLATE="PROTO-MESSAGE" PARAM-STRUCT=LOCAL-PS-IT
  @@FOR-EACH END
  @@FOR-EACH LOCAL-DU-IT IN PARAM-ROOT.PUBLISHABLE-DISCRIMINATED-UNIONS()
     @@INCLUDE TEMPLATE="PROTO-MESSAGE-DU" PARAM-DU=LOCAL-DU-IT
  @@FOR-EACH END
@@END-TEMPLATE NAME="PROTO-GENERATE"


@@BEGIN-TEMPLATE NAME="PROTO-MESSAGE"
@@ASSERT IS-SERIALIZABLE-STRUCT(PARAM-STRUCT)
message @PARAM-STRUCT.STRUCT-NAME()@ {
   @@LET LOCAL-MEMCTR=1
   @@FOR-EACH LOCAL-MEMBER IN PARAM-STRUCT.MEMBERS()
      @@INCLUDE TEMPLATE="PROTO-TYPE" PARAM-TYPE=LOCAL-MEMBER.MEMBER-TYPE() PARAM-NAME=LOCAL-MEMBER.MAPPING-MEMBER-NAME() PARAM-MEMCTR=LOCAL-MEMCTR 
   @@LET LOCAL-MEMCTR=1+LOCAL-MEMCTR
   @@FOR-EACH END
}
@@END-TEMPLATE NAME="PROTO-MESSAGE"

@@BEGIN-TEMPLATE NAME="PROTO-MESSAGE-DU"
@@ASSERT IS-SERIALIZABLE-DISCRIMINATED-UNION(PARAM-DU)
message @PARAM-DU.STRUCT-NAME()@ {
  @@LET LOCAL-MEMCTR=1
  @@FOR-EACH LOCAL-DU-OPTION IN PARAM-DU.DISCRIMINATED-UNION-OPTIONS()
    @@FOR-EACH LOCAL-MEMBER IN LOCAL-DU-OPTION.MEMBERS()
      @@INCLUDE TEMPLATE="PROTO-TYPE" PARAM-TYPE=LOCAL-MEMBER.MEMBER-TYPE() PARAM-NAME=LOCAL-MEMBER.MAPPING-MEMBER-NAME() PARAM-MEMCTR=LOCAL-MEMCTR
      @@LET LOCAL-MEMCTR=1+LOCAL-MEMCTR
    @@FOR-EACH END
  @@FOR-EACH END
}
@@END-TEMPLATE NAME="PROTO-MESSAGE-DU"



@@BEGIN-TEMPLATE NAME="PROTO-TYPE"
@@ASSERT IS-MEMBER-TYPE(PARAM-TYPE)
@@IF (PARAM-TYPE.IS-INTEGER()) || (PARAM-TYPE.IS-FIXED-POINT()) || (  PARAM-TYPE.IS-FLOATING-POINT()) || (PARAM-TYPE.IS-CHARACTER-STRING())
  optional @FUNCTION-GET-PROTO-TYPE(PARAM-TYPE)@ @PARAM-NAME@ = @PARAM-MEMCTR@;
@@ELIF PARAM-TYPE.IS-STRUCTURE()
  optional @FUNCTION-GET-PROTO-TYPE(PARAM-TYPE)@  @PARAM-NAME@ = @PARAM-MEMCTR@;
@@ELIF PARAM-TYPE.IS-ENUM()
  @@INCLUDE TEMPLATE="PROTO-TYPE-ENUM" PARAM-TYPE=PARAM-TYPE
  optional @FUNCTION-GET-PROTO-TYPE(PARAM-TYPE)@  @PARAM-NAME@ = @PARAM-MEMCTR@;
@@ELIF PARAM-TYPE.IS-SEQUENCE()
  @@IF FUNCTION-IS-FIXED-SIZE-TYPE( PARAM-TYPE.COLLECTION-TYPE() )
  repeated @FUNCTION-GET-PROTO-TYPE(PARAM-TYPE.COLLECTION-TYPE())@ @PARAM-NAME@ = @PARAM-MEMCTR@ [packed=false];
  @@ELSE
  repeated @FUNCTION-GET-PROTO-TYPE(PARAM-TYPE.COLLECTION-TYPE())@ @PARAM-NAME@ = @PARAM-MEMCTR@;
  @@ENDIF
@@ELIF PARAM-TYPE.IS-DICTIONARY()
  repeated map< @FUNCTION-GET-PROTO-TYPE(PARAM-TYPE.COLLECTION-TYPE2())@ , @FUNCTION-GET-PROTO-TYPE(PARAM-TYPE.COLLECTION-TYPE())@ > @PARAM-NAME@ = @PARAM-MEMCTR@;
@@ENDIF
@@END-TEMPLATE NAME="PROTO-TYPE"


@@BEGIN-TEMPLATE NAME="PROTO-TYPE-ENUM"
@@ASSERT PARAM-TYPE.IS-ENUM()
  enum @PARAM-TYPE.MAPPING-MEMBER-TYPE()@ {
  @@FOR-EACH LOCAL-ENUM-VALUE IN PARAM-TYPE.ENUM-VALUES()
    @LOCAL-ENUM-VALUE.ENUM-VALUE-NAME()@ = @LOCAL-ENUM-VALUE.MAPPING-ENUM-VALUE-VALUE()@;
  @@FOR-EACH END
  }
@@END-TEMPLATE NAME="PROTO-TYPE-ENUM"



@@BEGIN-FUNCTION NAME="FUNCTION-GET-PROTO-TYPE" PARAM-TYPE
@@ASSERT IS-MEMBER-TYPE(PARAM-TYPE)
@@IF PARAM-TYPE.IS-INTEGER()
  @@IF PARAM-TYPE.IS-UNSIGNED-INTEGER()
    @@IF PARAM-TYPE.IS-UNSIGNED-INTEGER-FITTING-UINT(1)
     @@RETURN "bool"
    @@ELIF PARAM-TYPE.IS-UNSIGNED-INTEGER-FITTING-UINT(32)
     @@RETURN "uint32"  
    @@ELSE
      @@ASSERT "0" MSG="Cannot process member for declaring: type=@PARAM-TYPE.MAPPING-MEMBER-TYPE()@"
    @@ENDIF
  @@ELSE
    @@IF PARAM-TYPE.IS-SIGNED-INTEGER-FITTING-INT(32)
     @@RETURN "sint32"  
    @@ELIF PARAM-TYPE.IS-SIGNED-INTEGER-FITTING-INT(64)
     @@RETURN "sint64"
    @@ELSE
      @@ASSERT "0" MSG="Cannot process member for declaring: type=@PARAM-TYPE.MAPPING-MEMBER-TYPE()@"
    @@ENDIF
  @@ENDIF
  @@ELIF PARAM-TYPE.IS-FIXED-POINT()
     @@RETURN "double"
@@ELIF PARAM-TYPE.IS-FLOATING-POINT()
  @@IF PARAM-TYPE.IS-FLOATING-POINT-FITTING-FLOAT(24,8)
    @@ASSERT "0" MSG="Cannot process member for declaring: type=@PARAM-TYPE.MAPPING-MEMBER-TYPE()@"
  @@ELIF PARAM-TYPE.IS-FLOATING-POINT-FITTING-FLOAT(53,11)
     @@RETURN "double"
  @@ELSE
    @@ASSERT "0" MSG="Cannot process member for declaring: type=@PARAM-TYPE.MAPPING-MEMBER-TYPE()@"
  @@ENDIF
@@ELIF PARAM-TYPE.IS-CHARACTER-STRING()
     @@RETURN "string"
@@ELIF PARAM-TYPE.IS-DISCRIMINATED-UNION()
     @@RETURN "TODO"
@@ELIF PARAM-TYPE.IS-STRUCTURE()
     @@RETURN "@PARAM-TYPE.MAPPING-MEMBER-TYPE()@"
@@ELIF PARAM-TYPE.IS-ENUM()
     @@RETURN "@PARAM-TYPE.MAPPING-MEMBER-TYPE()@"
@@ELSE
    @@ASSERT "0" MSG="Cannot process sequence for declaring: type=@PARAM-TYPE.MAPPING-MEMBER-TYPE()@"
@@ENDIF
@@END-FUNCTION NAME="FUNCTION-GET-PROTO-TYPE"

@@BEGIN-FUNCTION NAME="FUNCTION-IS-FIXED-SIZE-TYPE" PARAM-TYPE
@@ASSERT IS-MEMBER-TYPE(PARAM-TYPE)
@@RETURN (PARAM-TYPE.IS-INTEGER()) || (PARAM-TYPE.IS-FIXED-POINT()) || (PARAM-TYPE.IS-FLOATING-POINT()) || (PARAM-TYPE.IS-ENUM())
@@END-FUNCTION NAME="FUNCTION-IS-FIXED-SIZE-TYPE"

