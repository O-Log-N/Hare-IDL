Terminals unused in grammar

   CHAR_LITERAL


Gramática

    0 $accept: file $end

    1 file: /* vacío */
    2     | file publishable_struct
    3     | file mapping
    4     | file encoding
    5     | file discriminated_union

    6 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
    7                         | publishable_struct_begin data_type IDENTIFIER ';'
    8                         | publishable_struct_begin IDENTIFIER IDENTIFIER ';'

    9 publishable_struct: publishable_struct_begin '}' ';'

   10 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   11              | mapping_begin data_type IDENTIFIER ';'
   12              | mapping_begin IDENTIFIER IDENTIFIER ';'

   13 mapping: mapping_begin '}' ';'

   14 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   15               | encoding_begin data_element
   16               | encoding_begin data_group
   17               | encoding_begin KW_FENCE

   18 encoding: encoding_begin '}' ';'

   19 data_element: data_type IDENTIFIER ';'
   20             | data_type IDENTIFIER KW_DEFAULT '=' expr ';'
   21             | KW_EXTEND IDENTIFIER KW_TO data_type ';'
   22             | IDENTIFIER IDENTIFIER ';'
   23             | IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr ';'
   24             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER ';'
   25             | IDENTIFIER '(' arg_list ')' IDENTIFIER ';'
   26             | IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   27             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' ';'

   28 data_group_begin: IDENTIFIER '{'
   29                 | IDENTIFIER '(' arg_list ')' '{'
   30                 | data_group_begin data_element
   31                 | data_group_begin data_group

   32 data_group: data_group_begin '}'
   33           | IDENTIFIER data_element
   34           | IDENTIFIER '(' arg_list ')' data_element
   35           | IDENTIFIER data_group
   36           | IDENTIFIER '(' arg_list ')' data_group

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' IDENTIFIER ')' IDENTIFIER '{'
   38                          | discriminated_union_begin union_data_element

   39 discriminated_union: discriminated_union_begin '}' ';'

   40 union_data_element: data_type IDENTIFIER ';'
   41                   | data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';'
   42                   | data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';'
   43                   | IDENTIFIER IDENTIFIER ';'
   44                   | IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';'
   45                   | IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';'

   46 data_type: numeric_type
   47          | int_type
   48          | integer_type
   49          | fixed_point_type
   50          | floating_point_type
   51          | character_type
   52          | character_string_type
   53          | bit_string_type
   54          | sequence_type
   55          | dictionary_type
   56          | inline_enum_type
   57          | class_ref_type

   58 numeric_type: KW_NUMERIC '[' expr ',' expr ']'
   59             | KW_NUMERIC '(' expr ',' expr ']'
   60             | KW_NUMERIC '[' expr ',' expr ')'
   61             | KW_NUMERIC '(' expr ',' expr ')'

   62 int_type: KW_INT '[' expr ',' expr ']'
   63         | KW_INT '(' expr ',' expr ']'
   64         | KW_INT '[' expr ',' expr ')'
   65         | KW_INT '(' expr ',' expr ')'

   66 integer_type: KW_INTEGER '[' expr ',' expr ']'
   67             | KW_INTEGER '(' expr ',' expr ']'
   68             | KW_INTEGER '[' expr ',' expr ')'
   69             | KW_INTEGER '(' expr ',' expr ')'

   70 fixed_point_type: KW_FIXED_POINT '[' expr ',' expr ',' expr ']'
   71                 | KW_FIXED_POINT '(' expr ',' expr ',' expr ']'
   72                 | KW_FIXED_POINT '[' expr ',' expr ',' expr ')'
   73                 | KW_FIXED_POINT '(' expr ',' expr ',' expr ')'

   74 floating_point_type: KW_FLOATING_POINT '(' expr ',' expr ')'

   75 character_type: KW_CHARACTER '{' expr '}'

   76 character_string_type: KW_CHARACTER_STRING '{' expr '}'
   77                      | KW_CHARACTER_STRING '{' expr '}' '[' expr ',' expr ']'

   78 bit_string_type: KW_BIT_STRING '[' expr ',' expr ']'

   79 sequence_type: KW_SEQUENCE '<' data_type '>'
   80              | KW_SEQUENCE '<' IDENTIFIER '>'
   81              | IDENTIFIER '<' data_type '>'
   82              | IDENTIFIER '<' IDENTIFIER '>'

   83 dictionary_type: KW_DICTIONARY '<' data_type ',' data_type '>'
   84                | KW_DICTIONARY '<' IDENTIFIER ',' data_type '>'
   85                | KW_DICTIONARY '<' data_type ',' IDENTIFIER '>'
   86                | KW_DICTIONARY '<' IDENTIFIER ',' IDENTIFIER '>'

   87 class_ref_type: KW_CLASS IDENTIFIER

   88 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values '}'

   89 enum_values: IDENTIFIER '=' INTEGER_LITERAL
   90            | enum_values ',' IDENTIFIER '=' INTEGER_LITERAL

   91 arg_list: IDENTIFIER '=' expr
   92         | arg_list ',' IDENTIFIER '=' expr

   93 id_list: IDENTIFIER
   94        | id_list ',' IDENTIFIER

   95 expr: INTEGER_LITERAL
   96     | FLOAT_LITERAL
   97     | STRING_LITERAL


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 10 14 25 26 27 29 34 36 37 59 61 63 65 67 69 71 73 74
')' (41) 10 14 25 26 27 29 34 36 37 60 61 64 65 68 69 72 73 74
',' (44) 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 77 78 83
    84 85 86 90 92 94
';' (59) 7 8 9 11 12 13 18 19 20 21 22 23 24 25 26 27 39 40 41 42 43
    44 45
'<' (60) 79 80 81 82 83 84 85 86
'=' (61) 20 23 26 37 89 90 91 92
'>' (62) 79 80 81 82 83 84 85 86
'[' (91) 58 60 62 64 66 68 70 72 77 78
']' (93) 58 59 62 63 66 67 70 71 77 78
'{' (123) 6 10 14 28 29 37 41 44 75 76 77 88
'}' (125) 9 13 18 32 39 41 44 75 76 77 88
error (256)
KW_PUBLISHABLE_STRUCT (258) 6 10 14
KW_ENUM (259) 88
KW_CLASS (260) 87
KW_MAPPING (261) 10
KW_ENCODING (262) 14
KW_NUMERIC (263) 58 59 60 61
KW_INT (264) 62 63 64 65
KW_EXTEND (265) 21 24 27
KW_TO (266) 21 24 27
KW_DEFAULT (267) 20 23 26
KW_FENCE (268) 17
KW_DISCRIMINATED_UNION (269) 37
KW_WHEN_DISCRIMINANT_IN (270) 41 44
KW_WHEN_DISCRIMINANT_IS (271) 42 45
KW_DISCRIMINANT (272) 37
IDENTIFIER (273) 6 7 8 10 11 12 14 19 20 21 22 23 24 25 26 27 28 29
    33 34 35 36 37 40 41 42 43 44 45 80 81 82 84 85 86 87 88 89 90
    91 92 93 94
STRING_LITERAL (274) 97
INTEGER_LITERAL (275) 89 90 95
CHAR_LITERAL (276)
FLOAT_LITERAL (277) 96
KW_INTEGER (278) 66 67 68 69
KW_FIXED_POINT (279) 70 71 72 73
KW_FLOATING_POINT (280) 74
KW_CHARACTER (281) 75
KW_CHARACTER_STRING (282) 76 77
KW_BIT_STRING (283) 78
KW_SEQUENCE (284) 79 80
KW_DICTIONARY (285) 83 84 85 86


No terminales con las reglas donde aparecen

$accept (42)
    en la izquierda: 0
file (43)
    en la izquierda: 1 2 3 4 5, en la derecha: 0 2 3 4 5
publishable_struct_begin (44)
    en la izquierda: 6 7 8, en la derecha: 7 8 9
publishable_struct (45)
    en la izquierda: 9, en la derecha: 2
mapping_begin (46)
    en la izquierda: 10 11 12, en la derecha: 11 12 13
mapping (47)
    en la izquierda: 13, en la derecha: 3
encoding_begin (48)
    en la izquierda: 14 15 16 17, en la derecha: 15 16 17 18
encoding (49)
    en la izquierda: 18, en la derecha: 4
data_element (50)
    en la izquierda: 19 20 21 22 23 24 25 26 27, en la derecha: 15
    30 33 34
data_group_begin (51)
    en la izquierda: 28 29 30 31, en la derecha: 30 31 32
data_group (52)
    en la izquierda: 32 33 34 35 36, en la derecha: 16 31 35 36
discriminated_union_begin (53)
    en la izquierda: 37 38, en la derecha: 38 39
discriminated_union (54)
    en la izquierda: 39, en la derecha: 5
union_data_element (55)
    en la izquierda: 40 41 42 43 44 45, en la derecha: 38
data_type (56)
    en la izquierda: 46 47 48 49 50 51 52 53 54 55 56 57, en la derecha:
    7 11 19 20 21 40 41 42 79 81 83 84 85
numeric_type (57)
    en la izquierda: 58 59 60 61, en la derecha: 46
int_type (58)
    en la izquierda: 62 63 64 65, en la derecha: 47
integer_type (59)
    en la izquierda: 66 67 68 69, en la derecha: 48
fixed_point_type (60)
    en la izquierda: 70 71 72 73, en la derecha: 49
floating_point_type (61)
    en la izquierda: 74, en la derecha: 50
character_type (62)
    en la izquierda: 75, en la derecha: 51
character_string_type (63)
    en la izquierda: 76 77, en la derecha: 52
bit_string_type (64)
    en la izquierda: 78, en la derecha: 53
sequence_type (65)
    en la izquierda: 79 80 81 82, en la derecha: 54
dictionary_type (66)
    en la izquierda: 83 84 85 86, en la derecha: 55
class_ref_type (67)
    en la izquierda: 87, en la derecha: 57
inline_enum_type (68)
    en la izquierda: 88, en la derecha: 56
enum_values (69)
    en la izquierda: 89 90, en la derecha: 88 90
arg_list (70)
    en la izquierda: 91 92, en la derecha: 10 14 25 26 27 29 34 36
    92
id_list (71)
    en la izquierda: 93 94, en la derecha: 41 44 94
expr (72)
    en la izquierda: 95 96 97, en la derecha: 20 23 26 58 59 60 61
    62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 91 92


estado 0

    0 $accept: . file $end

    $default  reduce usando la regla 1 (file)

    file  ir al estado 1


estado 1

    0 $accept: file . $end
    2 file: file . publishable_struct
    3     | file . mapping
    4     | file . encoding
    5     | file . discriminated_union

    $end                    desplazar e ir al estado 2
    KW_PUBLISHABLE_STRUCT   desplazar e ir al estado 3
    KW_MAPPING              desplazar e ir al estado 4
    KW_ENCODING             desplazar e ir al estado 5
    KW_DISCRIMINATED_UNION  desplazar e ir al estado 6

    publishable_struct_begin   ir al estado 7
    publishable_struct         ir al estado 8
    mapping_begin              ir al estado 9
    mapping                    ir al estado 10
    encoding_begin             ir al estado 11
    encoding                   ir al estado 12
    discriminated_union_begin  ir al estado 13
    discriminated_union        ir al estado 14


estado 2

    0 $accept: file $end .

    $default  aceptar


estado 3

    6 publishable_struct_begin: KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 15


estado 4

   10 mapping_begin: KW_MAPPING . '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    '('  desplazar e ir al estado 16


estado 5

   14 encoding_begin: KW_ENCODING . '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    '('  desplazar e ir al estado 17


estado 6

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION . '(' KW_DISCRIMINANT '=' IDENTIFIER ')' IDENTIFIER '{'

    '('  desplazar e ir al estado 18


estado 7

    7 publishable_struct_begin: publishable_struct_begin . data_type IDENTIFIER ';'
    8                         | publishable_struct_begin . IDENTIFIER IDENTIFIER ';'
    9 publishable_struct: publishable_struct_begin . '}' ';'

    KW_ENUM              desplazar e ir al estado 19
    KW_CLASS             desplazar e ir al estado 20
    KW_NUMERIC           desplazar e ir al estado 21
    KW_INT               desplazar e ir al estado 22
    IDENTIFIER           desplazar e ir al estado 23
    KW_INTEGER           desplazar e ir al estado 24
    KW_FIXED_POINT       desplazar e ir al estado 25
    KW_FLOATING_POINT    desplazar e ir al estado 26
    KW_CHARACTER         desplazar e ir al estado 27
    KW_CHARACTER_STRING  desplazar e ir al estado 28
    KW_BIT_STRING        desplazar e ir al estado 29
    KW_SEQUENCE          desplazar e ir al estado 30
    KW_DICTIONARY        desplazar e ir al estado 31
    '}'                  desplazar e ir al estado 32

    data_type              ir al estado 33
    numeric_type           ir al estado 34
    int_type               ir al estado 35
    integer_type           ir al estado 36
    fixed_point_type       ir al estado 37
    floating_point_type    ir al estado 38
    character_type         ir al estado 39
    character_string_type  ir al estado 40
    bit_string_type        ir al estado 41
    sequence_type          ir al estado 42
    dictionary_type        ir al estado 43
    class_ref_type         ir al estado 44
    inline_enum_type       ir al estado 45


estado 8

    2 file: file publishable_struct .

    $default  reduce usando la regla 2 (file)


estado 9

   11 mapping_begin: mapping_begin . data_type IDENTIFIER ';'
   12              | mapping_begin . IDENTIFIER IDENTIFIER ';'
   13 mapping: mapping_begin . '}' ';'

    KW_ENUM              desplazar e ir al estado 19
    KW_CLASS             desplazar e ir al estado 20
    KW_NUMERIC           desplazar e ir al estado 21
    KW_INT               desplazar e ir al estado 22
    IDENTIFIER           desplazar e ir al estado 46
    KW_INTEGER           desplazar e ir al estado 24
    KW_FIXED_POINT       desplazar e ir al estado 25
    KW_FLOATING_POINT    desplazar e ir al estado 26
    KW_CHARACTER         desplazar e ir al estado 27
    KW_CHARACTER_STRING  desplazar e ir al estado 28
    KW_BIT_STRING        desplazar e ir al estado 29
    KW_SEQUENCE          desplazar e ir al estado 30
    KW_DICTIONARY        desplazar e ir al estado 31
    '}'                  desplazar e ir al estado 47

    data_type              ir al estado 48
    numeric_type           ir al estado 34
    int_type               ir al estado 35
    integer_type           ir al estado 36
    fixed_point_type       ir al estado 37
    floating_point_type    ir al estado 38
    character_type         ir al estado 39
    character_string_type  ir al estado 40
    bit_string_type        ir al estado 41
    sequence_type          ir al estado 42
    dictionary_type        ir al estado 43
    class_ref_type         ir al estado 44
    inline_enum_type       ir al estado 45


estado 10

    3 file: file mapping .

    $default  reduce usando la regla 3 (file)


estado 11

   15 encoding_begin: encoding_begin . data_element
   16               | encoding_begin . data_group
   17               | encoding_begin . KW_FENCE
   18 encoding: encoding_begin . '}' ';'

    KW_ENUM              desplazar e ir al estado 19
    KW_CLASS             desplazar e ir al estado 20
    KW_NUMERIC           desplazar e ir al estado 21
    KW_INT               desplazar e ir al estado 22
    KW_EXTEND            desplazar e ir al estado 49
    KW_FENCE             desplazar e ir al estado 50
    IDENTIFIER           desplazar e ir al estado 51
    KW_INTEGER           desplazar e ir al estado 24
    KW_FIXED_POINT       desplazar e ir al estado 25
    KW_FLOATING_POINT    desplazar e ir al estado 26
    KW_CHARACTER         desplazar e ir al estado 27
    KW_CHARACTER_STRING  desplazar e ir al estado 28
    KW_BIT_STRING        desplazar e ir al estado 29
    KW_SEQUENCE          desplazar e ir al estado 30
    KW_DICTIONARY        desplazar e ir al estado 31
    '}'                  desplazar e ir al estado 52

    data_element           ir al estado 53
    data_group_begin       ir al estado 54
    data_group             ir al estado 55
    data_type              ir al estado 56
    numeric_type           ir al estado 34
    int_type               ir al estado 35
    integer_type           ir al estado 36
    fixed_point_type       ir al estado 37
    floating_point_type    ir al estado 38
    character_type         ir al estado 39
    character_string_type  ir al estado 40
    bit_string_type        ir al estado 41
    sequence_type          ir al estado 42
    dictionary_type        ir al estado 43
    class_ref_type         ir al estado 44
    inline_enum_type       ir al estado 45


estado 12

    4 file: file encoding .

    $default  reduce usando la regla 4 (file)


estado 13

   38 discriminated_union_begin: discriminated_union_begin . union_data_element
   39 discriminated_union: discriminated_union_begin . '}' ';'

    KW_ENUM              desplazar e ir al estado 19
    KW_CLASS             desplazar e ir al estado 20
    KW_NUMERIC           desplazar e ir al estado 21
    KW_INT               desplazar e ir al estado 22
    IDENTIFIER           desplazar e ir al estado 57
    KW_INTEGER           desplazar e ir al estado 24
    KW_FIXED_POINT       desplazar e ir al estado 25
    KW_FLOATING_POINT    desplazar e ir al estado 26
    KW_CHARACTER         desplazar e ir al estado 27
    KW_CHARACTER_STRING  desplazar e ir al estado 28
    KW_BIT_STRING        desplazar e ir al estado 29
    KW_SEQUENCE          desplazar e ir al estado 30
    KW_DICTIONARY        desplazar e ir al estado 31
    '}'                  desplazar e ir al estado 58

    union_data_element     ir al estado 59
    data_type              ir al estado 60
    numeric_type           ir al estado 34
    int_type               ir al estado 35
    integer_type           ir al estado 36
    fixed_point_type       ir al estado 37
    floating_point_type    ir al estado 38
    character_type         ir al estado 39
    character_string_type  ir al estado 40
    bit_string_type        ir al estado 41
    sequence_type          ir al estado 42
    dictionary_type        ir al estado 43
    class_ref_type         ir al estado 44
    inline_enum_type       ir al estado 45


estado 14

    5 file: file discriminated_union .

    $default  reduce usando la regla 5 (file)


estado 15

    6 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 61


estado 16

   10 mapping_begin: KW_MAPPING '(' . arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 62

    arg_list  ir al estado 63


estado 17

   14 encoding_begin: KW_ENCODING '(' . arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 62

    arg_list  ir al estado 64


estado 18

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' . KW_DISCRIMINANT '=' IDENTIFIER ')' IDENTIFIER '{'

    KW_DISCRIMINANT  desplazar e ir al estado 65


estado 19

   88 inline_enum_type: KW_ENUM . IDENTIFIER '{' enum_values '}'

    IDENTIFIER  desplazar e ir al estado 66


estado 20

   87 class_ref_type: KW_CLASS . IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 67


estado 21

   58 numeric_type: KW_NUMERIC . '[' expr ',' expr ']'
   59             | KW_NUMERIC . '(' expr ',' expr ']'
   60             | KW_NUMERIC . '[' expr ',' expr ')'
   61             | KW_NUMERIC . '(' expr ',' expr ')'

    '('  desplazar e ir al estado 68
    '['  desplazar e ir al estado 69


estado 22

   62 int_type: KW_INT . '[' expr ',' expr ']'
   63         | KW_INT . '(' expr ',' expr ']'
   64         | KW_INT . '[' expr ',' expr ')'
   65         | KW_INT . '(' expr ',' expr ')'

    '('  desplazar e ir al estado 70
    '['  desplazar e ir al estado 71


estado 23

    8 publishable_struct_begin: publishable_struct_begin IDENTIFIER . IDENTIFIER ';'
   81 sequence_type: IDENTIFIER . '<' data_type '>'
   82              | IDENTIFIER . '<' IDENTIFIER '>'

    IDENTIFIER  desplazar e ir al estado 72
    '<'         desplazar e ir al estado 73


estado 24

   66 integer_type: KW_INTEGER . '[' expr ',' expr ']'
   67             | KW_INTEGER . '(' expr ',' expr ']'
   68             | KW_INTEGER . '[' expr ',' expr ')'
   69             | KW_INTEGER . '(' expr ',' expr ')'

    '('  desplazar e ir al estado 74
    '['  desplazar e ir al estado 75


estado 25

   70 fixed_point_type: KW_FIXED_POINT . '[' expr ',' expr ',' expr ']'
   71                 | KW_FIXED_POINT . '(' expr ',' expr ',' expr ']'
   72                 | KW_FIXED_POINT . '[' expr ',' expr ',' expr ')'
   73                 | KW_FIXED_POINT . '(' expr ',' expr ',' expr ')'

    '('  desplazar e ir al estado 76
    '['  desplazar e ir al estado 77


estado 26

   74 floating_point_type: KW_FLOATING_POINT . '(' expr ',' expr ')'

    '('  desplazar e ir al estado 78


estado 27

   75 character_type: KW_CHARACTER . '{' expr '}'

    '{'  desplazar e ir al estado 79


estado 28

   76 character_string_type: KW_CHARACTER_STRING . '{' expr '}'
   77                      | KW_CHARACTER_STRING . '{' expr '}' '[' expr ',' expr ']'

    '{'  desplazar e ir al estado 80


estado 29

   78 bit_string_type: KW_BIT_STRING . '[' expr ',' expr ']'

    '['  desplazar e ir al estado 81


estado 30

   79 sequence_type: KW_SEQUENCE . '<' data_type '>'
   80              | KW_SEQUENCE . '<' IDENTIFIER '>'

    '<'  desplazar e ir al estado 82


estado 31

   83 dictionary_type: KW_DICTIONARY . '<' data_type ',' data_type '>'
   84                | KW_DICTIONARY . '<' IDENTIFIER ',' data_type '>'
   85                | KW_DICTIONARY . '<' data_type ',' IDENTIFIER '>'
   86                | KW_DICTIONARY . '<' IDENTIFIER ',' IDENTIFIER '>'

    '<'  desplazar e ir al estado 83


estado 32

    9 publishable_struct: publishable_struct_begin '}' . ';'

    ';'  desplazar e ir al estado 84


estado 33

    7 publishable_struct_begin: publishable_struct_begin data_type . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 85


estado 34

   46 data_type: numeric_type .

    $default  reduce usando la regla 46 (data_type)


estado 35

   47 data_type: int_type .

    $default  reduce usando la regla 47 (data_type)


estado 36

   48 data_type: integer_type .

    $default  reduce usando la regla 48 (data_type)


estado 37

   49 data_type: fixed_point_type .

    $default  reduce usando la regla 49 (data_type)


estado 38

   50 data_type: floating_point_type .

    $default  reduce usando la regla 50 (data_type)


estado 39

   51 data_type: character_type .

    $default  reduce usando la regla 51 (data_type)


estado 40

   52 data_type: character_string_type .

    $default  reduce usando la regla 52 (data_type)


estado 41

   53 data_type: bit_string_type .

    $default  reduce usando la regla 53 (data_type)


estado 42

   54 data_type: sequence_type .

    $default  reduce usando la regla 54 (data_type)


estado 43

   55 data_type: dictionary_type .

    $default  reduce usando la regla 55 (data_type)


estado 44

   57 data_type: class_ref_type .

    $default  reduce usando la regla 57 (data_type)


estado 45

   56 data_type: inline_enum_type .

    $default  reduce usando la regla 56 (data_type)


estado 46

   12 mapping_begin: mapping_begin IDENTIFIER . IDENTIFIER ';'
   81 sequence_type: IDENTIFIER . '<' data_type '>'
   82              | IDENTIFIER . '<' IDENTIFIER '>'

    IDENTIFIER  desplazar e ir al estado 86
    '<'         desplazar e ir al estado 73


estado 47

   13 mapping: mapping_begin '}' . ';'

    ';'  desplazar e ir al estado 87


estado 48

   11 mapping_begin: mapping_begin data_type . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 88


estado 49

   21 data_element: KW_EXTEND . IDENTIFIER KW_TO data_type ';'
   24             | KW_EXTEND . IDENTIFIER KW_TO IDENTIFIER ';'
   27             | KW_EXTEND . IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' ';'

    IDENTIFIER  desplazar e ir al estado 89


estado 50

   17 encoding_begin: encoding_begin KW_FENCE .

    $default  reduce usando la regla 17 (encoding_begin)


estado 51

   22 data_element: IDENTIFIER . IDENTIFIER ';'
   23             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   25             | IDENTIFIER . '(' arg_list ')' IDENTIFIER ';'
   26             | IDENTIFIER . '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   28 data_group_begin: IDENTIFIER . '{'
   29                 | IDENTIFIER . '(' arg_list ')' '{'
   33 data_group: IDENTIFIER . data_element
   34           | IDENTIFIER . '(' arg_list ')' data_element
   35           | IDENTIFIER . data_group
   36           | IDENTIFIER . '(' arg_list ')' data_group
   81 sequence_type: IDENTIFIER . '<' data_type '>'
   82              | IDENTIFIER . '<' IDENTIFIER '>'

    KW_ENUM              desplazar e ir al estado 19
    KW_CLASS             desplazar e ir al estado 20
    KW_NUMERIC           desplazar e ir al estado 21
    KW_INT               desplazar e ir al estado 22
    KW_EXTEND            desplazar e ir al estado 49
    IDENTIFIER           desplazar e ir al estado 90
    KW_INTEGER           desplazar e ir al estado 24
    KW_FIXED_POINT       desplazar e ir al estado 25
    KW_FLOATING_POINT    desplazar e ir al estado 26
    KW_CHARACTER         desplazar e ir al estado 27
    KW_CHARACTER_STRING  desplazar e ir al estado 28
    KW_BIT_STRING        desplazar e ir al estado 29
    KW_SEQUENCE          desplazar e ir al estado 30
    KW_DICTIONARY        desplazar e ir al estado 31
    '{'                  desplazar e ir al estado 91
    '('                  desplazar e ir al estado 92
    '<'                  desplazar e ir al estado 73

    data_element           ir al estado 93
    data_group_begin       ir al estado 54
    data_group             ir al estado 94
    data_type              ir al estado 56
    numeric_type           ir al estado 34
    int_type               ir al estado 35
    integer_type           ir al estado 36
    fixed_point_type       ir al estado 37
    floating_point_type    ir al estado 38
    character_type         ir al estado 39
    character_string_type  ir al estado 40
    bit_string_type        ir al estado 41
    sequence_type          ir al estado 42
    dictionary_type        ir al estado 43
    class_ref_type         ir al estado 44
    inline_enum_type       ir al estado 45


estado 52

   18 encoding: encoding_begin '}' . ';'

    ';'  desplazar e ir al estado 95


estado 53

   15 encoding_begin: encoding_begin data_element .

    $default  reduce usando la regla 15 (encoding_begin)


estado 54

   30 data_group_begin: data_group_begin . data_element
   31                 | data_group_begin . data_group
   32 data_group: data_group_begin . '}'

    KW_ENUM              desplazar e ir al estado 19
    KW_CLASS             desplazar e ir al estado 20
    KW_NUMERIC           desplazar e ir al estado 21
    KW_INT               desplazar e ir al estado 22
    KW_EXTEND            desplazar e ir al estado 49
    IDENTIFIER           desplazar e ir al estado 51
    KW_INTEGER           desplazar e ir al estado 24
    KW_FIXED_POINT       desplazar e ir al estado 25
    KW_FLOATING_POINT    desplazar e ir al estado 26
    KW_CHARACTER         desplazar e ir al estado 27
    KW_CHARACTER_STRING  desplazar e ir al estado 28
    KW_BIT_STRING        desplazar e ir al estado 29
    KW_SEQUENCE          desplazar e ir al estado 30
    KW_DICTIONARY        desplazar e ir al estado 31
    '}'                  desplazar e ir al estado 96

    data_element           ir al estado 97
    data_group_begin       ir al estado 54
    data_group             ir al estado 98
    data_type              ir al estado 56
    numeric_type           ir al estado 34
    int_type               ir al estado 35
    integer_type           ir al estado 36
    fixed_point_type       ir al estado 37
    floating_point_type    ir al estado 38
    character_type         ir al estado 39
    character_string_type  ir al estado 40
    bit_string_type        ir al estado 41
    sequence_type          ir al estado 42
    dictionary_type        ir al estado 43
    class_ref_type         ir al estado 44
    inline_enum_type       ir al estado 45


estado 55

   16 encoding_begin: encoding_begin data_group .

    $default  reduce usando la regla 16 (encoding_begin)


estado 56

   19 data_element: data_type . IDENTIFIER ';'
   20             | data_type . IDENTIFIER KW_DEFAULT '=' expr ';'

    IDENTIFIER  desplazar e ir al estado 99


estado 57

   43 union_data_element: IDENTIFIER . IDENTIFIER ';'
   44                   | IDENTIFIER . IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';'
   45                   | IDENTIFIER . IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';'
   81 sequence_type: IDENTIFIER . '<' data_type '>'
   82              | IDENTIFIER . '<' IDENTIFIER '>'

    IDENTIFIER  desplazar e ir al estado 100
    '<'         desplazar e ir al estado 73


estado 58

   39 discriminated_union: discriminated_union_begin '}' . ';'

    ';'  desplazar e ir al estado 101


estado 59

   38 discriminated_union_begin: discriminated_union_begin union_data_element .

    $default  reduce usando la regla 38 (discriminated_union_begin)


estado 60

   40 union_data_element: data_type . IDENTIFIER ';'
   41                   | data_type . IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';'
   42                   | data_type . IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 102


estado 61

    6 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 6 (publishable_struct_begin)


estado 62

   91 arg_list: IDENTIFIER . '=' expr

    '='  desplazar e ir al estado 103


estado 63

   10 mapping_begin: KW_MAPPING '(' arg_list . ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   92 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 104
    ','  desplazar e ir al estado 105


estado 64

   14 encoding_begin: KW_ENCODING '(' arg_list . ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   92 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 106
    ','  desplazar e ir al estado 105


estado 65

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT . '=' IDENTIFIER ')' IDENTIFIER '{'

    '='  desplazar e ir al estado 107


estado 66

   88 inline_enum_type: KW_ENUM IDENTIFIER . '{' enum_values '}'

    '{'  desplazar e ir al estado 108


estado 67

   87 class_ref_type: KW_CLASS IDENTIFIER .

    $default  reduce usando la regla 87 (class_ref_type)


estado 68

   59 numeric_type: KW_NUMERIC '(' . expr ',' expr ']'
   61             | KW_NUMERIC '(' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 112


estado 69

   58 numeric_type: KW_NUMERIC '[' . expr ',' expr ']'
   60             | KW_NUMERIC '[' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 113


estado 70

   63 int_type: KW_INT '(' . expr ',' expr ']'
   65         | KW_INT '(' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 114


estado 71

   62 int_type: KW_INT '[' . expr ',' expr ']'
   64         | KW_INT '[' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 115


estado 72

    8 publishable_struct_begin: publishable_struct_begin IDENTIFIER IDENTIFIER . ';'

    ';'  desplazar e ir al estado 116


estado 73

   81 sequence_type: IDENTIFIER '<' . data_type '>'
   82              | IDENTIFIER '<' . IDENTIFIER '>'

    KW_ENUM              desplazar e ir al estado 19
    KW_CLASS             desplazar e ir al estado 20
    KW_NUMERIC           desplazar e ir al estado 21
    KW_INT               desplazar e ir al estado 22
    IDENTIFIER           desplazar e ir al estado 117
    KW_INTEGER           desplazar e ir al estado 24
    KW_FIXED_POINT       desplazar e ir al estado 25
    KW_FLOATING_POINT    desplazar e ir al estado 26
    KW_CHARACTER         desplazar e ir al estado 27
    KW_CHARACTER_STRING  desplazar e ir al estado 28
    KW_BIT_STRING        desplazar e ir al estado 29
    KW_SEQUENCE          desplazar e ir al estado 30
    KW_DICTIONARY        desplazar e ir al estado 31

    data_type              ir al estado 118
    numeric_type           ir al estado 34
    int_type               ir al estado 35
    integer_type           ir al estado 36
    fixed_point_type       ir al estado 37
    floating_point_type    ir al estado 38
    character_type         ir al estado 39
    character_string_type  ir al estado 40
    bit_string_type        ir al estado 41
    sequence_type          ir al estado 42
    dictionary_type        ir al estado 43
    class_ref_type         ir al estado 44
    inline_enum_type       ir al estado 45


estado 74

   67 integer_type: KW_INTEGER '(' . expr ',' expr ']'
   69             | KW_INTEGER '(' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 119


estado 75

   66 integer_type: KW_INTEGER '[' . expr ',' expr ']'
   68             | KW_INTEGER '[' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 120


estado 76

   71 fixed_point_type: KW_FIXED_POINT '(' . expr ',' expr ',' expr ']'
   73                 | KW_FIXED_POINT '(' . expr ',' expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 121


estado 77

   70 fixed_point_type: KW_FIXED_POINT '[' . expr ',' expr ',' expr ']'
   72                 | KW_FIXED_POINT '[' . expr ',' expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 122


estado 78

   74 floating_point_type: KW_FLOATING_POINT '(' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 123


estado 79

   75 character_type: KW_CHARACTER '{' . expr '}'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 124


estado 80

   76 character_string_type: KW_CHARACTER_STRING '{' . expr '}'
   77                      | KW_CHARACTER_STRING '{' . expr '}' '[' expr ',' expr ']'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 125


estado 81

   78 bit_string_type: KW_BIT_STRING '[' . expr ',' expr ']'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 126


estado 82

   79 sequence_type: KW_SEQUENCE '<' . data_type '>'
   80              | KW_SEQUENCE '<' . IDENTIFIER '>'

    KW_ENUM              desplazar e ir al estado 19
    KW_CLASS             desplazar e ir al estado 20
    KW_NUMERIC           desplazar e ir al estado 21
    KW_INT               desplazar e ir al estado 22
    IDENTIFIER           desplazar e ir al estado 127
    KW_INTEGER           desplazar e ir al estado 24
    KW_FIXED_POINT       desplazar e ir al estado 25
    KW_FLOATING_POINT    desplazar e ir al estado 26
    KW_CHARACTER         desplazar e ir al estado 27
    KW_CHARACTER_STRING  desplazar e ir al estado 28
    KW_BIT_STRING        desplazar e ir al estado 29
    KW_SEQUENCE          desplazar e ir al estado 30
    KW_DICTIONARY        desplazar e ir al estado 31

    data_type              ir al estado 128
    numeric_type           ir al estado 34
    int_type               ir al estado 35
    integer_type           ir al estado 36
    fixed_point_type       ir al estado 37
    floating_point_type    ir al estado 38
    character_type         ir al estado 39
    character_string_type  ir al estado 40
    bit_string_type        ir al estado 41
    sequence_type          ir al estado 42
    dictionary_type        ir al estado 43
    class_ref_type         ir al estado 44
    inline_enum_type       ir al estado 45


estado 83

   83 dictionary_type: KW_DICTIONARY '<' . data_type ',' data_type '>'
   84                | KW_DICTIONARY '<' . IDENTIFIER ',' data_type '>'
   85                | KW_DICTIONARY '<' . data_type ',' IDENTIFIER '>'
   86                | KW_DICTIONARY '<' . IDENTIFIER ',' IDENTIFIER '>'

    KW_ENUM              desplazar e ir al estado 19
    KW_CLASS             desplazar e ir al estado 20
    KW_NUMERIC           desplazar e ir al estado 21
    KW_INT               desplazar e ir al estado 22
    IDENTIFIER           desplazar e ir al estado 129
    KW_INTEGER           desplazar e ir al estado 24
    KW_FIXED_POINT       desplazar e ir al estado 25
    KW_FLOATING_POINT    desplazar e ir al estado 26
    KW_CHARACTER         desplazar e ir al estado 27
    KW_CHARACTER_STRING  desplazar e ir al estado 28
    KW_BIT_STRING        desplazar e ir al estado 29
    KW_SEQUENCE          desplazar e ir al estado 30
    KW_DICTIONARY        desplazar e ir al estado 31

    data_type              ir al estado 130
    numeric_type           ir al estado 34
    int_type               ir al estado 35
    integer_type           ir al estado 36
    fixed_point_type       ir al estado 37
    floating_point_type    ir al estado 38
    character_type         ir al estado 39
    character_string_type  ir al estado 40
    bit_string_type        ir al estado 41
    sequence_type          ir al estado 42
    dictionary_type        ir al estado 43
    class_ref_type         ir al estado 44
    inline_enum_type       ir al estado 45


estado 84

    9 publishable_struct: publishable_struct_begin '}' ';' .

    $default  reduce usando la regla 9 (publishable_struct)


estado 85

    7 publishable_struct_begin: publishable_struct_begin data_type IDENTIFIER . ';'

    ';'  desplazar e ir al estado 131


estado 86

   12 mapping_begin: mapping_begin IDENTIFIER IDENTIFIER . ';'

    ';'  desplazar e ir al estado 132


estado 87

   13 mapping: mapping_begin '}' ';' .

    $default  reduce usando la regla 13 (mapping)


estado 88

   11 mapping_begin: mapping_begin data_type IDENTIFIER . ';'

    ';'  desplazar e ir al estado 133


estado 89

   21 data_element: KW_EXTEND IDENTIFIER . KW_TO data_type ';'
   24             | KW_EXTEND IDENTIFIER . KW_TO IDENTIFIER ';'
   27             | KW_EXTEND IDENTIFIER . KW_TO IDENTIFIER '(' arg_list ')' ';'

    KW_TO  desplazar e ir al estado 134


estado 90

   22 data_element: IDENTIFIER . IDENTIFIER ';'
   22             | IDENTIFIER IDENTIFIER . ';'
   23             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   23             | IDENTIFIER IDENTIFIER . KW_DEFAULT '=' expr ';'
   25             | IDENTIFIER . '(' arg_list ')' IDENTIFIER ';'
   26             | IDENTIFIER . '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   28 data_group_begin: IDENTIFIER . '{'
   29                 | IDENTIFIER . '(' arg_list ')' '{'
   33 data_group: IDENTIFIER . data_element
   34           | IDENTIFIER . '(' arg_list ')' data_element
   35           | IDENTIFIER . data_group
   36           | IDENTIFIER . '(' arg_list ')' data_group
   81 sequence_type: IDENTIFIER . '<' data_type '>'
   82              | IDENTIFIER . '<' IDENTIFIER '>'

    KW_ENUM              desplazar e ir al estado 19
    KW_CLASS             desplazar e ir al estado 20
    KW_NUMERIC           desplazar e ir al estado 21
    KW_INT               desplazar e ir al estado 22
    KW_EXTEND            desplazar e ir al estado 49
    KW_DEFAULT           desplazar e ir al estado 135
    IDENTIFIER           desplazar e ir al estado 90
    KW_INTEGER           desplazar e ir al estado 24
    KW_FIXED_POINT       desplazar e ir al estado 25
    KW_FLOATING_POINT    desplazar e ir al estado 26
    KW_CHARACTER         desplazar e ir al estado 27
    KW_CHARACTER_STRING  desplazar e ir al estado 28
    KW_BIT_STRING        desplazar e ir al estado 29
    KW_SEQUENCE          desplazar e ir al estado 30
    KW_DICTIONARY        desplazar e ir al estado 31
    '{'                  desplazar e ir al estado 91
    ';'                  desplazar e ir al estado 136
    '('                  desplazar e ir al estado 92
    '<'                  desplazar e ir al estado 73

    data_element           ir al estado 93
    data_group_begin       ir al estado 54
    data_group             ir al estado 94
    data_type              ir al estado 56
    numeric_type           ir al estado 34
    int_type               ir al estado 35
    integer_type           ir al estado 36
    fixed_point_type       ir al estado 37
    floating_point_type    ir al estado 38
    character_type         ir al estado 39
    character_string_type  ir al estado 40
    bit_string_type        ir al estado 41
    sequence_type          ir al estado 42
    dictionary_type        ir al estado 43
    class_ref_type         ir al estado 44
    inline_enum_type       ir al estado 45


estado 91

   28 data_group_begin: IDENTIFIER '{' .

    $default  reduce usando la regla 28 (data_group_begin)


estado 92

   25 data_element: IDENTIFIER '(' . arg_list ')' IDENTIFIER ';'
   26             | IDENTIFIER '(' . arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   29 data_group_begin: IDENTIFIER '(' . arg_list ')' '{'
   34 data_group: IDENTIFIER '(' . arg_list ')' data_element
   36           | IDENTIFIER '(' . arg_list ')' data_group

    IDENTIFIER  desplazar e ir al estado 62

    arg_list  ir al estado 137


estado 93

   33 data_group: IDENTIFIER data_element .

    $default  reduce usando la regla 33 (data_group)


estado 94

   35 data_group: IDENTIFIER data_group .

    $default  reduce usando la regla 35 (data_group)


estado 95

   18 encoding: encoding_begin '}' ';' .

    $default  reduce usando la regla 18 (encoding)


estado 96

   32 data_group: data_group_begin '}' .

    $default  reduce usando la regla 32 (data_group)


estado 97

   30 data_group_begin: data_group_begin data_element .

    $default  reduce usando la regla 30 (data_group_begin)


estado 98

   31 data_group_begin: data_group_begin data_group .

    $default  reduce usando la regla 31 (data_group_begin)


estado 99

   19 data_element: data_type IDENTIFIER . ';'
   20             | data_type IDENTIFIER . KW_DEFAULT '=' expr ';'

    KW_DEFAULT  desplazar e ir al estado 138
    ';'         desplazar e ir al estado 139


estado 100

   43 union_data_element: IDENTIFIER IDENTIFIER . ';'
   44                   | IDENTIFIER IDENTIFIER . KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';'
   45                   | IDENTIFIER IDENTIFIER . KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';'

    KW_WHEN_DISCRIMINANT_IN  desplazar e ir al estado 140
    KW_WHEN_DISCRIMINANT_IS  desplazar e ir al estado 141
    ';'                      desplazar e ir al estado 142


estado 101

   39 discriminated_union: discriminated_union_begin '}' ';' .

    $default  reduce usando la regla 39 (discriminated_union)


estado 102

   40 union_data_element: data_type IDENTIFIER . ';'
   41                   | data_type IDENTIFIER . KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';'
   42                   | data_type IDENTIFIER . KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';'

    KW_WHEN_DISCRIMINANT_IN  desplazar e ir al estado 143
    KW_WHEN_DISCRIMINANT_IS  desplazar e ir al estado 144
    ';'                      desplazar e ir al estado 145


estado 103

   91 arg_list: IDENTIFIER '=' . expr

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 146


estado 104

   10 mapping_begin: KW_MAPPING '(' arg_list ')' . KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    KW_PUBLISHABLE_STRUCT  desplazar e ir al estado 147


estado 105

   92 arg_list: arg_list ',' . IDENTIFIER '=' expr

    IDENTIFIER  desplazar e ir al estado 148


estado 106

   14 encoding_begin: KW_ENCODING '(' arg_list ')' . KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    KW_PUBLISHABLE_STRUCT  desplazar e ir al estado 149


estado 107

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' . IDENTIFIER ')' IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 150


estado 108

   88 inline_enum_type: KW_ENUM IDENTIFIER '{' . enum_values '}'

    IDENTIFIER  desplazar e ir al estado 151

    enum_values  ir al estado 152


estado 109

   97 expr: STRING_LITERAL .

    $default  reduce usando la regla 97 (expr)


estado 110

   95 expr: INTEGER_LITERAL .

    $default  reduce usando la regla 95 (expr)


estado 111

   96 expr: FLOAT_LITERAL .

    $default  reduce usando la regla 96 (expr)


estado 112

   59 numeric_type: KW_NUMERIC '(' expr . ',' expr ']'
   61             | KW_NUMERIC '(' expr . ',' expr ')'

    ','  desplazar e ir al estado 153


estado 113

   58 numeric_type: KW_NUMERIC '[' expr . ',' expr ']'
   60             | KW_NUMERIC '[' expr . ',' expr ')'

    ','  desplazar e ir al estado 154


estado 114

   63 int_type: KW_INT '(' expr . ',' expr ']'
   65         | KW_INT '(' expr . ',' expr ')'

    ','  desplazar e ir al estado 155


estado 115

   62 int_type: KW_INT '[' expr . ',' expr ']'
   64         | KW_INT '[' expr . ',' expr ')'

    ','  desplazar e ir al estado 156


estado 116

    8 publishable_struct_begin: publishable_struct_begin IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 8 (publishable_struct_begin)


estado 117

   81 sequence_type: IDENTIFIER . '<' data_type '>'
   82              | IDENTIFIER . '<' IDENTIFIER '>'
   82              | IDENTIFIER '<' IDENTIFIER . '>'

    '<'  desplazar e ir al estado 73
    '>'  desplazar e ir al estado 157


estado 118

   81 sequence_type: IDENTIFIER '<' data_type . '>'

    '>'  desplazar e ir al estado 158


estado 119

   67 integer_type: KW_INTEGER '(' expr . ',' expr ']'
   69             | KW_INTEGER '(' expr . ',' expr ')'

    ','  desplazar e ir al estado 159


estado 120

   66 integer_type: KW_INTEGER '[' expr . ',' expr ']'
   68             | KW_INTEGER '[' expr . ',' expr ')'

    ','  desplazar e ir al estado 160


estado 121

   71 fixed_point_type: KW_FIXED_POINT '(' expr . ',' expr ',' expr ']'
   73                 | KW_FIXED_POINT '(' expr . ',' expr ',' expr ')'

    ','  desplazar e ir al estado 161


estado 122

   70 fixed_point_type: KW_FIXED_POINT '[' expr . ',' expr ',' expr ']'
   72                 | KW_FIXED_POINT '[' expr . ',' expr ',' expr ')'

    ','  desplazar e ir al estado 162


estado 123

   74 floating_point_type: KW_FLOATING_POINT '(' expr . ',' expr ')'

    ','  desplazar e ir al estado 163


estado 124

   75 character_type: KW_CHARACTER '{' expr . '}'

    '}'  desplazar e ir al estado 164


estado 125

   76 character_string_type: KW_CHARACTER_STRING '{' expr . '}'
   77                      | KW_CHARACTER_STRING '{' expr . '}' '[' expr ',' expr ']'

    '}'  desplazar e ir al estado 165


estado 126

   78 bit_string_type: KW_BIT_STRING '[' expr . ',' expr ']'

    ','  desplazar e ir al estado 166


estado 127

   80 sequence_type: KW_SEQUENCE '<' IDENTIFIER . '>'
   81              | IDENTIFIER . '<' data_type '>'
   82              | IDENTIFIER . '<' IDENTIFIER '>'

    '<'  desplazar e ir al estado 73
    '>'  desplazar e ir al estado 167


estado 128

   79 sequence_type: KW_SEQUENCE '<' data_type . '>'

    '>'  desplazar e ir al estado 168


estado 129

   81 sequence_type: IDENTIFIER . '<' data_type '>'
   82              | IDENTIFIER . '<' IDENTIFIER '>'
   84 dictionary_type: KW_DICTIONARY '<' IDENTIFIER . ',' data_type '>'
   86                | KW_DICTIONARY '<' IDENTIFIER . ',' IDENTIFIER '>'

    ','  desplazar e ir al estado 169
    '<'  desplazar e ir al estado 73


estado 130

   83 dictionary_type: KW_DICTIONARY '<' data_type . ',' data_type '>'
   85                | KW_DICTIONARY '<' data_type . ',' IDENTIFIER '>'

    ','  desplazar e ir al estado 170


estado 131

    7 publishable_struct_begin: publishable_struct_begin data_type IDENTIFIER ';' .

    $default  reduce usando la regla 7 (publishable_struct_begin)


estado 132

   12 mapping_begin: mapping_begin IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 12 (mapping_begin)


estado 133

   11 mapping_begin: mapping_begin data_type IDENTIFIER ';' .

    $default  reduce usando la regla 11 (mapping_begin)


estado 134

   21 data_element: KW_EXTEND IDENTIFIER KW_TO . data_type ';'
   24             | KW_EXTEND IDENTIFIER KW_TO . IDENTIFIER ';'
   27             | KW_EXTEND IDENTIFIER KW_TO . IDENTIFIER '(' arg_list ')' ';'

    KW_ENUM              desplazar e ir al estado 19
    KW_CLASS             desplazar e ir al estado 20
    KW_NUMERIC           desplazar e ir al estado 21
    KW_INT               desplazar e ir al estado 22
    IDENTIFIER           desplazar e ir al estado 171
    KW_INTEGER           desplazar e ir al estado 24
    KW_FIXED_POINT       desplazar e ir al estado 25
    KW_FLOATING_POINT    desplazar e ir al estado 26
    KW_CHARACTER         desplazar e ir al estado 27
    KW_CHARACTER_STRING  desplazar e ir al estado 28
    KW_BIT_STRING        desplazar e ir al estado 29
    KW_SEQUENCE          desplazar e ir al estado 30
    KW_DICTIONARY        desplazar e ir al estado 31

    data_type              ir al estado 172
    numeric_type           ir al estado 34
    int_type               ir al estado 35
    integer_type           ir al estado 36
    fixed_point_type       ir al estado 37
    floating_point_type    ir al estado 38
    character_type         ir al estado 39
    character_string_type  ir al estado 40
    bit_string_type        ir al estado 41
    sequence_type          ir al estado 42
    dictionary_type        ir al estado 43
    class_ref_type         ir al estado 44
    inline_enum_type       ir al estado 45


estado 135

   23 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 173


estado 136

   22 data_element: IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 22 (data_element)


estado 137

   25 data_element: IDENTIFIER '(' arg_list . ')' IDENTIFIER ';'
   26             | IDENTIFIER '(' arg_list . ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   29 data_group_begin: IDENTIFIER '(' arg_list . ')' '{'
   34 data_group: IDENTIFIER '(' arg_list . ')' data_element
   36           | IDENTIFIER '(' arg_list . ')' data_group
   92 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 174
    ','  desplazar e ir al estado 105


estado 138

   20 data_element: data_type IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 175


estado 139

   19 data_element: data_type IDENTIFIER ';' .

    $default  reduce usando la regla 19 (data_element)


estado 140

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IN . '{' id_list '}' ';'

    '{'  desplazar e ir al estado 176


estado 141

   45 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IS . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 177


estado 142

   43 union_data_element: IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 43 (union_data_element)


estado 143

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IN . '{' id_list '}' ';'

    '{'  desplazar e ir al estado 178


estado 144

   42 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IS . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 179


estado 145

   40 union_data_element: data_type IDENTIFIER ';' .

    $default  reduce usando la regla 40 (union_data_element)


estado 146

   91 arg_list: IDENTIFIER '=' expr .

    $default  reduce usando la regla 91 (arg_list)


estado 147

   10 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 180


estado 148

   92 arg_list: arg_list ',' IDENTIFIER . '=' expr

    '='  desplazar e ir al estado 181


estado 149

   14 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 182


estado 150

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' IDENTIFIER . ')' IDENTIFIER '{'

    ')'  desplazar e ir al estado 183


estado 151

   89 enum_values: IDENTIFIER . '=' INTEGER_LITERAL

    '='  desplazar e ir al estado 184


estado 152

   88 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values . '}'
   90 enum_values: enum_values . ',' IDENTIFIER '=' INTEGER_LITERAL

    '}'  desplazar e ir al estado 185
    ','  desplazar e ir al estado 186


estado 153

   59 numeric_type: KW_NUMERIC '(' expr ',' . expr ']'
   61             | KW_NUMERIC '(' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 187


estado 154

   58 numeric_type: KW_NUMERIC '[' expr ',' . expr ']'
   60             | KW_NUMERIC '[' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 188


estado 155

   63 int_type: KW_INT '(' expr ',' . expr ']'
   65         | KW_INT '(' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 189


estado 156

   62 int_type: KW_INT '[' expr ',' . expr ']'
   64         | KW_INT '[' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 190


estado 157

   82 sequence_type: IDENTIFIER '<' IDENTIFIER '>' .

    $default  reduce usando la regla 82 (sequence_type)


estado 158

   81 sequence_type: IDENTIFIER '<' data_type '>' .

    $default  reduce usando la regla 81 (sequence_type)


estado 159

   67 integer_type: KW_INTEGER '(' expr ',' . expr ']'
   69             | KW_INTEGER '(' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 191


estado 160

   66 integer_type: KW_INTEGER '[' expr ',' . expr ']'
   68             | KW_INTEGER '[' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 192


estado 161

   71 fixed_point_type: KW_FIXED_POINT '(' expr ',' . expr ',' expr ']'
   73                 | KW_FIXED_POINT '(' expr ',' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 193


estado 162

   70 fixed_point_type: KW_FIXED_POINT '[' expr ',' . expr ',' expr ']'
   72                 | KW_FIXED_POINT '[' expr ',' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 194


estado 163

   74 floating_point_type: KW_FLOATING_POINT '(' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 195


estado 164

   75 character_type: KW_CHARACTER '{' expr '}' .

    $default  reduce usando la regla 75 (character_type)


estado 165

   76 character_string_type: KW_CHARACTER_STRING '{' expr '}' .
   77                      | KW_CHARACTER_STRING '{' expr '}' . '[' expr ',' expr ']'

    '['  desplazar e ir al estado 196

    $default  reduce usando la regla 76 (character_string_type)


estado 166

   78 bit_string_type: KW_BIT_STRING '[' expr ',' . expr ']'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 197


estado 167

   80 sequence_type: KW_SEQUENCE '<' IDENTIFIER '>' .

    $default  reduce usando la regla 80 (sequence_type)


estado 168

   79 sequence_type: KW_SEQUENCE '<' data_type '>' .

    $default  reduce usando la regla 79 (sequence_type)


estado 169

   84 dictionary_type: KW_DICTIONARY '<' IDENTIFIER ',' . data_type '>'
   86                | KW_DICTIONARY '<' IDENTIFIER ',' . IDENTIFIER '>'

    KW_ENUM              desplazar e ir al estado 19
    KW_CLASS             desplazar e ir al estado 20
    KW_NUMERIC           desplazar e ir al estado 21
    KW_INT               desplazar e ir al estado 22
    IDENTIFIER           desplazar e ir al estado 198
    KW_INTEGER           desplazar e ir al estado 24
    KW_FIXED_POINT       desplazar e ir al estado 25
    KW_FLOATING_POINT    desplazar e ir al estado 26
    KW_CHARACTER         desplazar e ir al estado 27
    KW_CHARACTER_STRING  desplazar e ir al estado 28
    KW_BIT_STRING        desplazar e ir al estado 29
    KW_SEQUENCE          desplazar e ir al estado 30
    KW_DICTIONARY        desplazar e ir al estado 31

    data_type              ir al estado 199
    numeric_type           ir al estado 34
    int_type               ir al estado 35
    integer_type           ir al estado 36
    fixed_point_type       ir al estado 37
    floating_point_type    ir al estado 38
    character_type         ir al estado 39
    character_string_type  ir al estado 40
    bit_string_type        ir al estado 41
    sequence_type          ir al estado 42
    dictionary_type        ir al estado 43
    class_ref_type         ir al estado 44
    inline_enum_type       ir al estado 45


estado 170

   83 dictionary_type: KW_DICTIONARY '<' data_type ',' . data_type '>'
   85                | KW_DICTIONARY '<' data_type ',' . IDENTIFIER '>'

    KW_ENUM              desplazar e ir al estado 19
    KW_CLASS             desplazar e ir al estado 20
    KW_NUMERIC           desplazar e ir al estado 21
    KW_INT               desplazar e ir al estado 22
    IDENTIFIER           desplazar e ir al estado 200
    KW_INTEGER           desplazar e ir al estado 24
    KW_FIXED_POINT       desplazar e ir al estado 25
    KW_FLOATING_POINT    desplazar e ir al estado 26
    KW_CHARACTER         desplazar e ir al estado 27
    KW_CHARACTER_STRING  desplazar e ir al estado 28
    KW_BIT_STRING        desplazar e ir al estado 29
    KW_SEQUENCE          desplazar e ir al estado 30
    KW_DICTIONARY        desplazar e ir al estado 31

    data_type              ir al estado 201
    numeric_type           ir al estado 34
    int_type               ir al estado 35
    integer_type           ir al estado 36
    fixed_point_type       ir al estado 37
    floating_point_type    ir al estado 38
    character_type         ir al estado 39
    character_string_type  ir al estado 40
    bit_string_type        ir al estado 41
    sequence_type          ir al estado 42
    dictionary_type        ir al estado 43
    class_ref_type         ir al estado 44
    inline_enum_type       ir al estado 45


estado 171

   24 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER . ';'
   27             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER . '(' arg_list ')' ';'
   81 sequence_type: IDENTIFIER . '<' data_type '>'
   82              | IDENTIFIER . '<' IDENTIFIER '>'

    ';'  desplazar e ir al estado 202
    '('  desplazar e ir al estado 203
    '<'  desplazar e ir al estado 73


estado 172

   21 data_element: KW_EXTEND IDENTIFIER KW_TO data_type . ';'

    ';'  desplazar e ir al estado 204


estado 173

   23 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' . expr ';'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 205


estado 174

   25 data_element: IDENTIFIER '(' arg_list ')' . IDENTIFIER ';'
   26             | IDENTIFIER '(' arg_list ')' . IDENTIFIER KW_DEFAULT '=' expr ';'
   29 data_group_begin: IDENTIFIER '(' arg_list ')' . '{'
   34 data_group: IDENTIFIER '(' arg_list ')' . data_element
   36           | IDENTIFIER '(' arg_list ')' . data_group

    KW_ENUM              desplazar e ir al estado 19
    KW_CLASS             desplazar e ir al estado 20
    KW_NUMERIC           desplazar e ir al estado 21
    KW_INT               desplazar e ir al estado 22
    KW_EXTEND            desplazar e ir al estado 49
    IDENTIFIER           desplazar e ir al estado 206
    KW_INTEGER           desplazar e ir al estado 24
    KW_FIXED_POINT       desplazar e ir al estado 25
    KW_FLOATING_POINT    desplazar e ir al estado 26
    KW_CHARACTER         desplazar e ir al estado 27
    KW_CHARACTER_STRING  desplazar e ir al estado 28
    KW_BIT_STRING        desplazar e ir al estado 29
    KW_SEQUENCE          desplazar e ir al estado 30
    KW_DICTIONARY        desplazar e ir al estado 31
    '{'                  desplazar e ir al estado 207

    data_element           ir al estado 208
    data_group_begin       ir al estado 54
    data_group             ir al estado 209
    data_type              ir al estado 56
    numeric_type           ir al estado 34
    int_type               ir al estado 35
    integer_type           ir al estado 36
    fixed_point_type       ir al estado 37
    floating_point_type    ir al estado 38
    character_type         ir al estado 39
    character_string_type  ir al estado 40
    bit_string_type        ir al estado 41
    sequence_type          ir al estado 42
    dictionary_type        ir al estado 43
    class_ref_type         ir al estado 44
    inline_enum_type       ir al estado 45


estado 175

   20 data_element: data_type IDENTIFIER KW_DEFAULT '=' . expr ';'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 210


estado 176

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' . id_list '}' ';'

    IDENTIFIER  desplazar e ir al estado 211

    id_list  ir al estado 212


estado 177

   45 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER . ';'

    ';'  desplazar e ir al estado 213


estado 178

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' . id_list '}' ';'

    IDENTIFIER  desplazar e ir al estado 211

    id_list  ir al estado 214


estado 179

   42 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER . ';'

    ';'  desplazar e ir al estado 215


estado 180

   10 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 216


estado 181

   92 arg_list: arg_list ',' IDENTIFIER '=' . expr

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 217


estado 182

   14 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 218


estado 183

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' IDENTIFIER ')' . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 219


estado 184

   89 enum_values: IDENTIFIER '=' . INTEGER_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 220


estado 185

   88 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values '}' .

    $default  reduce usando la regla 88 (inline_enum_type)


estado 186

   90 enum_values: enum_values ',' . IDENTIFIER '=' INTEGER_LITERAL

    IDENTIFIER  desplazar e ir al estado 221


estado 187

   59 numeric_type: KW_NUMERIC '(' expr ',' expr . ']'
   61             | KW_NUMERIC '(' expr ',' expr . ')'

    ')'  desplazar e ir al estado 222
    ']'  desplazar e ir al estado 223


estado 188

   58 numeric_type: KW_NUMERIC '[' expr ',' expr . ']'
   60             | KW_NUMERIC '[' expr ',' expr . ')'

    ')'  desplazar e ir al estado 224
    ']'  desplazar e ir al estado 225


estado 189

   63 int_type: KW_INT '(' expr ',' expr . ']'
   65         | KW_INT '(' expr ',' expr . ')'

    ')'  desplazar e ir al estado 226
    ']'  desplazar e ir al estado 227


estado 190

   62 int_type: KW_INT '[' expr ',' expr . ']'
   64         | KW_INT '[' expr ',' expr . ')'

    ')'  desplazar e ir al estado 228
    ']'  desplazar e ir al estado 229


estado 191

   67 integer_type: KW_INTEGER '(' expr ',' expr . ']'
   69             | KW_INTEGER '(' expr ',' expr . ')'

    ')'  desplazar e ir al estado 230
    ']'  desplazar e ir al estado 231


estado 192

   66 integer_type: KW_INTEGER '[' expr ',' expr . ']'
   68             | KW_INTEGER '[' expr ',' expr . ')'

    ')'  desplazar e ir al estado 232
    ']'  desplazar e ir al estado 233


estado 193

   71 fixed_point_type: KW_FIXED_POINT '(' expr ',' expr . ',' expr ']'
   73                 | KW_FIXED_POINT '(' expr ',' expr . ',' expr ')'

    ','  desplazar e ir al estado 234


estado 194

   70 fixed_point_type: KW_FIXED_POINT '[' expr ',' expr . ',' expr ']'
   72                 | KW_FIXED_POINT '[' expr ',' expr . ',' expr ')'

    ','  desplazar e ir al estado 235


estado 195

   74 floating_point_type: KW_FLOATING_POINT '(' expr ',' expr . ')'

    ')'  desplazar e ir al estado 236


estado 196

   77 character_string_type: KW_CHARACTER_STRING '{' expr '}' '[' . expr ',' expr ']'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 237


estado 197

   78 bit_string_type: KW_BIT_STRING '[' expr ',' expr . ']'

    ']'  desplazar e ir al estado 238


estado 198

   81 sequence_type: IDENTIFIER . '<' data_type '>'
   82              | IDENTIFIER . '<' IDENTIFIER '>'
   86 dictionary_type: KW_DICTIONARY '<' IDENTIFIER ',' IDENTIFIER . '>'

    '<'  desplazar e ir al estado 73
    '>'  desplazar e ir al estado 239


estado 199

   84 dictionary_type: KW_DICTIONARY '<' IDENTIFIER ',' data_type . '>'

    '>'  desplazar e ir al estado 240


estado 200

   81 sequence_type: IDENTIFIER . '<' data_type '>'
   82              | IDENTIFIER . '<' IDENTIFIER '>'
   85 dictionary_type: KW_DICTIONARY '<' data_type ',' IDENTIFIER . '>'

    '<'  desplazar e ir al estado 73
    '>'  desplazar e ir al estado 241


estado 201

   83 dictionary_type: KW_DICTIONARY '<' data_type ',' data_type . '>'

    '>'  desplazar e ir al estado 242


estado 202

   24 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER ';' .

    $default  reduce usando la regla 24 (data_element)


estado 203

   27 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' . arg_list ')' ';'

    IDENTIFIER  desplazar e ir al estado 62

    arg_list  ir al estado 243


estado 204

   21 data_element: KW_EXTEND IDENTIFIER KW_TO data_type ';' .

    $default  reduce usando la regla 21 (data_element)


estado 205

   23 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 244


estado 206

   22 data_element: IDENTIFIER . IDENTIFIER ';'
   23             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   25             | IDENTIFIER . '(' arg_list ')' IDENTIFIER ';'
   25             | IDENTIFIER '(' arg_list ')' IDENTIFIER . ';'
   26             | IDENTIFIER . '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   26             | IDENTIFIER '(' arg_list ')' IDENTIFIER . KW_DEFAULT '=' expr ';'
   28 data_group_begin: IDENTIFIER . '{'
   29                 | IDENTIFIER . '(' arg_list ')' '{'
   33 data_group: IDENTIFIER . data_element
   34           | IDENTIFIER . '(' arg_list ')' data_element
   35           | IDENTIFIER . data_group
   36           | IDENTIFIER . '(' arg_list ')' data_group
   81 sequence_type: IDENTIFIER . '<' data_type '>'
   82              | IDENTIFIER . '<' IDENTIFIER '>'

    KW_ENUM              desplazar e ir al estado 19
    KW_CLASS             desplazar e ir al estado 20
    KW_NUMERIC           desplazar e ir al estado 21
    KW_INT               desplazar e ir al estado 22
    KW_EXTEND            desplazar e ir al estado 49
    KW_DEFAULT           desplazar e ir al estado 245
    IDENTIFIER           desplazar e ir al estado 90
    KW_INTEGER           desplazar e ir al estado 24
    KW_FIXED_POINT       desplazar e ir al estado 25
    KW_FLOATING_POINT    desplazar e ir al estado 26
    KW_CHARACTER         desplazar e ir al estado 27
    KW_CHARACTER_STRING  desplazar e ir al estado 28
    KW_BIT_STRING        desplazar e ir al estado 29
    KW_SEQUENCE          desplazar e ir al estado 30
    KW_DICTIONARY        desplazar e ir al estado 31
    '{'                  desplazar e ir al estado 91
    ';'                  desplazar e ir al estado 246
    '('                  desplazar e ir al estado 92
    '<'                  desplazar e ir al estado 73

    data_element           ir al estado 93
    data_group_begin       ir al estado 54
    data_group             ir al estado 94
    data_type              ir al estado 56
    numeric_type           ir al estado 34
    int_type               ir al estado 35
    integer_type           ir al estado 36
    fixed_point_type       ir al estado 37
    floating_point_type    ir al estado 38
    character_type         ir al estado 39
    character_string_type  ir al estado 40
    bit_string_type        ir al estado 41
    sequence_type          ir al estado 42
    dictionary_type        ir al estado 43
    class_ref_type         ir al estado 44
    inline_enum_type       ir al estado 45


estado 207

   29 data_group_begin: IDENTIFIER '(' arg_list ')' '{' .

    $default  reduce usando la regla 29 (data_group_begin)


estado 208

   34 data_group: IDENTIFIER '(' arg_list ')' data_element .

    $default  reduce usando la regla 34 (data_group)


estado 209

   36 data_group: IDENTIFIER '(' arg_list ')' data_group .

    $default  reduce usando la regla 36 (data_group)


estado 210

   20 data_element: data_type IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 247


estado 211

   93 id_list: IDENTIFIER .

    $default  reduce usando la regla 93 (id_list)


estado 212

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list . '}' ';'
   94 id_list: id_list . ',' IDENTIFIER

    '}'  desplazar e ir al estado 248
    ','  desplazar e ir al estado 249


estado 213

   45 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';' .

    $default  reduce usando la regla 45 (union_data_element)


estado 214

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list . '}' ';'
   94 id_list: id_list . ',' IDENTIFIER

    '}'  desplazar e ir al estado 250
    ','  desplazar e ir al estado 249


estado 215

   42 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';' .

    $default  reduce usando la regla 42 (union_data_element)


estado 216

   10 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 10 (mapping_begin)


estado 217

   92 arg_list: arg_list ',' IDENTIFIER '=' expr .

    $default  reduce usando la regla 92 (arg_list)


estado 218

   14 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 14 (encoding_begin)


estado 219

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' IDENTIFIER ')' IDENTIFIER . '{'

    '{'  desplazar e ir al estado 251


estado 220

   89 enum_values: IDENTIFIER '=' INTEGER_LITERAL .

    $default  reduce usando la regla 89 (enum_values)


estado 221

   90 enum_values: enum_values ',' IDENTIFIER . '=' INTEGER_LITERAL

    '='  desplazar e ir al estado 252


estado 222

   61 numeric_type: KW_NUMERIC '(' expr ',' expr ')' .

    $default  reduce usando la regla 61 (numeric_type)


estado 223

   59 numeric_type: KW_NUMERIC '(' expr ',' expr ']' .

    $default  reduce usando la regla 59 (numeric_type)


estado 224

   60 numeric_type: KW_NUMERIC '[' expr ',' expr ')' .

    $default  reduce usando la regla 60 (numeric_type)


estado 225

   58 numeric_type: KW_NUMERIC '[' expr ',' expr ']' .

    $default  reduce usando la regla 58 (numeric_type)


estado 226

   65 int_type: KW_INT '(' expr ',' expr ')' .

    $default  reduce usando la regla 65 (int_type)


estado 227

   63 int_type: KW_INT '(' expr ',' expr ']' .

    $default  reduce usando la regla 63 (int_type)


estado 228

   64 int_type: KW_INT '[' expr ',' expr ')' .

    $default  reduce usando la regla 64 (int_type)


estado 229

   62 int_type: KW_INT '[' expr ',' expr ']' .

    $default  reduce usando la regla 62 (int_type)


estado 230

   69 integer_type: KW_INTEGER '(' expr ',' expr ')' .

    $default  reduce usando la regla 69 (integer_type)


estado 231

   67 integer_type: KW_INTEGER '(' expr ',' expr ']' .

    $default  reduce usando la regla 67 (integer_type)


estado 232

   68 integer_type: KW_INTEGER '[' expr ',' expr ')' .

    $default  reduce usando la regla 68 (integer_type)


estado 233

   66 integer_type: KW_INTEGER '[' expr ',' expr ']' .

    $default  reduce usando la regla 66 (integer_type)


estado 234

   71 fixed_point_type: KW_FIXED_POINT '(' expr ',' expr ',' . expr ']'
   73                 | KW_FIXED_POINT '(' expr ',' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 253


estado 235

   70 fixed_point_type: KW_FIXED_POINT '[' expr ',' expr ',' . expr ']'
   72                 | KW_FIXED_POINT '[' expr ',' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 254


estado 236

   74 floating_point_type: KW_FLOATING_POINT '(' expr ',' expr ')' .

    $default  reduce usando la regla 74 (floating_point_type)


estado 237

   77 character_string_type: KW_CHARACTER_STRING '{' expr '}' '[' expr . ',' expr ']'

    ','  desplazar e ir al estado 255


estado 238

   78 bit_string_type: KW_BIT_STRING '[' expr ',' expr ']' .

    $default  reduce usando la regla 78 (bit_string_type)


estado 239

   86 dictionary_type: KW_DICTIONARY '<' IDENTIFIER ',' IDENTIFIER '>' .

    $default  reduce usando la regla 86 (dictionary_type)


estado 240

   84 dictionary_type: KW_DICTIONARY '<' IDENTIFIER ',' data_type '>' .

    $default  reduce usando la regla 84 (dictionary_type)


estado 241

   85 dictionary_type: KW_DICTIONARY '<' data_type ',' IDENTIFIER '>' .

    $default  reduce usando la regla 85 (dictionary_type)


estado 242

   83 dictionary_type: KW_DICTIONARY '<' data_type ',' data_type '>' .

    $default  reduce usando la regla 83 (dictionary_type)


estado 243

   27 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list . ')' ';'
   92 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 256
    ','  desplazar e ir al estado 105


estado 244

   23 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 23 (data_element)


estado 245

   26 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 257


estado 246

   25 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER ';' .

    $default  reduce usando la regla 25 (data_element)


estado 247

   20 data_element: data_type IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 20 (data_element)


estado 248

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' . ';'

    ';'  desplazar e ir al estado 258


estado 249

   94 id_list: id_list ',' . IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 259


estado 250

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' . ';'

    ';'  desplazar e ir al estado 260


estado 251

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' IDENTIFIER ')' IDENTIFIER '{' .

    $default  reduce usando la regla 37 (discriminated_union_begin)


estado 252

   90 enum_values: enum_values ',' IDENTIFIER '=' . INTEGER_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 261


estado 253

   71 fixed_point_type: KW_FIXED_POINT '(' expr ',' expr ',' expr . ']'
   73                 | KW_FIXED_POINT '(' expr ',' expr ',' expr . ')'

    ')'  desplazar e ir al estado 262
    ']'  desplazar e ir al estado 263


estado 254

   70 fixed_point_type: KW_FIXED_POINT '[' expr ',' expr ',' expr . ']'
   72                 | KW_FIXED_POINT '[' expr ',' expr ',' expr . ')'

    ')'  desplazar e ir al estado 264
    ']'  desplazar e ir al estado 265


estado 255

   77 character_string_type: KW_CHARACTER_STRING '{' expr '}' '[' expr ',' . expr ']'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 266


estado 256

   27 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' . ';'

    ';'  desplazar e ir al estado 267


estado 257

   26 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' . expr ';'

    STRING_LITERAL   desplazar e ir al estado 109
    INTEGER_LITERAL  desplazar e ir al estado 110
    FLOAT_LITERAL    desplazar e ir al estado 111

    expr  ir al estado 268


estado 258

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';' .

    $default  reduce usando la regla 44 (union_data_element)


estado 259

   94 id_list: id_list ',' IDENTIFIER .

    $default  reduce usando la regla 94 (id_list)


estado 260

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';' .

    $default  reduce usando la regla 41 (union_data_element)


estado 261

   90 enum_values: enum_values ',' IDENTIFIER '=' INTEGER_LITERAL .

    $default  reduce usando la regla 90 (enum_values)


estado 262

   73 fixed_point_type: KW_FIXED_POINT '(' expr ',' expr ',' expr ')' .

    $default  reduce usando la regla 73 (fixed_point_type)


estado 263

   71 fixed_point_type: KW_FIXED_POINT '(' expr ',' expr ',' expr ']' .

    $default  reduce usando la regla 71 (fixed_point_type)


estado 264

   72 fixed_point_type: KW_FIXED_POINT '[' expr ',' expr ',' expr ')' .

    $default  reduce usando la regla 72 (fixed_point_type)


estado 265

   70 fixed_point_type: KW_FIXED_POINT '[' expr ',' expr ',' expr ']' .

    $default  reduce usando la regla 70 (fixed_point_type)


estado 266

   77 character_string_type: KW_CHARACTER_STRING '{' expr '}' '[' expr ',' expr . ']'

    ']'  desplazar e ir al estado 269


estado 267

   27 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' ';' .

    $default  reduce usando la regla 27 (data_element)


estado 268

   26 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 270


estado 269

   77 character_string_type: KW_CHARACTER_STRING '{' expr '}' '[' expr ',' expr ']' .

    $default  reduce usando la regla 77 (character_string_type)


estado 270

   26 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 26 (data_element)
