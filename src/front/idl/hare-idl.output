Terminals unused in grammar

   CHAR_LITERAL


Gramática

    0 $accept: file $end

    1 file: /* vacío */
    2     | file publishable_struct
    3     | file mapping
    4     | file encoding

    5 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
    6                         | publishable_struct_begin data_type IDENTIFIER ';'
    7                         | publishable_struct_begin IDENTIFIER IDENTIFIER ';'

    8 publishable_struct: publishable_struct_begin '}' ';'

    9 mapping_begin: KW_MAPPING '(' str_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   10              | mapping_begin data_type IDENTIFIER ';'
   11              | mapping_begin IDENTIFIER IDENTIFIER ';'

   12 mapping: mapping_begin '}' ';'

   13 encoding_begin: KW_ENCODING '(' STRING_LITERAL ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   14               | encoding_begin data_element
   15               | encoding_begin data_group
   16               | encoding_begin KW_FENCE

   17 encoding: encoding_begin '}' ';'

   18 data_element: data_type IDENTIFIER ';'
   19             | data_type IDENTIFIER KW_DEFAULT '=' expr ';'
   20             | IDENTIFIER IDENTIFIER ';'
   21             | IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr ';'
   22             | KW_EXTEND IDENTIFIER KW_TO data_type ';'
   23             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER ';'

   24 data_group_begin: IDENTIFIER '{'
   25                 | IDENTIFIER '(' arg_list ')' '{'
   26                 | data_group_begin data_element
   27                 | data_group_begin data_group

   28 data_group: data_group_begin '}'
   29           | IDENTIFIER data_element
   30           | IDENTIFIER '(' arg_list ')' data_element
   31           | IDENTIFIER data_group
   32           | IDENTIFIER '(' arg_list ')' data_group

   33 data_type: numeric_type
   34          | int_type
   35          | sequence_type
   36          | inline_enum_type
   37          | class_ref_type
   38          | bit_type
   39          | fixed_point_type

   40 numeric_type: KW_NUMERIC '[' expr ',' expr ']'
   41             | KW_NUMERIC '(' expr ',' expr ']'
   42             | KW_NUMERIC '[' expr ',' expr ')'
   43             | KW_NUMERIC '(' expr ',' expr ')'

   44 int_type: KW_INT '[' expr ',' expr ']'
   45         | KW_INT '(' expr ',' expr ']'
   46         | KW_INT '[' expr ',' expr ')'
   47         | KW_INT '(' expr ',' expr ')'

   48 fixed_point_type: KW_FIXED_POINT '(' expr ')'

   49 bit_type: KW_BIT '(' expr ')'

   50 sequence_type: KW_SEQUENCE '<' IDENTIFIER '>'

   51 class_ref_type: KW_CLASS IDENTIFIER

   52 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values '}'

   53 enum_values: IDENTIFIER '=' INTEGER_LITERAL
   54            | enum_values ',' IDENTIFIER '=' INTEGER_LITERAL

   55 str_list: STRING_LITERAL
   56         | str_list ',' STRING_LITERAL

   57 arg_list: expr
   58         | arg_list ',' expr

   59 expr: INTEGER_LITERAL
   60     | FLOAT_LITERAL
   61     | IDENTIFIER


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 9 13 25 30 32 41 43 45 47 48 49
')' (41) 9 13 25 30 32 42 43 46 47 48 49
',' (44) 40 41 42 43 44 45 46 47 54 56 58
';' (59) 6 7 8 10 11 12 17 18 19 20 21 22 23
'<' (60) 50
'=' (61) 19 21 53 54
'>' (62) 50
'[' (91) 40 42 44 46
']' (93) 40 41 44 45
'{' (123) 5 9 13 24 25 52
'}' (125) 8 12 17 28 52
error (256)
KW_PUBLISHABLE_STRUCT (258) 5 9 13
KW_ENUM (259) 52
KW_CLASS (260) 51
KW_MAPPING (261) 9
KW_ENCODING (262) 13
KW_NUMERIC (263) 40 41 42 43
KW_INT (264) 44 45 46 47
KW_SEQUENCE (265) 50
KW_FIXED_POINT (266) 48
KW_BIT (267) 49
KW_EXTEND (268) 22 23
KW_TO (269) 22 23
KW_DEFAULT (270) 19 21
KW_FENCE (271) 16
IDENTIFIER (272) 5 6 7 9 10 11 13 18 19 20 21 22 23 24 25 29 30 31
    32 50 51 52 53 54 61
STRING_LITERAL (273) 13 55 56
INTEGER_LITERAL (274) 53 54 59
CHAR_LITERAL (275)
FLOAT_LITERAL (276) 60


No terminales con las reglas donde aparecen

$accept (33)
    en la izquierda: 0
file (34)
    en la izquierda: 1 2 3 4, en la derecha: 0 2 3 4
publishable_struct_begin (35)
    en la izquierda: 5 6 7, en la derecha: 6 7 8
publishable_struct (36)
    en la izquierda: 8, en la derecha: 2
mapping_begin (37)
    en la izquierda: 9 10 11, en la derecha: 10 11 12
mapping (38)
    en la izquierda: 12, en la derecha: 3
encoding_begin (39)
    en la izquierda: 13 14 15 16, en la derecha: 14 15 16 17
encoding (40)
    en la izquierda: 17, en la derecha: 4
data_element (41)
    en la izquierda: 18 19 20 21 22 23, en la derecha: 14 26 29 30
data_group_begin (42)
    en la izquierda: 24 25 26 27, en la derecha: 26 27 28
data_group (43)
    en la izquierda: 28 29 30 31 32, en la derecha: 15 27 31 32
data_type (44)
    en la izquierda: 33 34 35 36 37 38 39, en la derecha: 6 10 18 19
    22
numeric_type (45)
    en la izquierda: 40 41 42 43, en la derecha: 33
int_type (46)
    en la izquierda: 44 45 46 47, en la derecha: 34
fixed_point_type (47)
    en la izquierda: 48, en la derecha: 39
bit_type (48)
    en la izquierda: 49, en la derecha: 38
sequence_type (49)
    en la izquierda: 50, en la derecha: 35
class_ref_type (50)
    en la izquierda: 51, en la derecha: 37
inline_enum_type (51)
    en la izquierda: 52, en la derecha: 36
enum_values (52)
    en la izquierda: 53 54, en la derecha: 52 54
str_list (53)
    en la izquierda: 55 56, en la derecha: 9 56
arg_list (54)
    en la izquierda: 57 58, en la derecha: 25 30 32 58
expr (55)
    en la izquierda: 59 60 61, en la derecha: 19 21 40 41 42 43 44
    45 46 47 48 49 57 58


estado 0

    0 $accept: . file $end

    $default  reduce usando la regla 1 (file)

    file  ir al estado 1


estado 1

    0 $accept: file . $end
    2 file: file . publishable_struct
    3     | file . mapping
    4     | file . encoding

    $end                   desplazar e ir al estado 2
    KW_PUBLISHABLE_STRUCT  desplazar e ir al estado 3
    KW_MAPPING             desplazar e ir al estado 4
    KW_ENCODING            desplazar e ir al estado 5

    publishable_struct_begin  ir al estado 6
    publishable_struct        ir al estado 7
    mapping_begin             ir al estado 8
    mapping                   ir al estado 9
    encoding_begin            ir al estado 10
    encoding                  ir al estado 11


estado 2

    0 $accept: file $end .

    $default  aceptar


estado 3

    5 publishable_struct_begin: KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 12


estado 4

    9 mapping_begin: KW_MAPPING . '(' str_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    '('  desplazar e ir al estado 13


estado 5

   13 encoding_begin: KW_ENCODING . '(' STRING_LITERAL ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    '('  desplazar e ir al estado 14


estado 6

    6 publishable_struct_begin: publishable_struct_begin . data_type IDENTIFIER ';'
    7                         | publishable_struct_begin . IDENTIFIER IDENTIFIER ';'
    8 publishable_struct: publishable_struct_begin . '}' ';'

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    IDENTIFIER      desplazar e ir al estado 22
    '}'             desplazar e ir al estado 23

    data_type         ir al estado 24
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 7

    2 file: file publishable_struct .

    $default  reduce usando la regla 2 (file)


estado 8

   10 mapping_begin: mapping_begin . data_type IDENTIFIER ';'
   11              | mapping_begin . IDENTIFIER IDENTIFIER ';'
   12 mapping: mapping_begin . '}' ';'

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    IDENTIFIER      desplazar e ir al estado 32
    '}'             desplazar e ir al estado 33

    data_type         ir al estado 34
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 9

    3 file: file mapping .

    $default  reduce usando la regla 3 (file)


estado 10

   14 encoding_begin: encoding_begin . data_element
   15               | encoding_begin . data_group
   16               | encoding_begin . KW_FENCE
   17 encoding: encoding_begin . '}' ';'

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    KW_EXTEND       desplazar e ir al estado 35
    KW_FENCE        desplazar e ir al estado 36
    IDENTIFIER      desplazar e ir al estado 37
    '}'             desplazar e ir al estado 38

    data_element      ir al estado 39
    data_group_begin  ir al estado 40
    data_group        ir al estado 41
    data_type         ir al estado 42
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 11

    4 file: file encoding .

    $default  reduce usando la regla 4 (file)


estado 12

    5 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 43


estado 13

    9 mapping_begin: KW_MAPPING '(' . str_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    STRING_LITERAL  desplazar e ir al estado 44

    str_list  ir al estado 45


estado 14

   13 encoding_begin: KW_ENCODING '(' . STRING_LITERAL ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    STRING_LITERAL  desplazar e ir al estado 46


estado 15

   52 inline_enum_type: KW_ENUM . IDENTIFIER '{' enum_values '}'

    IDENTIFIER  desplazar e ir al estado 47


estado 16

   51 class_ref_type: KW_CLASS . IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 48


estado 17

   40 numeric_type: KW_NUMERIC . '[' expr ',' expr ']'
   41             | KW_NUMERIC . '(' expr ',' expr ']'
   42             | KW_NUMERIC . '[' expr ',' expr ')'
   43             | KW_NUMERIC . '(' expr ',' expr ')'

    '('  desplazar e ir al estado 49
    '['  desplazar e ir al estado 50


estado 18

   44 int_type: KW_INT . '[' expr ',' expr ']'
   45         | KW_INT . '(' expr ',' expr ']'
   46         | KW_INT . '[' expr ',' expr ')'
   47         | KW_INT . '(' expr ',' expr ')'

    '('  desplazar e ir al estado 51
    '['  desplazar e ir al estado 52


estado 19

   50 sequence_type: KW_SEQUENCE . '<' IDENTIFIER '>'

    '<'  desplazar e ir al estado 53


estado 20

   48 fixed_point_type: KW_FIXED_POINT . '(' expr ')'

    '('  desplazar e ir al estado 54


estado 21

   49 bit_type: KW_BIT . '(' expr ')'

    '('  desplazar e ir al estado 55


estado 22

    7 publishable_struct_begin: publishable_struct_begin IDENTIFIER . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 56


estado 23

    8 publishable_struct: publishable_struct_begin '}' . ';'

    ';'  desplazar e ir al estado 57


estado 24

    6 publishable_struct_begin: publishable_struct_begin data_type . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 58


estado 25

   33 data_type: numeric_type .

    $default  reduce usando la regla 33 (data_type)


estado 26

   34 data_type: int_type .

    $default  reduce usando la regla 34 (data_type)


estado 27

   39 data_type: fixed_point_type .

    $default  reduce usando la regla 39 (data_type)


estado 28

   38 data_type: bit_type .

    $default  reduce usando la regla 38 (data_type)


estado 29

   35 data_type: sequence_type .

    $default  reduce usando la regla 35 (data_type)


estado 30

   37 data_type: class_ref_type .

    $default  reduce usando la regla 37 (data_type)


estado 31

   36 data_type: inline_enum_type .

    $default  reduce usando la regla 36 (data_type)


estado 32

   11 mapping_begin: mapping_begin IDENTIFIER . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 59


estado 33

   12 mapping: mapping_begin '}' . ';'

    ';'  desplazar e ir al estado 60


estado 34

   10 mapping_begin: mapping_begin data_type . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 61


estado 35

   22 data_element: KW_EXTEND . IDENTIFIER KW_TO data_type ';'
   23             | KW_EXTEND . IDENTIFIER KW_TO IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 62


estado 36

   16 encoding_begin: encoding_begin KW_FENCE .

    $default  reduce usando la regla 16 (encoding_begin)


estado 37

   20 data_element: IDENTIFIER . IDENTIFIER ';'
   21             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   24 data_group_begin: IDENTIFIER . '{'
   25                 | IDENTIFIER . '(' arg_list ')' '{'
   29 data_group: IDENTIFIER . data_element
   30           | IDENTIFIER . '(' arg_list ')' data_element
   31           | IDENTIFIER . data_group
   32           | IDENTIFIER . '(' arg_list ')' data_group

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    KW_EXTEND       desplazar e ir al estado 35
    IDENTIFIER      desplazar e ir al estado 63
    '{'             desplazar e ir al estado 64
    '('             desplazar e ir al estado 65

    data_element      ir al estado 66
    data_group_begin  ir al estado 40
    data_group        ir al estado 67
    data_type         ir al estado 42
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 38

   17 encoding: encoding_begin '}' . ';'

    ';'  desplazar e ir al estado 68


estado 39

   14 encoding_begin: encoding_begin data_element .

    $default  reduce usando la regla 14 (encoding_begin)


estado 40

   26 data_group_begin: data_group_begin . data_element
   27                 | data_group_begin . data_group
   28 data_group: data_group_begin . '}'

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    KW_EXTEND       desplazar e ir al estado 35
    IDENTIFIER      desplazar e ir al estado 37
    '}'             desplazar e ir al estado 69

    data_element      ir al estado 70
    data_group_begin  ir al estado 40
    data_group        ir al estado 71
    data_type         ir al estado 42
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 41

   15 encoding_begin: encoding_begin data_group .

    $default  reduce usando la regla 15 (encoding_begin)


estado 42

   18 data_element: data_type . IDENTIFIER ';'
   19             | data_type . IDENTIFIER KW_DEFAULT '=' expr ';'

    IDENTIFIER  desplazar e ir al estado 72


estado 43

    5 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 5 (publishable_struct_begin)


estado 44

   55 str_list: STRING_LITERAL .

    $default  reduce usando la regla 55 (str_list)


estado 45

    9 mapping_begin: KW_MAPPING '(' str_list . ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   56 str_list: str_list . ',' STRING_LITERAL

    ')'  desplazar e ir al estado 73
    ','  desplazar e ir al estado 74


estado 46

   13 encoding_begin: KW_ENCODING '(' STRING_LITERAL . ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    ')'  desplazar e ir al estado 75


estado 47

   52 inline_enum_type: KW_ENUM IDENTIFIER . '{' enum_values '}'

    '{'  desplazar e ir al estado 76


estado 48

   51 class_ref_type: KW_CLASS IDENTIFIER .

    $default  reduce usando la regla 51 (class_ref_type)


estado 49

   41 numeric_type: KW_NUMERIC '(' . expr ',' expr ']'
   43             | KW_NUMERIC '(' . expr ',' expr ')'

    IDENTIFIER       desplazar e ir al estado 77
    INTEGER_LITERAL  desplazar e ir al estado 78
    FLOAT_LITERAL    desplazar e ir al estado 79

    expr  ir al estado 80


estado 50

   40 numeric_type: KW_NUMERIC '[' . expr ',' expr ']'
   42             | KW_NUMERIC '[' . expr ',' expr ')'

    IDENTIFIER       desplazar e ir al estado 77
    INTEGER_LITERAL  desplazar e ir al estado 78
    FLOAT_LITERAL    desplazar e ir al estado 79

    expr  ir al estado 81


estado 51

   45 int_type: KW_INT '(' . expr ',' expr ']'
   47         | KW_INT '(' . expr ',' expr ')'

    IDENTIFIER       desplazar e ir al estado 77
    INTEGER_LITERAL  desplazar e ir al estado 78
    FLOAT_LITERAL    desplazar e ir al estado 79

    expr  ir al estado 82


estado 52

   44 int_type: KW_INT '[' . expr ',' expr ']'
   46         | KW_INT '[' . expr ',' expr ')'

    IDENTIFIER       desplazar e ir al estado 77
    INTEGER_LITERAL  desplazar e ir al estado 78
    FLOAT_LITERAL    desplazar e ir al estado 79

    expr  ir al estado 83


estado 53

   50 sequence_type: KW_SEQUENCE '<' . IDENTIFIER '>'

    IDENTIFIER  desplazar e ir al estado 84


estado 54

   48 fixed_point_type: KW_FIXED_POINT '(' . expr ')'

    IDENTIFIER       desplazar e ir al estado 77
    INTEGER_LITERAL  desplazar e ir al estado 78
    FLOAT_LITERAL    desplazar e ir al estado 79

    expr  ir al estado 85


estado 55

   49 bit_type: KW_BIT '(' . expr ')'

    IDENTIFIER       desplazar e ir al estado 77
    INTEGER_LITERAL  desplazar e ir al estado 78
    FLOAT_LITERAL    desplazar e ir al estado 79

    expr  ir al estado 86


estado 56

    7 publishable_struct_begin: publishable_struct_begin IDENTIFIER IDENTIFIER . ';'

    ';'  desplazar e ir al estado 87


estado 57

    8 publishable_struct: publishable_struct_begin '}' ';' .

    $default  reduce usando la regla 8 (publishable_struct)


estado 58

    6 publishable_struct_begin: publishable_struct_begin data_type IDENTIFIER . ';'

    ';'  desplazar e ir al estado 88


estado 59

   11 mapping_begin: mapping_begin IDENTIFIER IDENTIFIER . ';'

    ';'  desplazar e ir al estado 89


estado 60

   12 mapping: mapping_begin '}' ';' .

    $default  reduce usando la regla 12 (mapping)


estado 61

   10 mapping_begin: mapping_begin data_type IDENTIFIER . ';'

    ';'  desplazar e ir al estado 90


estado 62

   22 data_element: KW_EXTEND IDENTIFIER . KW_TO data_type ';'
   23             | KW_EXTEND IDENTIFIER . KW_TO IDENTIFIER ';'

    KW_TO  desplazar e ir al estado 91


estado 63

   20 data_element: IDENTIFIER . IDENTIFIER ';'
   20             | IDENTIFIER IDENTIFIER . ';'
   21             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   21             | IDENTIFIER IDENTIFIER . KW_DEFAULT '=' expr ';'
   24 data_group_begin: IDENTIFIER . '{'
   25                 | IDENTIFIER . '(' arg_list ')' '{'
   29 data_group: IDENTIFIER . data_element
   30           | IDENTIFIER . '(' arg_list ')' data_element
   31           | IDENTIFIER . data_group
   32           | IDENTIFIER . '(' arg_list ')' data_group

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    KW_EXTEND       desplazar e ir al estado 35
    KW_DEFAULT      desplazar e ir al estado 92
    IDENTIFIER      desplazar e ir al estado 63
    '{'             desplazar e ir al estado 64
    ';'             desplazar e ir al estado 93
    '('             desplazar e ir al estado 65

    data_element      ir al estado 66
    data_group_begin  ir al estado 40
    data_group        ir al estado 67
    data_type         ir al estado 42
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 64

   24 data_group_begin: IDENTIFIER '{' .

    $default  reduce usando la regla 24 (data_group_begin)


estado 65

   25 data_group_begin: IDENTIFIER '(' . arg_list ')' '{'
   30 data_group: IDENTIFIER '(' . arg_list ')' data_element
   32           | IDENTIFIER '(' . arg_list ')' data_group

    IDENTIFIER       desplazar e ir al estado 77
    INTEGER_LITERAL  desplazar e ir al estado 78
    FLOAT_LITERAL    desplazar e ir al estado 79

    arg_list  ir al estado 94
    expr      ir al estado 95


estado 66

   29 data_group: IDENTIFIER data_element .

    $default  reduce usando la regla 29 (data_group)


estado 67

   31 data_group: IDENTIFIER data_group .

    $default  reduce usando la regla 31 (data_group)


estado 68

   17 encoding: encoding_begin '}' ';' .

    $default  reduce usando la regla 17 (encoding)


estado 69

   28 data_group: data_group_begin '}' .

    $default  reduce usando la regla 28 (data_group)


estado 70

   26 data_group_begin: data_group_begin data_element .

    $default  reduce usando la regla 26 (data_group_begin)


estado 71

   27 data_group_begin: data_group_begin data_group .

    $default  reduce usando la regla 27 (data_group_begin)


estado 72

   18 data_element: data_type IDENTIFIER . ';'
   19             | data_type IDENTIFIER . KW_DEFAULT '=' expr ';'

    KW_DEFAULT  desplazar e ir al estado 96
    ';'         desplazar e ir al estado 97


estado 73

    9 mapping_begin: KW_MAPPING '(' str_list ')' . KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    KW_PUBLISHABLE_STRUCT  desplazar e ir al estado 98


estado 74

   56 str_list: str_list ',' . STRING_LITERAL

    STRING_LITERAL  desplazar e ir al estado 99


estado 75

   13 encoding_begin: KW_ENCODING '(' STRING_LITERAL ')' . KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    KW_PUBLISHABLE_STRUCT  desplazar e ir al estado 100


estado 76

   52 inline_enum_type: KW_ENUM IDENTIFIER '{' . enum_values '}'

    IDENTIFIER  desplazar e ir al estado 101

    enum_values  ir al estado 102


estado 77

   61 expr: IDENTIFIER .

    $default  reduce usando la regla 61 (expr)


estado 78

   59 expr: INTEGER_LITERAL .

    $default  reduce usando la regla 59 (expr)


estado 79

   60 expr: FLOAT_LITERAL .

    $default  reduce usando la regla 60 (expr)


estado 80

   41 numeric_type: KW_NUMERIC '(' expr . ',' expr ']'
   43             | KW_NUMERIC '(' expr . ',' expr ')'

    ','  desplazar e ir al estado 103


estado 81

   40 numeric_type: KW_NUMERIC '[' expr . ',' expr ']'
   42             | KW_NUMERIC '[' expr . ',' expr ')'

    ','  desplazar e ir al estado 104


estado 82

   45 int_type: KW_INT '(' expr . ',' expr ']'
   47         | KW_INT '(' expr . ',' expr ')'

    ','  desplazar e ir al estado 105


estado 83

   44 int_type: KW_INT '[' expr . ',' expr ']'
   46         | KW_INT '[' expr . ',' expr ')'

    ','  desplazar e ir al estado 106


estado 84

   50 sequence_type: KW_SEQUENCE '<' IDENTIFIER . '>'

    '>'  desplazar e ir al estado 107


estado 85

   48 fixed_point_type: KW_FIXED_POINT '(' expr . ')'

    ')'  desplazar e ir al estado 108


estado 86

   49 bit_type: KW_BIT '(' expr . ')'

    ')'  desplazar e ir al estado 109


estado 87

    7 publishable_struct_begin: publishable_struct_begin IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 7 (publishable_struct_begin)


estado 88

    6 publishable_struct_begin: publishable_struct_begin data_type IDENTIFIER ';' .

    $default  reduce usando la regla 6 (publishable_struct_begin)


estado 89

   11 mapping_begin: mapping_begin IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 11 (mapping_begin)


estado 90

   10 mapping_begin: mapping_begin data_type IDENTIFIER ';' .

    $default  reduce usando la regla 10 (mapping_begin)


estado 91

   22 data_element: KW_EXTEND IDENTIFIER KW_TO . data_type ';'
   23             | KW_EXTEND IDENTIFIER KW_TO . IDENTIFIER ';'

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    IDENTIFIER      desplazar e ir al estado 110

    data_type         ir al estado 111
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 92

   21 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 112


estado 93

   20 data_element: IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 20 (data_element)


estado 94

   25 data_group_begin: IDENTIFIER '(' arg_list . ')' '{'
   30 data_group: IDENTIFIER '(' arg_list . ')' data_element
   32           | IDENTIFIER '(' arg_list . ')' data_group
   58 arg_list: arg_list . ',' expr

    ')'  desplazar e ir al estado 113
    ','  desplazar e ir al estado 114


estado 95

   57 arg_list: expr .

    $default  reduce usando la regla 57 (arg_list)


estado 96

   19 data_element: data_type IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 115


estado 97

   18 data_element: data_type IDENTIFIER ';' .

    $default  reduce usando la regla 18 (data_element)


estado 98

    9 mapping_begin: KW_MAPPING '(' str_list ')' KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 116


estado 99

   56 str_list: str_list ',' STRING_LITERAL .

    $default  reduce usando la regla 56 (str_list)


estado 100

   13 encoding_begin: KW_ENCODING '(' STRING_LITERAL ')' KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 117


estado 101

   53 enum_values: IDENTIFIER . '=' INTEGER_LITERAL

    '='  desplazar e ir al estado 118


estado 102

   52 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values . '}'
   54 enum_values: enum_values . ',' IDENTIFIER '=' INTEGER_LITERAL

    '}'  desplazar e ir al estado 119
    ','  desplazar e ir al estado 120


estado 103

   41 numeric_type: KW_NUMERIC '(' expr ',' . expr ']'
   43             | KW_NUMERIC '(' expr ',' . expr ')'

    IDENTIFIER       desplazar e ir al estado 77
    INTEGER_LITERAL  desplazar e ir al estado 78
    FLOAT_LITERAL    desplazar e ir al estado 79

    expr  ir al estado 121


estado 104

   40 numeric_type: KW_NUMERIC '[' expr ',' . expr ']'
   42             | KW_NUMERIC '[' expr ',' . expr ')'

    IDENTIFIER       desplazar e ir al estado 77
    INTEGER_LITERAL  desplazar e ir al estado 78
    FLOAT_LITERAL    desplazar e ir al estado 79

    expr  ir al estado 122


estado 105

   45 int_type: KW_INT '(' expr ',' . expr ']'
   47         | KW_INT '(' expr ',' . expr ')'

    IDENTIFIER       desplazar e ir al estado 77
    INTEGER_LITERAL  desplazar e ir al estado 78
    FLOAT_LITERAL    desplazar e ir al estado 79

    expr  ir al estado 123


estado 106

   44 int_type: KW_INT '[' expr ',' . expr ']'
   46         | KW_INT '[' expr ',' . expr ')'

    IDENTIFIER       desplazar e ir al estado 77
    INTEGER_LITERAL  desplazar e ir al estado 78
    FLOAT_LITERAL    desplazar e ir al estado 79

    expr  ir al estado 124


estado 107

   50 sequence_type: KW_SEQUENCE '<' IDENTIFIER '>' .

    $default  reduce usando la regla 50 (sequence_type)


estado 108

   48 fixed_point_type: KW_FIXED_POINT '(' expr ')' .

    $default  reduce usando la regla 48 (fixed_point_type)


estado 109

   49 bit_type: KW_BIT '(' expr ')' .

    $default  reduce usando la regla 49 (bit_type)


estado 110

   23 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER . ';'

    ';'  desplazar e ir al estado 125


estado 111

   22 data_element: KW_EXTEND IDENTIFIER KW_TO data_type . ';'

    ';'  desplazar e ir al estado 126


estado 112

   21 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' . expr ';'

    IDENTIFIER       desplazar e ir al estado 77
    INTEGER_LITERAL  desplazar e ir al estado 78
    FLOAT_LITERAL    desplazar e ir al estado 79

    expr  ir al estado 127


estado 113

   25 data_group_begin: IDENTIFIER '(' arg_list ')' . '{'
   30 data_group: IDENTIFIER '(' arg_list ')' . data_element
   32           | IDENTIFIER '(' arg_list ')' . data_group

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    KW_EXTEND       desplazar e ir al estado 35
    IDENTIFIER      desplazar e ir al estado 37
    '{'             desplazar e ir al estado 128

    data_element      ir al estado 129
    data_group_begin  ir al estado 40
    data_group        ir al estado 130
    data_type         ir al estado 42
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 114

   58 arg_list: arg_list ',' . expr

    IDENTIFIER       desplazar e ir al estado 77
    INTEGER_LITERAL  desplazar e ir al estado 78
    FLOAT_LITERAL    desplazar e ir al estado 79

    expr  ir al estado 131


estado 115

   19 data_element: data_type IDENTIFIER KW_DEFAULT '=' . expr ';'

    IDENTIFIER       desplazar e ir al estado 77
    INTEGER_LITERAL  desplazar e ir al estado 78
    FLOAT_LITERAL    desplazar e ir al estado 79

    expr  ir al estado 132


estado 116

    9 mapping_begin: KW_MAPPING '(' str_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 133


estado 117

   13 encoding_begin: KW_ENCODING '(' STRING_LITERAL ')' KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 134


estado 118

   53 enum_values: IDENTIFIER '=' . INTEGER_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 135


estado 119

   52 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values '}' .

    $default  reduce usando la regla 52 (inline_enum_type)


estado 120

   54 enum_values: enum_values ',' . IDENTIFIER '=' INTEGER_LITERAL

    IDENTIFIER  desplazar e ir al estado 136


estado 121

   41 numeric_type: KW_NUMERIC '(' expr ',' expr . ']'
   43             | KW_NUMERIC '(' expr ',' expr . ')'

    ')'  desplazar e ir al estado 137
    ']'  desplazar e ir al estado 138


estado 122

   40 numeric_type: KW_NUMERIC '[' expr ',' expr . ']'
   42             | KW_NUMERIC '[' expr ',' expr . ')'

    ')'  desplazar e ir al estado 139
    ']'  desplazar e ir al estado 140


estado 123

   45 int_type: KW_INT '(' expr ',' expr . ']'
   47         | KW_INT '(' expr ',' expr . ')'

    ')'  desplazar e ir al estado 141
    ']'  desplazar e ir al estado 142


estado 124

   44 int_type: KW_INT '[' expr ',' expr . ']'
   46         | KW_INT '[' expr ',' expr . ')'

    ')'  desplazar e ir al estado 143
    ']'  desplazar e ir al estado 144


estado 125

   23 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER ';' .

    $default  reduce usando la regla 23 (data_element)


estado 126

   22 data_element: KW_EXTEND IDENTIFIER KW_TO data_type ';' .

    $default  reduce usando la regla 22 (data_element)


estado 127

   21 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 145


estado 128

   25 data_group_begin: IDENTIFIER '(' arg_list ')' '{' .

    $default  reduce usando la regla 25 (data_group_begin)


estado 129

   30 data_group: IDENTIFIER '(' arg_list ')' data_element .

    $default  reduce usando la regla 30 (data_group)


estado 130

   32 data_group: IDENTIFIER '(' arg_list ')' data_group .

    $default  reduce usando la regla 32 (data_group)


estado 131

   58 arg_list: arg_list ',' expr .

    $default  reduce usando la regla 58 (arg_list)


estado 132

   19 data_element: data_type IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 146


estado 133

    9 mapping_begin: KW_MAPPING '(' str_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 9 (mapping_begin)


estado 134

   13 encoding_begin: KW_ENCODING '(' STRING_LITERAL ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 13 (encoding_begin)


estado 135

   53 enum_values: IDENTIFIER '=' INTEGER_LITERAL .

    $default  reduce usando la regla 53 (enum_values)


estado 136

   54 enum_values: enum_values ',' IDENTIFIER . '=' INTEGER_LITERAL

    '='  desplazar e ir al estado 147


estado 137

   43 numeric_type: KW_NUMERIC '(' expr ',' expr ')' .

    $default  reduce usando la regla 43 (numeric_type)


estado 138

   41 numeric_type: KW_NUMERIC '(' expr ',' expr ']' .

    $default  reduce usando la regla 41 (numeric_type)


estado 139

   42 numeric_type: KW_NUMERIC '[' expr ',' expr ')' .

    $default  reduce usando la regla 42 (numeric_type)


estado 140

   40 numeric_type: KW_NUMERIC '[' expr ',' expr ']' .

    $default  reduce usando la regla 40 (numeric_type)


estado 141

   47 int_type: KW_INT '(' expr ',' expr ')' .

    $default  reduce usando la regla 47 (int_type)


estado 142

   45 int_type: KW_INT '(' expr ',' expr ']' .

    $default  reduce usando la regla 45 (int_type)


estado 143

   46 int_type: KW_INT '[' expr ',' expr ')' .

    $default  reduce usando la regla 46 (int_type)


estado 144

   44 int_type: KW_INT '[' expr ',' expr ']' .

    $default  reduce usando la regla 44 (int_type)


estado 145

   21 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 21 (data_element)


estado 146

   19 data_element: data_type IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 19 (data_element)


estado 147

   54 enum_values: enum_values ',' IDENTIFIER '=' . INTEGER_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 148


estado 148

   54 enum_values: enum_values ',' IDENTIFIER '=' INTEGER_LITERAL .

    $default  reduce usando la regla 54 (enum_values)
