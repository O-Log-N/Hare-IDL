Terminals unused in grammar

   CHAR_LITERAL


Gramática

    0 $accept: file $end

    1 file: /* vacío */
    2     | file publishable_struct
    3     | file mapping
    4     | file encoding
    5     | file discriminated_union

    6 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
    7                         | publishable_struct_begin data_type IDENTIFIER ';'
    8                         | publishable_struct_begin IDENTIFIER IDENTIFIER ';'

    9 publishable_struct: publishable_struct_begin '}' ';'

   10 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   11              | mapping_begin data_type IDENTIFIER ';'
   12              | mapping_begin IDENTIFIER IDENTIFIER ';'

   13 mapping: mapping_begin '}' ';'

   14 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   15               | encoding_begin data_element
   16               | encoding_begin data_group
   17               | encoding_begin KW_FENCE

   18 encoding: encoding_begin '}' ';'

   19 data_element: data_type IDENTIFIER ';'
   20             | data_type IDENTIFIER KW_DEFAULT '=' expr ';'
   21             | KW_EXTEND IDENTIFIER KW_TO data_type ';'
   22             | IDENTIFIER IDENTIFIER ';'
   23             | IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr ';'
   24             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER ';'
   25             | IDENTIFIER '(' arg_list ')' IDENTIFIER ';'
   26             | IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   27             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' ';'

   28 data_group_begin: IDENTIFIER '{'
   29                 | IDENTIFIER '(' arg_list ')' '{'
   30                 | data_group_begin data_element
   31                 | data_group_begin data_group

   32 data_group: data_group_begin '}'
   33           | IDENTIFIER data_element
   34           | IDENTIFIER '(' arg_list ')' data_element
   35           | IDENTIFIER data_group
   36           | IDENTIFIER '(' arg_list ')' data_group

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' IDENTIFIER ')' IDENTIFIER '{'
   38                          | discriminated_union_begin union_data_element

   39 discriminated_union: discriminated_union_begin '}' ';'

   40 union_data_element: data_type IDENTIFIER ';'
   41                   | data_type IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN '{' id_list '}' ';'
   42                   | data_type IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER OP_EQEQ IDENTIFIER ';'
   43                   | IDENTIFIER IDENTIFIER ';'
   44                   | IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN '{' id_list '}' ';'
   45                   | IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER OP_EQEQ IDENTIFIER ';'

   46 data_type: numeric_type
   47          | int_type
   48          | sequence_type
   49          | inline_enum_type
   50          | class_ref_type

   51 numeric_type: KW_NUMERIC '[' expr ',' expr ']'
   52             | KW_NUMERIC '(' expr ',' expr ']'
   53             | KW_NUMERIC '[' expr ',' expr ')'
   54             | KW_NUMERIC '(' expr ',' expr ')'

   55 int_type: KW_INT '[' expr ',' expr ']'
   56         | KW_INT '(' expr ',' expr ']'
   57         | KW_INT '[' expr ',' expr ')'
   58         | KW_INT '(' expr ',' expr ')'

   59 sequence_type: KW_SEQUENCE '<' data_type '>'
   60              | KW_SEQUENCE '<' IDENTIFIER '>'
   61              | IDENTIFIER '<' data_type '>'
   62              | IDENTIFIER '<' IDENTIFIER '>'

   63 class_ref_type: KW_CLASS IDENTIFIER

   64 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values '}'
   65                 | KW_ENUM '{' enum_values '}'

   66 enum_values: IDENTIFIER '=' INTEGER_LITERAL
   67            | enum_values ',' IDENTIFIER '=' INTEGER_LITERAL

   68 arg_list: IDENTIFIER '=' expr
   69         | arg_list ',' IDENTIFIER '=' expr

   70 id_list: IDENTIFIER
   71        | id_list ',' IDENTIFIER

   72 expr: INTEGER_LITERAL
   73     | FLOAT_LITERAL
   74     | STRING_LITERAL


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 10 14 25 26 27 29 34 36 37 52 54 56 58
')' (41) 10 14 25 26 27 29 34 36 37 53 54 57 58
',' (44) 51 52 53 54 55 56 57 58 67 69 71
';' (59) 7 8 9 11 12 13 18 19 20 21 22 23 24 25 26 27 39 40 41 42 43
    44 45
'<' (60) 59 60 61 62
'=' (61) 20 23 26 37 66 67 68 69
'>' (62) 59 60 61 62
'[' (91) 51 53 55 57
']' (93) 51 52 55 56
'{' (123) 6 10 14 28 29 37 41 44 64 65
'}' (125) 9 13 18 32 39 41 44 64 65
error (256)
KW_PUBLISHABLE_STRUCT (258) 6 10 14
KW_ENUM (259) 64 65
KW_CLASS (260) 63
KW_MAPPING (261) 10
KW_ENCODING (262) 14
KW_NUMERIC (263) 51 52 53 54
KW_INT (264) 55 56 57 58
KW_SEQUENCE (265) 59 60
KW_EXTEND (266) 21 24 27
KW_TO (267) 21 24 27
KW_DEFAULT (268) 20 23 26
KW_FENCE (269) 17
KW_DISCRIMINATED_UNION (270) 37
KW_WHEN_DISCRIMINANT (271) 41 42 44 45
KW_IN (272) 41 44
OP_EQEQ (273) 42 45
KW_DISCRIMINANT (274) 37
IDENTIFIER (275) 6 7 8 10 11 12 14 19 20 21 22 23 24 25 26 27 28 29
    33 34 35 36 37 40 41 42 43 44 45 60 61 62 63 64 66 67 68 69 70
    71
STRING_LITERAL (276) 74
INTEGER_LITERAL (277) 66 67 72
CHAR_LITERAL (278)
FLOAT_LITERAL (279) 73


No terminales con las reglas donde aparecen

$accept (36)
    en la izquierda: 0
file (37)
    en la izquierda: 1 2 3 4 5, en la derecha: 0 2 3 4 5
publishable_struct_begin (38)
    en la izquierda: 6 7 8, en la derecha: 7 8 9
publishable_struct (39)
    en la izquierda: 9, en la derecha: 2
mapping_begin (40)
    en la izquierda: 10 11 12, en la derecha: 11 12 13
mapping (41)
    en la izquierda: 13, en la derecha: 3
encoding_begin (42)
    en la izquierda: 14 15 16 17, en la derecha: 15 16 17 18
encoding (43)
    en la izquierda: 18, en la derecha: 4
data_element (44)
    en la izquierda: 19 20 21 22 23 24 25 26 27, en la derecha: 15
    30 33 34
data_group_begin (45)
    en la izquierda: 28 29 30 31, en la derecha: 30 31 32
data_group (46)
    en la izquierda: 32 33 34 35 36, en la derecha: 16 31 35 36
discriminated_union_begin (47)
    en la izquierda: 37 38, en la derecha: 38 39
discriminated_union (48)
    en la izquierda: 39, en la derecha: 5
union_data_element (49)
    en la izquierda: 40 41 42 43 44 45, en la derecha: 38
data_type (50)
    en la izquierda: 46 47 48 49 50, en la derecha: 7 11 19 20 21 40
    41 42 59 61
numeric_type (51)
    en la izquierda: 51 52 53 54, en la derecha: 46
int_type (52)
    en la izquierda: 55 56 57 58, en la derecha: 47
sequence_type (53)
    en la izquierda: 59 60 61 62, en la derecha: 48
class_ref_type (54)
    en la izquierda: 63, en la derecha: 50
inline_enum_type (55)
    en la izquierda: 64 65, en la derecha: 49
enum_values (56)
    en la izquierda: 66 67, en la derecha: 64 65 67
arg_list (57)
    en la izquierda: 68 69, en la derecha: 10 14 25 26 27 29 34 36
    69
id_list (58)
    en la izquierda: 70 71, en la derecha: 41 44 71
expr (59)
    en la izquierda: 72 73 74, en la derecha: 20 23 26 51 52 53 54
    55 56 57 58 68 69


estado 0

    0 $accept: . file $end

    $default  reduce usando la regla 1 (file)

    file  ir al estado 1


estado 1

    0 $accept: file . $end
    2 file: file . publishable_struct
    3     | file . mapping
    4     | file . encoding
    5     | file . discriminated_union

    $end                    desplazar e ir al estado 2
    KW_PUBLISHABLE_STRUCT   desplazar e ir al estado 3
    KW_MAPPING              desplazar e ir al estado 4
    KW_ENCODING             desplazar e ir al estado 5
    KW_DISCRIMINATED_UNION  desplazar e ir al estado 6

    publishable_struct_begin   ir al estado 7
    publishable_struct         ir al estado 8
    mapping_begin              ir al estado 9
    mapping                    ir al estado 10
    encoding_begin             ir al estado 11
    encoding                   ir al estado 12
    discriminated_union_begin  ir al estado 13
    discriminated_union        ir al estado 14


estado 2

    0 $accept: file $end .

    $default  aceptar


estado 3

    6 publishable_struct_begin: KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 15


estado 4

   10 mapping_begin: KW_MAPPING . '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    '('  desplazar e ir al estado 16


estado 5

   14 encoding_begin: KW_ENCODING . '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    '('  desplazar e ir al estado 17


estado 6

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION . '(' KW_DISCRIMINANT '=' IDENTIFIER ')' IDENTIFIER '{'

    '('  desplazar e ir al estado 18


estado 7

    7 publishable_struct_begin: publishable_struct_begin . data_type IDENTIFIER ';'
    8                         | publishable_struct_begin . IDENTIFIER IDENTIFIER ';'
    9 publishable_struct: publishable_struct_begin . '}' ';'

    KW_ENUM      desplazar e ir al estado 19
    KW_CLASS     desplazar e ir al estado 20
    KW_NUMERIC   desplazar e ir al estado 21
    KW_INT       desplazar e ir al estado 22
    KW_SEQUENCE  desplazar e ir al estado 23
    IDENTIFIER   desplazar e ir al estado 24
    '}'          desplazar e ir al estado 25

    data_type         ir al estado 26
    numeric_type      ir al estado 27
    int_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 8

    2 file: file publishable_struct .

    $default  reduce usando la regla 2 (file)


estado 9

   11 mapping_begin: mapping_begin . data_type IDENTIFIER ';'
   12              | mapping_begin . IDENTIFIER IDENTIFIER ';'
   13 mapping: mapping_begin . '}' ';'

    KW_ENUM      desplazar e ir al estado 19
    KW_CLASS     desplazar e ir al estado 20
    KW_NUMERIC   desplazar e ir al estado 21
    KW_INT       desplazar e ir al estado 22
    KW_SEQUENCE  desplazar e ir al estado 23
    IDENTIFIER   desplazar e ir al estado 32
    '}'          desplazar e ir al estado 33

    data_type         ir al estado 34
    numeric_type      ir al estado 27
    int_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 10

    3 file: file mapping .

    $default  reduce usando la regla 3 (file)


estado 11

   15 encoding_begin: encoding_begin . data_element
   16               | encoding_begin . data_group
   17               | encoding_begin . KW_FENCE
   18 encoding: encoding_begin . '}' ';'

    KW_ENUM      desplazar e ir al estado 19
    KW_CLASS     desplazar e ir al estado 20
    KW_NUMERIC   desplazar e ir al estado 21
    KW_INT       desplazar e ir al estado 22
    KW_SEQUENCE  desplazar e ir al estado 23
    KW_EXTEND    desplazar e ir al estado 35
    KW_FENCE     desplazar e ir al estado 36
    IDENTIFIER   desplazar e ir al estado 37
    '}'          desplazar e ir al estado 38

    data_element      ir al estado 39
    data_group_begin  ir al estado 40
    data_group        ir al estado 41
    data_type         ir al estado 42
    numeric_type      ir al estado 27
    int_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 12

    4 file: file encoding .

    $default  reduce usando la regla 4 (file)


estado 13

   38 discriminated_union_begin: discriminated_union_begin . union_data_element
   39 discriminated_union: discriminated_union_begin . '}' ';'

    KW_ENUM      desplazar e ir al estado 19
    KW_CLASS     desplazar e ir al estado 20
    KW_NUMERIC   desplazar e ir al estado 21
    KW_INT       desplazar e ir al estado 22
    KW_SEQUENCE  desplazar e ir al estado 23
    IDENTIFIER   desplazar e ir al estado 43
    '}'          desplazar e ir al estado 44

    union_data_element  ir al estado 45
    data_type           ir al estado 46
    numeric_type        ir al estado 27
    int_type            ir al estado 28
    sequence_type       ir al estado 29
    class_ref_type      ir al estado 30
    inline_enum_type    ir al estado 31


estado 14

    5 file: file discriminated_union .

    $default  reduce usando la regla 5 (file)


estado 15

    6 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 47


estado 16

   10 mapping_begin: KW_MAPPING '(' . arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 48

    arg_list  ir al estado 49


estado 17

   14 encoding_begin: KW_ENCODING '(' . arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 48

    arg_list  ir al estado 50


estado 18

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' . KW_DISCRIMINANT '=' IDENTIFIER ')' IDENTIFIER '{'

    KW_DISCRIMINANT  desplazar e ir al estado 51


estado 19

   64 inline_enum_type: KW_ENUM . IDENTIFIER '{' enum_values '}'
   65                 | KW_ENUM . '{' enum_values '}'

    IDENTIFIER  desplazar e ir al estado 52
    '{'         desplazar e ir al estado 53


estado 20

   63 class_ref_type: KW_CLASS . IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 54


estado 21

   51 numeric_type: KW_NUMERIC . '[' expr ',' expr ']'
   52             | KW_NUMERIC . '(' expr ',' expr ']'
   53             | KW_NUMERIC . '[' expr ',' expr ')'
   54             | KW_NUMERIC . '(' expr ',' expr ')'

    '('  desplazar e ir al estado 55
    '['  desplazar e ir al estado 56


estado 22

   55 int_type: KW_INT . '[' expr ',' expr ']'
   56         | KW_INT . '(' expr ',' expr ']'
   57         | KW_INT . '[' expr ',' expr ')'
   58         | KW_INT . '(' expr ',' expr ')'

    '('  desplazar e ir al estado 57
    '['  desplazar e ir al estado 58


estado 23

   59 sequence_type: KW_SEQUENCE . '<' data_type '>'
   60              | KW_SEQUENCE . '<' IDENTIFIER '>'

    '<'  desplazar e ir al estado 59


estado 24

    8 publishable_struct_begin: publishable_struct_begin IDENTIFIER . IDENTIFIER ';'
   61 sequence_type: IDENTIFIER . '<' data_type '>'
   62              | IDENTIFIER . '<' IDENTIFIER '>'

    IDENTIFIER  desplazar e ir al estado 60
    '<'         desplazar e ir al estado 61


estado 25

    9 publishable_struct: publishable_struct_begin '}' . ';'

    ';'  desplazar e ir al estado 62


estado 26

    7 publishable_struct_begin: publishable_struct_begin data_type . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 63


estado 27

   46 data_type: numeric_type .

    $default  reduce usando la regla 46 (data_type)


estado 28

   47 data_type: int_type .

    $default  reduce usando la regla 47 (data_type)


estado 29

   48 data_type: sequence_type .

    $default  reduce usando la regla 48 (data_type)


estado 30

   50 data_type: class_ref_type .

    $default  reduce usando la regla 50 (data_type)


estado 31

   49 data_type: inline_enum_type .

    $default  reduce usando la regla 49 (data_type)


estado 32

   12 mapping_begin: mapping_begin IDENTIFIER . IDENTIFIER ';'
   61 sequence_type: IDENTIFIER . '<' data_type '>'
   62              | IDENTIFIER . '<' IDENTIFIER '>'

    IDENTIFIER  desplazar e ir al estado 64
    '<'         desplazar e ir al estado 61


estado 33

   13 mapping: mapping_begin '}' . ';'

    ';'  desplazar e ir al estado 65


estado 34

   11 mapping_begin: mapping_begin data_type . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 66


estado 35

   21 data_element: KW_EXTEND . IDENTIFIER KW_TO data_type ';'
   24             | KW_EXTEND . IDENTIFIER KW_TO IDENTIFIER ';'
   27             | KW_EXTEND . IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' ';'

    IDENTIFIER  desplazar e ir al estado 67


estado 36

   17 encoding_begin: encoding_begin KW_FENCE .

    $default  reduce usando la regla 17 (encoding_begin)


estado 37

   22 data_element: IDENTIFIER . IDENTIFIER ';'
   23             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   25             | IDENTIFIER . '(' arg_list ')' IDENTIFIER ';'
   26             | IDENTIFIER . '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   28 data_group_begin: IDENTIFIER . '{'
   29                 | IDENTIFIER . '(' arg_list ')' '{'
   33 data_group: IDENTIFIER . data_element
   34           | IDENTIFIER . '(' arg_list ')' data_element
   35           | IDENTIFIER . data_group
   36           | IDENTIFIER . '(' arg_list ')' data_group
   61 sequence_type: IDENTIFIER . '<' data_type '>'
   62              | IDENTIFIER . '<' IDENTIFIER '>'

    KW_ENUM      desplazar e ir al estado 19
    KW_CLASS     desplazar e ir al estado 20
    KW_NUMERIC   desplazar e ir al estado 21
    KW_INT       desplazar e ir al estado 22
    KW_SEQUENCE  desplazar e ir al estado 23
    KW_EXTEND    desplazar e ir al estado 35
    IDENTIFIER   desplazar e ir al estado 68
    '{'          desplazar e ir al estado 69
    '('          desplazar e ir al estado 70
    '<'          desplazar e ir al estado 61

    data_element      ir al estado 71
    data_group_begin  ir al estado 40
    data_group        ir al estado 72
    data_type         ir al estado 42
    numeric_type      ir al estado 27
    int_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 38

   18 encoding: encoding_begin '}' . ';'

    ';'  desplazar e ir al estado 73


estado 39

   15 encoding_begin: encoding_begin data_element .

    $default  reduce usando la regla 15 (encoding_begin)


estado 40

   30 data_group_begin: data_group_begin . data_element
   31                 | data_group_begin . data_group
   32 data_group: data_group_begin . '}'

    KW_ENUM      desplazar e ir al estado 19
    KW_CLASS     desplazar e ir al estado 20
    KW_NUMERIC   desplazar e ir al estado 21
    KW_INT       desplazar e ir al estado 22
    KW_SEQUENCE  desplazar e ir al estado 23
    KW_EXTEND    desplazar e ir al estado 35
    IDENTIFIER   desplazar e ir al estado 37
    '}'          desplazar e ir al estado 74

    data_element      ir al estado 75
    data_group_begin  ir al estado 40
    data_group        ir al estado 76
    data_type         ir al estado 42
    numeric_type      ir al estado 27
    int_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 41

   16 encoding_begin: encoding_begin data_group .

    $default  reduce usando la regla 16 (encoding_begin)


estado 42

   19 data_element: data_type . IDENTIFIER ';'
   20             | data_type . IDENTIFIER KW_DEFAULT '=' expr ';'

    IDENTIFIER  desplazar e ir al estado 77


estado 43

   43 union_data_element: IDENTIFIER . IDENTIFIER ';'
   44                   | IDENTIFIER . IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN '{' id_list '}' ';'
   45                   | IDENTIFIER . IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER OP_EQEQ IDENTIFIER ';'
   61 sequence_type: IDENTIFIER . '<' data_type '>'
   62              | IDENTIFIER . '<' IDENTIFIER '>'

    IDENTIFIER  desplazar e ir al estado 78
    '<'         desplazar e ir al estado 61


estado 44

   39 discriminated_union: discriminated_union_begin '}' . ';'

    ';'  desplazar e ir al estado 79


estado 45

   38 discriminated_union_begin: discriminated_union_begin union_data_element .

    $default  reduce usando la regla 38 (discriminated_union_begin)


estado 46

   40 union_data_element: data_type . IDENTIFIER ';'
   41                   | data_type . IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN '{' id_list '}' ';'
   42                   | data_type . IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER OP_EQEQ IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 80


estado 47

    6 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 6 (publishable_struct_begin)


estado 48

   68 arg_list: IDENTIFIER . '=' expr

    '='  desplazar e ir al estado 81


estado 49

   10 mapping_begin: KW_MAPPING '(' arg_list . ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   69 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 82
    ','  desplazar e ir al estado 83


estado 50

   14 encoding_begin: KW_ENCODING '(' arg_list . ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   69 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 84
    ','  desplazar e ir al estado 83


estado 51

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT . '=' IDENTIFIER ')' IDENTIFIER '{'

    '='  desplazar e ir al estado 85


estado 52

   64 inline_enum_type: KW_ENUM IDENTIFIER . '{' enum_values '}'

    '{'  desplazar e ir al estado 86


estado 53

   65 inline_enum_type: KW_ENUM '{' . enum_values '}'

    IDENTIFIER  desplazar e ir al estado 87

    enum_values  ir al estado 88


estado 54

   63 class_ref_type: KW_CLASS IDENTIFIER .

    $default  reduce usando la regla 63 (class_ref_type)


estado 55

   52 numeric_type: KW_NUMERIC '(' . expr ',' expr ']'
   54             | KW_NUMERIC '(' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 89
    INTEGER_LITERAL  desplazar e ir al estado 90
    FLOAT_LITERAL    desplazar e ir al estado 91

    expr  ir al estado 92


estado 56

   51 numeric_type: KW_NUMERIC '[' . expr ',' expr ']'
   53             | KW_NUMERIC '[' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 89
    INTEGER_LITERAL  desplazar e ir al estado 90
    FLOAT_LITERAL    desplazar e ir al estado 91

    expr  ir al estado 93


estado 57

   56 int_type: KW_INT '(' . expr ',' expr ']'
   58         | KW_INT '(' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 89
    INTEGER_LITERAL  desplazar e ir al estado 90
    FLOAT_LITERAL    desplazar e ir al estado 91

    expr  ir al estado 94


estado 58

   55 int_type: KW_INT '[' . expr ',' expr ']'
   57         | KW_INT '[' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 89
    INTEGER_LITERAL  desplazar e ir al estado 90
    FLOAT_LITERAL    desplazar e ir al estado 91

    expr  ir al estado 95


estado 59

   59 sequence_type: KW_SEQUENCE '<' . data_type '>'
   60              | KW_SEQUENCE '<' . IDENTIFIER '>'

    KW_ENUM      desplazar e ir al estado 19
    KW_CLASS     desplazar e ir al estado 20
    KW_NUMERIC   desplazar e ir al estado 21
    KW_INT       desplazar e ir al estado 22
    KW_SEQUENCE  desplazar e ir al estado 23
    IDENTIFIER   desplazar e ir al estado 96

    data_type         ir al estado 97
    numeric_type      ir al estado 27
    int_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 60

    8 publishable_struct_begin: publishable_struct_begin IDENTIFIER IDENTIFIER . ';'

    ';'  desplazar e ir al estado 98


estado 61

   61 sequence_type: IDENTIFIER '<' . data_type '>'
   62              | IDENTIFIER '<' . IDENTIFIER '>'

    KW_ENUM      desplazar e ir al estado 19
    KW_CLASS     desplazar e ir al estado 20
    KW_NUMERIC   desplazar e ir al estado 21
    KW_INT       desplazar e ir al estado 22
    KW_SEQUENCE  desplazar e ir al estado 23
    IDENTIFIER   desplazar e ir al estado 99

    data_type         ir al estado 100
    numeric_type      ir al estado 27
    int_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 62

    9 publishable_struct: publishable_struct_begin '}' ';' .

    $default  reduce usando la regla 9 (publishable_struct)


estado 63

    7 publishable_struct_begin: publishable_struct_begin data_type IDENTIFIER . ';'

    ';'  desplazar e ir al estado 101


estado 64

   12 mapping_begin: mapping_begin IDENTIFIER IDENTIFIER . ';'

    ';'  desplazar e ir al estado 102


estado 65

   13 mapping: mapping_begin '}' ';' .

    $default  reduce usando la regla 13 (mapping)


estado 66

   11 mapping_begin: mapping_begin data_type IDENTIFIER . ';'

    ';'  desplazar e ir al estado 103


estado 67

   21 data_element: KW_EXTEND IDENTIFIER . KW_TO data_type ';'
   24             | KW_EXTEND IDENTIFIER . KW_TO IDENTIFIER ';'
   27             | KW_EXTEND IDENTIFIER . KW_TO IDENTIFIER '(' arg_list ')' ';'

    KW_TO  desplazar e ir al estado 104


estado 68

   22 data_element: IDENTIFIER . IDENTIFIER ';'
   22             | IDENTIFIER IDENTIFIER . ';'
   23             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   23             | IDENTIFIER IDENTIFIER . KW_DEFAULT '=' expr ';'
   25             | IDENTIFIER . '(' arg_list ')' IDENTIFIER ';'
   26             | IDENTIFIER . '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   28 data_group_begin: IDENTIFIER . '{'
   29                 | IDENTIFIER . '(' arg_list ')' '{'
   33 data_group: IDENTIFIER . data_element
   34           | IDENTIFIER . '(' arg_list ')' data_element
   35           | IDENTIFIER . data_group
   36           | IDENTIFIER . '(' arg_list ')' data_group
   61 sequence_type: IDENTIFIER . '<' data_type '>'
   62              | IDENTIFIER . '<' IDENTIFIER '>'

    KW_ENUM      desplazar e ir al estado 19
    KW_CLASS     desplazar e ir al estado 20
    KW_NUMERIC   desplazar e ir al estado 21
    KW_INT       desplazar e ir al estado 22
    KW_SEQUENCE  desplazar e ir al estado 23
    KW_EXTEND    desplazar e ir al estado 35
    KW_DEFAULT   desplazar e ir al estado 105
    IDENTIFIER   desplazar e ir al estado 68
    '{'          desplazar e ir al estado 69
    ';'          desplazar e ir al estado 106
    '('          desplazar e ir al estado 70
    '<'          desplazar e ir al estado 61

    data_element      ir al estado 71
    data_group_begin  ir al estado 40
    data_group        ir al estado 72
    data_type         ir al estado 42
    numeric_type      ir al estado 27
    int_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 69

   28 data_group_begin: IDENTIFIER '{' .

    $default  reduce usando la regla 28 (data_group_begin)


estado 70

   25 data_element: IDENTIFIER '(' . arg_list ')' IDENTIFIER ';'
   26             | IDENTIFIER '(' . arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   29 data_group_begin: IDENTIFIER '(' . arg_list ')' '{'
   34 data_group: IDENTIFIER '(' . arg_list ')' data_element
   36           | IDENTIFIER '(' . arg_list ')' data_group

    IDENTIFIER  desplazar e ir al estado 48

    arg_list  ir al estado 107


estado 71

   33 data_group: IDENTIFIER data_element .

    $default  reduce usando la regla 33 (data_group)


estado 72

   35 data_group: IDENTIFIER data_group .

    $default  reduce usando la regla 35 (data_group)


estado 73

   18 encoding: encoding_begin '}' ';' .

    $default  reduce usando la regla 18 (encoding)


estado 74

   32 data_group: data_group_begin '}' .

    $default  reduce usando la regla 32 (data_group)


estado 75

   30 data_group_begin: data_group_begin data_element .

    $default  reduce usando la regla 30 (data_group_begin)


estado 76

   31 data_group_begin: data_group_begin data_group .

    $default  reduce usando la regla 31 (data_group_begin)


estado 77

   19 data_element: data_type IDENTIFIER . ';'
   20             | data_type IDENTIFIER . KW_DEFAULT '=' expr ';'

    KW_DEFAULT  desplazar e ir al estado 108
    ';'         desplazar e ir al estado 109


estado 78

   43 union_data_element: IDENTIFIER IDENTIFIER . ';'
   44                   | IDENTIFIER IDENTIFIER . KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN '{' id_list '}' ';'
   45                   | IDENTIFIER IDENTIFIER . KW_WHEN_DISCRIMINANT IDENTIFIER OP_EQEQ IDENTIFIER ';'

    KW_WHEN_DISCRIMINANT  desplazar e ir al estado 110
    ';'                   desplazar e ir al estado 111


estado 79

   39 discriminated_union: discriminated_union_begin '}' ';' .

    $default  reduce usando la regla 39 (discriminated_union)


estado 80

   40 union_data_element: data_type IDENTIFIER . ';'
   41                   | data_type IDENTIFIER . KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN '{' id_list '}' ';'
   42                   | data_type IDENTIFIER . KW_WHEN_DISCRIMINANT IDENTIFIER OP_EQEQ IDENTIFIER ';'

    KW_WHEN_DISCRIMINANT  desplazar e ir al estado 112
    ';'                   desplazar e ir al estado 113


estado 81

   68 arg_list: IDENTIFIER '=' . expr

    STRING_LITERAL   desplazar e ir al estado 89
    INTEGER_LITERAL  desplazar e ir al estado 90
    FLOAT_LITERAL    desplazar e ir al estado 91

    expr  ir al estado 114


estado 82

   10 mapping_begin: KW_MAPPING '(' arg_list ')' . KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    KW_PUBLISHABLE_STRUCT  desplazar e ir al estado 115


estado 83

   69 arg_list: arg_list ',' . IDENTIFIER '=' expr

    IDENTIFIER  desplazar e ir al estado 116


estado 84

   14 encoding_begin: KW_ENCODING '(' arg_list ')' . KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    KW_PUBLISHABLE_STRUCT  desplazar e ir al estado 117


estado 85

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' . IDENTIFIER ')' IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 118


estado 86

   64 inline_enum_type: KW_ENUM IDENTIFIER '{' . enum_values '}'

    IDENTIFIER  desplazar e ir al estado 87

    enum_values  ir al estado 119


estado 87

   66 enum_values: IDENTIFIER . '=' INTEGER_LITERAL

    '='  desplazar e ir al estado 120


estado 88

   65 inline_enum_type: KW_ENUM '{' enum_values . '}'
   67 enum_values: enum_values . ',' IDENTIFIER '=' INTEGER_LITERAL

    '}'  desplazar e ir al estado 121
    ','  desplazar e ir al estado 122


estado 89

   74 expr: STRING_LITERAL .

    $default  reduce usando la regla 74 (expr)


estado 90

   72 expr: INTEGER_LITERAL .

    $default  reduce usando la regla 72 (expr)


estado 91

   73 expr: FLOAT_LITERAL .

    $default  reduce usando la regla 73 (expr)


estado 92

   52 numeric_type: KW_NUMERIC '(' expr . ',' expr ']'
   54             | KW_NUMERIC '(' expr . ',' expr ')'

    ','  desplazar e ir al estado 123


estado 93

   51 numeric_type: KW_NUMERIC '[' expr . ',' expr ']'
   53             | KW_NUMERIC '[' expr . ',' expr ')'

    ','  desplazar e ir al estado 124


estado 94

   56 int_type: KW_INT '(' expr . ',' expr ']'
   58         | KW_INT '(' expr . ',' expr ')'

    ','  desplazar e ir al estado 125


estado 95

   55 int_type: KW_INT '[' expr . ',' expr ']'
   57         | KW_INT '[' expr . ',' expr ')'

    ','  desplazar e ir al estado 126


estado 96

   60 sequence_type: KW_SEQUENCE '<' IDENTIFIER . '>'
   61              | IDENTIFIER . '<' data_type '>'
   62              | IDENTIFIER . '<' IDENTIFIER '>'

    '<'  desplazar e ir al estado 61
    '>'  desplazar e ir al estado 127


estado 97

   59 sequence_type: KW_SEQUENCE '<' data_type . '>'

    '>'  desplazar e ir al estado 128


estado 98

    8 publishable_struct_begin: publishable_struct_begin IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 8 (publishable_struct_begin)


estado 99

   61 sequence_type: IDENTIFIER . '<' data_type '>'
   62              | IDENTIFIER . '<' IDENTIFIER '>'
   62              | IDENTIFIER '<' IDENTIFIER . '>'

    '<'  desplazar e ir al estado 61
    '>'  desplazar e ir al estado 129


estado 100

   61 sequence_type: IDENTIFIER '<' data_type . '>'

    '>'  desplazar e ir al estado 130


estado 101

    7 publishable_struct_begin: publishable_struct_begin data_type IDENTIFIER ';' .

    $default  reduce usando la regla 7 (publishable_struct_begin)


estado 102

   12 mapping_begin: mapping_begin IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 12 (mapping_begin)


estado 103

   11 mapping_begin: mapping_begin data_type IDENTIFIER ';' .

    $default  reduce usando la regla 11 (mapping_begin)


estado 104

   21 data_element: KW_EXTEND IDENTIFIER KW_TO . data_type ';'
   24             | KW_EXTEND IDENTIFIER KW_TO . IDENTIFIER ';'
   27             | KW_EXTEND IDENTIFIER KW_TO . IDENTIFIER '(' arg_list ')' ';'

    KW_ENUM      desplazar e ir al estado 19
    KW_CLASS     desplazar e ir al estado 20
    KW_NUMERIC   desplazar e ir al estado 21
    KW_INT       desplazar e ir al estado 22
    KW_SEQUENCE  desplazar e ir al estado 23
    IDENTIFIER   desplazar e ir al estado 131

    data_type         ir al estado 132
    numeric_type      ir al estado 27
    int_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 105

   23 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 133


estado 106

   22 data_element: IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 22 (data_element)


estado 107

   25 data_element: IDENTIFIER '(' arg_list . ')' IDENTIFIER ';'
   26             | IDENTIFIER '(' arg_list . ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   29 data_group_begin: IDENTIFIER '(' arg_list . ')' '{'
   34 data_group: IDENTIFIER '(' arg_list . ')' data_element
   36           | IDENTIFIER '(' arg_list . ')' data_group
   69 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 134
    ','  desplazar e ir al estado 83


estado 108

   20 data_element: data_type IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 135


estado 109

   19 data_element: data_type IDENTIFIER ';' .

    $default  reduce usando la regla 19 (data_element)


estado 110

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT . IDENTIFIER KW_IN '{' id_list '}' ';'
   45                   | IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT . IDENTIFIER OP_EQEQ IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 136


estado 111

   43 union_data_element: IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 43 (union_data_element)


estado 112

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT . IDENTIFIER KW_IN '{' id_list '}' ';'
   42                   | data_type IDENTIFIER KW_WHEN_DISCRIMINANT . IDENTIFIER OP_EQEQ IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 137


estado 113

   40 union_data_element: data_type IDENTIFIER ';' .

    $default  reduce usando la regla 40 (union_data_element)


estado 114

   68 arg_list: IDENTIFIER '=' expr .

    $default  reduce usando la regla 68 (arg_list)


estado 115

   10 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 138


estado 116

   69 arg_list: arg_list ',' IDENTIFIER . '=' expr

    '='  desplazar e ir al estado 139


estado 117

   14 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 140


estado 118

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' IDENTIFIER . ')' IDENTIFIER '{'

    ')'  desplazar e ir al estado 141


estado 119

   64 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values . '}'
   67 enum_values: enum_values . ',' IDENTIFIER '=' INTEGER_LITERAL

    '}'  desplazar e ir al estado 142
    ','  desplazar e ir al estado 122


estado 120

   66 enum_values: IDENTIFIER '=' . INTEGER_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 143


estado 121

   65 inline_enum_type: KW_ENUM '{' enum_values '}' .

    $default  reduce usando la regla 65 (inline_enum_type)


estado 122

   67 enum_values: enum_values ',' . IDENTIFIER '=' INTEGER_LITERAL

    IDENTIFIER  desplazar e ir al estado 144


estado 123

   52 numeric_type: KW_NUMERIC '(' expr ',' . expr ']'
   54             | KW_NUMERIC '(' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 89
    INTEGER_LITERAL  desplazar e ir al estado 90
    FLOAT_LITERAL    desplazar e ir al estado 91

    expr  ir al estado 145


estado 124

   51 numeric_type: KW_NUMERIC '[' expr ',' . expr ']'
   53             | KW_NUMERIC '[' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 89
    INTEGER_LITERAL  desplazar e ir al estado 90
    FLOAT_LITERAL    desplazar e ir al estado 91

    expr  ir al estado 146


estado 125

   56 int_type: KW_INT '(' expr ',' . expr ']'
   58         | KW_INT '(' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 89
    INTEGER_LITERAL  desplazar e ir al estado 90
    FLOAT_LITERAL    desplazar e ir al estado 91

    expr  ir al estado 147


estado 126

   55 int_type: KW_INT '[' expr ',' . expr ']'
   57         | KW_INT '[' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 89
    INTEGER_LITERAL  desplazar e ir al estado 90
    FLOAT_LITERAL    desplazar e ir al estado 91

    expr  ir al estado 148


estado 127

   60 sequence_type: KW_SEQUENCE '<' IDENTIFIER '>' .

    $default  reduce usando la regla 60 (sequence_type)


estado 128

   59 sequence_type: KW_SEQUENCE '<' data_type '>' .

    $default  reduce usando la regla 59 (sequence_type)


estado 129

   62 sequence_type: IDENTIFIER '<' IDENTIFIER '>' .

    $default  reduce usando la regla 62 (sequence_type)


estado 130

   61 sequence_type: IDENTIFIER '<' data_type '>' .

    $default  reduce usando la regla 61 (sequence_type)


estado 131

   24 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER . ';'
   27             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER . '(' arg_list ')' ';'
   61 sequence_type: IDENTIFIER . '<' data_type '>'
   62              | IDENTIFIER . '<' IDENTIFIER '>'

    ';'  desplazar e ir al estado 149
    '('  desplazar e ir al estado 150
    '<'  desplazar e ir al estado 61


estado 132

   21 data_element: KW_EXTEND IDENTIFIER KW_TO data_type . ';'

    ';'  desplazar e ir al estado 151


estado 133

   23 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' . expr ';'

    STRING_LITERAL   desplazar e ir al estado 89
    INTEGER_LITERAL  desplazar e ir al estado 90
    FLOAT_LITERAL    desplazar e ir al estado 91

    expr  ir al estado 152


estado 134

   25 data_element: IDENTIFIER '(' arg_list ')' . IDENTIFIER ';'
   26             | IDENTIFIER '(' arg_list ')' . IDENTIFIER KW_DEFAULT '=' expr ';'
   29 data_group_begin: IDENTIFIER '(' arg_list ')' . '{'
   34 data_group: IDENTIFIER '(' arg_list ')' . data_element
   36           | IDENTIFIER '(' arg_list ')' . data_group

    KW_ENUM      desplazar e ir al estado 19
    KW_CLASS     desplazar e ir al estado 20
    KW_NUMERIC   desplazar e ir al estado 21
    KW_INT       desplazar e ir al estado 22
    KW_SEQUENCE  desplazar e ir al estado 23
    KW_EXTEND    desplazar e ir al estado 35
    IDENTIFIER   desplazar e ir al estado 153
    '{'          desplazar e ir al estado 154

    data_element      ir al estado 155
    data_group_begin  ir al estado 40
    data_group        ir al estado 156
    data_type         ir al estado 42
    numeric_type      ir al estado 27
    int_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 135

   20 data_element: data_type IDENTIFIER KW_DEFAULT '=' . expr ';'

    STRING_LITERAL   desplazar e ir al estado 89
    INTEGER_LITERAL  desplazar e ir al estado 90
    FLOAT_LITERAL    desplazar e ir al estado 91

    expr  ir al estado 157


estado 136

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER . KW_IN '{' id_list '}' ';'
   45                   | IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER . OP_EQEQ IDENTIFIER ';'

    KW_IN    desplazar e ir al estado 158
    OP_EQEQ  desplazar e ir al estado 159


estado 137

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER . KW_IN '{' id_list '}' ';'
   42                   | data_type IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER . OP_EQEQ IDENTIFIER ';'

    KW_IN    desplazar e ir al estado 160
    OP_EQEQ  desplazar e ir al estado 161


estado 138

   10 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 162


estado 139

   69 arg_list: arg_list ',' IDENTIFIER '=' . expr

    STRING_LITERAL   desplazar e ir al estado 89
    INTEGER_LITERAL  desplazar e ir al estado 90
    FLOAT_LITERAL    desplazar e ir al estado 91

    expr  ir al estado 163


estado 140

   14 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 164


estado 141

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' IDENTIFIER ')' . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 165


estado 142

   64 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values '}' .

    $default  reduce usando la regla 64 (inline_enum_type)


estado 143

   66 enum_values: IDENTIFIER '=' INTEGER_LITERAL .

    $default  reduce usando la regla 66 (enum_values)


estado 144

   67 enum_values: enum_values ',' IDENTIFIER . '=' INTEGER_LITERAL

    '='  desplazar e ir al estado 166


estado 145

   52 numeric_type: KW_NUMERIC '(' expr ',' expr . ']'
   54             | KW_NUMERIC '(' expr ',' expr . ')'

    ')'  desplazar e ir al estado 167
    ']'  desplazar e ir al estado 168


estado 146

   51 numeric_type: KW_NUMERIC '[' expr ',' expr . ']'
   53             | KW_NUMERIC '[' expr ',' expr . ')'

    ')'  desplazar e ir al estado 169
    ']'  desplazar e ir al estado 170


estado 147

   56 int_type: KW_INT '(' expr ',' expr . ']'
   58         | KW_INT '(' expr ',' expr . ')'

    ')'  desplazar e ir al estado 171
    ']'  desplazar e ir al estado 172


estado 148

   55 int_type: KW_INT '[' expr ',' expr . ']'
   57         | KW_INT '[' expr ',' expr . ')'

    ')'  desplazar e ir al estado 173
    ']'  desplazar e ir al estado 174


estado 149

   24 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER ';' .

    $default  reduce usando la regla 24 (data_element)


estado 150

   27 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' . arg_list ')' ';'

    IDENTIFIER  desplazar e ir al estado 48

    arg_list  ir al estado 175


estado 151

   21 data_element: KW_EXTEND IDENTIFIER KW_TO data_type ';' .

    $default  reduce usando la regla 21 (data_element)


estado 152

   23 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 176


estado 153

   22 data_element: IDENTIFIER . IDENTIFIER ';'
   23             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   25             | IDENTIFIER . '(' arg_list ')' IDENTIFIER ';'
   25             | IDENTIFIER '(' arg_list ')' IDENTIFIER . ';'
   26             | IDENTIFIER . '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   26             | IDENTIFIER '(' arg_list ')' IDENTIFIER . KW_DEFAULT '=' expr ';'
   28 data_group_begin: IDENTIFIER . '{'
   29                 | IDENTIFIER . '(' arg_list ')' '{'
   33 data_group: IDENTIFIER . data_element
   34           | IDENTIFIER . '(' arg_list ')' data_element
   35           | IDENTIFIER . data_group
   36           | IDENTIFIER . '(' arg_list ')' data_group
   61 sequence_type: IDENTIFIER . '<' data_type '>'
   62              | IDENTIFIER . '<' IDENTIFIER '>'

    KW_ENUM      desplazar e ir al estado 19
    KW_CLASS     desplazar e ir al estado 20
    KW_NUMERIC   desplazar e ir al estado 21
    KW_INT       desplazar e ir al estado 22
    KW_SEQUENCE  desplazar e ir al estado 23
    KW_EXTEND    desplazar e ir al estado 35
    KW_DEFAULT   desplazar e ir al estado 177
    IDENTIFIER   desplazar e ir al estado 68
    '{'          desplazar e ir al estado 69
    ';'          desplazar e ir al estado 178
    '('          desplazar e ir al estado 70
    '<'          desplazar e ir al estado 61

    data_element      ir al estado 71
    data_group_begin  ir al estado 40
    data_group        ir al estado 72
    data_type         ir al estado 42
    numeric_type      ir al estado 27
    int_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 154

   29 data_group_begin: IDENTIFIER '(' arg_list ')' '{' .

    $default  reduce usando la regla 29 (data_group_begin)


estado 155

   34 data_group: IDENTIFIER '(' arg_list ')' data_element .

    $default  reduce usando la regla 34 (data_group)


estado 156

   36 data_group: IDENTIFIER '(' arg_list ')' data_group .

    $default  reduce usando la regla 36 (data_group)


estado 157

   20 data_element: data_type IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 179


estado 158

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN . '{' id_list '}' ';'

    '{'  desplazar e ir al estado 180


estado 159

   45 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER OP_EQEQ . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 181


estado 160

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN . '{' id_list '}' ';'

    '{'  desplazar e ir al estado 182


estado 161

   42 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER OP_EQEQ . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 183


estado 162

   10 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 10 (mapping_begin)


estado 163

   69 arg_list: arg_list ',' IDENTIFIER '=' expr .

    $default  reduce usando la regla 69 (arg_list)


estado 164

   14 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 14 (encoding_begin)


estado 165

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' IDENTIFIER ')' IDENTIFIER . '{'

    '{'  desplazar e ir al estado 184


estado 166

   67 enum_values: enum_values ',' IDENTIFIER '=' . INTEGER_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 185


estado 167

   54 numeric_type: KW_NUMERIC '(' expr ',' expr ')' .

    $default  reduce usando la regla 54 (numeric_type)


estado 168

   52 numeric_type: KW_NUMERIC '(' expr ',' expr ']' .

    $default  reduce usando la regla 52 (numeric_type)


estado 169

   53 numeric_type: KW_NUMERIC '[' expr ',' expr ')' .

    $default  reduce usando la regla 53 (numeric_type)


estado 170

   51 numeric_type: KW_NUMERIC '[' expr ',' expr ']' .

    $default  reduce usando la regla 51 (numeric_type)


estado 171

   58 int_type: KW_INT '(' expr ',' expr ')' .

    $default  reduce usando la regla 58 (int_type)


estado 172

   56 int_type: KW_INT '(' expr ',' expr ']' .

    $default  reduce usando la regla 56 (int_type)


estado 173

   57 int_type: KW_INT '[' expr ',' expr ')' .

    $default  reduce usando la regla 57 (int_type)


estado 174

   55 int_type: KW_INT '[' expr ',' expr ']' .

    $default  reduce usando la regla 55 (int_type)


estado 175

   27 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list . ')' ';'
   69 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 186
    ','  desplazar e ir al estado 83


estado 176

   23 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 23 (data_element)


estado 177

   26 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 187


estado 178

   25 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER ';' .

    $default  reduce usando la regla 25 (data_element)


estado 179

   20 data_element: data_type IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 20 (data_element)


estado 180

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN '{' . id_list '}' ';'

    IDENTIFIER  desplazar e ir al estado 188

    id_list  ir al estado 189


estado 181

   45 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER OP_EQEQ IDENTIFIER . ';'

    ';'  desplazar e ir al estado 190


estado 182

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN '{' . id_list '}' ';'

    IDENTIFIER  desplazar e ir al estado 188

    id_list  ir al estado 191


estado 183

   42 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER OP_EQEQ IDENTIFIER . ';'

    ';'  desplazar e ir al estado 192


estado 184

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' IDENTIFIER ')' IDENTIFIER '{' .

    $default  reduce usando la regla 37 (discriminated_union_begin)


estado 185

   67 enum_values: enum_values ',' IDENTIFIER '=' INTEGER_LITERAL .

    $default  reduce usando la regla 67 (enum_values)


estado 186

   27 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' . ';'

    ';'  desplazar e ir al estado 193


estado 187

   26 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' . expr ';'

    STRING_LITERAL   desplazar e ir al estado 89
    INTEGER_LITERAL  desplazar e ir al estado 90
    FLOAT_LITERAL    desplazar e ir al estado 91

    expr  ir al estado 194


estado 188

   70 id_list: IDENTIFIER .

    $default  reduce usando la regla 70 (id_list)


estado 189

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN '{' id_list . '}' ';'
   71 id_list: id_list . ',' IDENTIFIER

    '}'  desplazar e ir al estado 195
    ','  desplazar e ir al estado 196


estado 190

   45 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER OP_EQEQ IDENTIFIER ';' .

    $default  reduce usando la regla 45 (union_data_element)


estado 191

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN '{' id_list . '}' ';'
   71 id_list: id_list . ',' IDENTIFIER

    '}'  desplazar e ir al estado 197
    ','  desplazar e ir al estado 196


estado 192

   42 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER OP_EQEQ IDENTIFIER ';' .

    $default  reduce usando la regla 42 (union_data_element)


estado 193

   27 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' ';' .

    $default  reduce usando la regla 27 (data_element)


estado 194

   26 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 198


estado 195

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN '{' id_list '}' . ';'

    ';'  desplazar e ir al estado 199


estado 196

   71 id_list: id_list ',' . IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 200


estado 197

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN '{' id_list '}' . ';'

    ';'  desplazar e ir al estado 201


estado 198

   26 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 26 (data_element)


estado 199

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN '{' id_list '}' ';' .

    $default  reduce usando la regla 44 (union_data_element)


estado 200

   71 id_list: id_list ',' IDENTIFIER .

    $default  reduce usando la regla 71 (id_list)


estado 201

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT IDENTIFIER KW_IN '{' id_list '}' ';' .

    $default  reduce usando la regla 41 (union_data_element)
