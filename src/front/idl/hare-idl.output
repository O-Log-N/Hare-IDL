Terminals unused in grammar

   KW_NUMERIC
   KW_INT
   CHAR_LITERAL


Gramática

    0 $accept: file $end

    1 file: /* vacío */
    2     | file publishable_struct
    3     | file mapping
    4     | file encoding
    5     | file discriminated_union

    6 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
    7                         | publishable_struct_begin data_type IDENTIFIER ';'
    8                         | publishable_struct_begin IDENTIFIER IDENTIFIER ';'

    9 publishable_struct: publishable_struct_begin '}' ';'

   10 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   11              | mapping_begin data_type IDENTIFIER ';'
   12              | mapping_begin IDENTIFIER IDENTIFIER ';'

   13 mapping: mapping_begin '}' ';'

   14 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   15               | encoding_begin data_element
   16               | encoding_begin data_group
   17               | encoding_begin KW_FENCE

   18 encoding: encoding_begin '}' ';'

   19 data_element: data_type IDENTIFIER ';'
   20             | data_type IDENTIFIER KW_DEFAULT '=' expr ';'
   21             | KW_EXTEND IDENTIFIER KW_TO data_type ';'
   22             | IDENTIFIER IDENTIFIER ';'
   23             | IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr ';'
   24             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER ';'
   25             | IDENTIFIER '(' arg_list ')' IDENTIFIER ';'
   26             | IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   27             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' ';'

   28 data_group_begin: IDENTIFIER '{'
   29                 | IDENTIFIER '(' arg_list ')' '{'
   30                 | data_group_begin data_element
   31                 | data_group_begin data_group

   32 data_group: data_group_begin '}'
   33           | IDENTIFIER data_element
   34           | IDENTIFIER '(' arg_list ')' data_element
   35           | IDENTIFIER data_group
   36           | IDENTIFIER '(' arg_list ')' data_group

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' IDENTIFIER ')' IDENTIFIER '{'
   38                          | discriminated_union_begin union_data_element

   39 discriminated_union: discriminated_union_begin '}' ';'

   40 union_data_element: data_type IDENTIFIER ';'
   41                   | data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';'
   42                   | data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';'
   43                   | IDENTIFIER IDENTIFIER ';'
   44                   | IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';'
   45                   | IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';'

   46 data_type: integer_type
   47          | fixed_point_type
   48          | floating_point_type
   49          | character_type
   50          | character_string_type
   51          | bit_string_type
   52          | sequence_type
   53          | dictionary_type
   54          | inline_enum_type
   55          | class_ref_type
   56          | KW_PRINTABLE_ASCII_STRING
   57          | KW_UNICODE_STRING

   58 integer_type: KW_INTEGER '[' expr ',' expr ']'
   59             | KW_INTEGER '(' expr ',' expr ']'
   60             | KW_INTEGER '[' expr ',' expr ')'
   61             | KW_INTEGER '(' expr ',' expr ')'

   62 fixed_point_type: KW_FIXED_POINT '[' expr ',' expr ',' expr ']'
   63                 | KW_FIXED_POINT '(' expr ',' expr ',' expr ']'
   64                 | KW_FIXED_POINT '[' expr ',' expr ',' expr ')'
   65                 | KW_FIXED_POINT '(' expr ',' expr ',' expr ')'

   66 floating_point_type: KW_FLOATING_POINT '(' expr ',' expr ')'

   67 character_type: KW_CHARACTER '{' STRING_LITERAL '}'
   68               | KW_CHARACTER '{' character_set '}'

   69 character_string_type: KW_CHARACTER_STRING '{' STRING_LITERAL '}'
   70                      | KW_CHARACTER_STRING '{' STRING_LITERAL '}' '[' expr ',' expr ']'
   71                      | KW_CHARACTER_STRING '{' character_set '}'
   72                      | KW_CHARACTER_STRING '{' character_set '}' '[' expr ',' expr ']'

   73 bit_string_type: KW_BIT_STRING '[' expr ',' expr ']'

   74 sequence_type: KW_SEQUENCE '<' data_type '>'
   75              | KW_SEQUENCE '<' IDENTIFIER '>'
   76              | IDENTIFIER '<' data_type '>'
   77              | IDENTIFIER '<' IDENTIFIER '>'

   78 dictionary_type: KW_DICTIONARY '<' data_type ',' data_type '>'
   79                | KW_DICTIONARY '<' IDENTIFIER ',' data_type '>'
   80                | KW_DICTIONARY '<' data_type ',' IDENTIFIER '>'
   81                | KW_DICTIONARY '<' IDENTIFIER ',' IDENTIFIER '>'

   82 class_ref_type: KW_CLASS IDENTIFIER

   83 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values '}'

   84 enum_values: IDENTIFIER '=' INTEGER_LITERAL
   85            | enum_values ',' IDENTIFIER '=' INTEGER_LITERAL

   86 arg_list: IDENTIFIER '=' expr
   87         | arg_list ',' IDENTIFIER '=' expr

   88 id_list: IDENTIFIER
   89        | id_list ',' IDENTIFIER

   90 expr: INTEGER_LITERAL
   91     | '+' INTEGER_LITERAL
   92     | '-' INTEGER_LITERAL
   93     | FLOAT_LITERAL
   94     | '+' FLOAT_LITERAL
   95     | '-' FLOAT_LITERAL
   96     | STRING_LITERAL

   97 character_set: INTEGER_LITERAL
   98              | INTEGER_LITERAL '-' INTEGER_LITERAL
   99              | character_set ',' INTEGER_LITERAL
  100              | character_set ',' INTEGER_LITERAL '-' INTEGER_LITERAL


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 10 14 25 26 27 29 34 36 37 59 61 63 65 66
')' (41) 10 14 25 26 27 29 34 36 37 60 61 64 65 66
'+' (43) 91 94
',' (44) 58 59 60 61 62 63 64 65 66 70 72 73 78 79 80 81 85 87 89 99
    100
'-' (45) 92 95 98 100
';' (59) 7 8 9 11 12 13 18 19 20 21 22 23 24 25 26 27 39 40 41 42 43
    44 45
'<' (60) 74 75 76 77 78 79 80 81
'=' (61) 20 23 26 37 84 85 86 87
'>' (62) 74 75 76 77 78 79 80 81
'[' (91) 58 60 62 64 70 72 73
']' (93) 58 59 62 63 70 72 73
'{' (123) 6 10 14 28 29 37 41 44 67 68 69 70 71 72 83
'}' (125) 9 13 18 32 39 41 44 67 68 69 70 71 72 83
error (256)
KW_PUBLISHABLE_STRUCT (258) 6 10 14
KW_ENUM (259) 83
KW_CLASS (260) 82
KW_MAPPING (261) 10
KW_ENCODING (262) 14
KW_NUMERIC (263)
KW_INT (264)
KW_EXTEND (265) 21 24 27
KW_TO (266) 21 24 27
KW_DEFAULT (267) 20 23 26
KW_FENCE (268) 17
KW_DISCRIMINATED_UNION (269) 37
KW_WHEN_DISCRIMINANT_IN (270) 41 44
KW_WHEN_DISCRIMINANT_IS (271) 42 45
KW_DISCRIMINANT (272) 37
IDENTIFIER (273) 6 7 8 10 11 12 14 19 20 21 22 23 24 25 26 27 28 29
    33 34 35 36 37 40 41 42 43 44 45 75 76 77 79 80 81 82 83 84 85
    86 87 88 89
STRING_LITERAL (274) 67 69 70 96
INTEGER_LITERAL (275) 84 85 90 91 92 97 98 99 100
CHAR_LITERAL (276)
FLOAT_LITERAL (277) 93 94 95
KW_INTEGER (278) 58 59 60 61
KW_FIXED_POINT (279) 62 63 64 65
KW_FLOATING_POINT (280) 66
KW_CHARACTER (281) 67 68
KW_CHARACTER_STRING (282) 69 70 71 72
KW_BIT_STRING (283) 73
KW_SEQUENCE (284) 74 75
KW_DICTIONARY (285) 78 79 80 81
KW_PRINTABLE_ASCII_STRING (286) 56
KW_UNICODE_STRING (287) 57


No terminales con las reglas donde aparecen

$accept (46)
    en la izquierda: 0
file (47)
    en la izquierda: 1 2 3 4 5, en la derecha: 0 2 3 4 5
publishable_struct_begin (48)
    en la izquierda: 6 7 8, en la derecha: 7 8 9
publishable_struct (49)
    en la izquierda: 9, en la derecha: 2
mapping_begin (50)
    en la izquierda: 10 11 12, en la derecha: 11 12 13
mapping (51)
    en la izquierda: 13, en la derecha: 3
encoding_begin (52)
    en la izquierda: 14 15 16 17, en la derecha: 15 16 17 18
encoding (53)
    en la izquierda: 18, en la derecha: 4
data_element (54)
    en la izquierda: 19 20 21 22 23 24 25 26 27, en la derecha: 15
    30 33 34
data_group_begin (55)
    en la izquierda: 28 29 30 31, en la derecha: 30 31 32
data_group (56)
    en la izquierda: 32 33 34 35 36, en la derecha: 16 31 35 36
discriminated_union_begin (57)
    en la izquierda: 37 38, en la derecha: 38 39
discriminated_union (58)
    en la izquierda: 39, en la derecha: 5
union_data_element (59)
    en la izquierda: 40 41 42 43 44 45, en la derecha: 38
data_type (60)
    en la izquierda: 46 47 48 49 50 51 52 53 54 55 56 57, en la derecha:
    7 11 19 20 21 40 41 42 74 76 78 79 80
integer_type (61)
    en la izquierda: 58 59 60 61, en la derecha: 46
fixed_point_type (62)
    en la izquierda: 62 63 64 65, en la derecha: 47
floating_point_type (63)
    en la izquierda: 66, en la derecha: 48
character_type (64)
    en la izquierda: 67 68, en la derecha: 49
character_string_type (65)
    en la izquierda: 69 70 71 72, en la derecha: 50
bit_string_type (66)
    en la izquierda: 73, en la derecha: 51
sequence_type (67)
    en la izquierda: 74 75 76 77, en la derecha: 52
dictionary_type (68)
    en la izquierda: 78 79 80 81, en la derecha: 53
class_ref_type (69)
    en la izquierda: 82, en la derecha: 55
inline_enum_type (70)
    en la izquierda: 83, en la derecha: 54
enum_values (71)
    en la izquierda: 84 85, en la derecha: 83 85
arg_list (72)
    en la izquierda: 86 87, en la derecha: 10 14 25 26 27 29 34 36
    87
id_list (73)
    en la izquierda: 88 89, en la derecha: 41 44 89
expr (74)
    en la izquierda: 90 91 92 93 94 95 96, en la derecha: 20 23 26
    58 59 60 61 62 63 64 65 66 70 72 73 86 87
character_set (75)
    en la izquierda: 97 98 99 100, en la derecha: 68 71 72 99 100


estado 0

    0 $accept: . file $end

    $default  reduce usando la regla 1 (file)

    file  ir al estado 1


estado 1

    0 $accept: file . $end
    2 file: file . publishable_struct
    3     | file . mapping
    4     | file . encoding
    5     | file . discriminated_union

    $end                    desplazar e ir al estado 2
    KW_PUBLISHABLE_STRUCT   desplazar e ir al estado 3
    KW_MAPPING              desplazar e ir al estado 4
    KW_ENCODING             desplazar e ir al estado 5
    KW_DISCRIMINATED_UNION  desplazar e ir al estado 6

    publishable_struct_begin   ir al estado 7
    publishable_struct         ir al estado 8
    mapping_begin              ir al estado 9
    mapping                    ir al estado 10
    encoding_begin             ir al estado 11
    encoding                   ir al estado 12
    discriminated_union_begin  ir al estado 13
    discriminated_union        ir al estado 14


estado 2

    0 $accept: file $end .

    $default  aceptar


estado 3

    6 publishable_struct_begin: KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 15


estado 4

   10 mapping_begin: KW_MAPPING . '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    '('  desplazar e ir al estado 16


estado 5

   14 encoding_begin: KW_ENCODING . '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    '('  desplazar e ir al estado 17


estado 6

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION . '(' KW_DISCRIMINANT '=' IDENTIFIER ')' IDENTIFIER '{'

    '('  desplazar e ir al estado 18


estado 7

    7 publishable_struct_begin: publishable_struct_begin . data_type IDENTIFIER ';'
    8                         | publishable_struct_begin . IDENTIFIER IDENTIFIER ';'
    9 publishable_struct: publishable_struct_begin . '}' ';'

    KW_ENUM                    desplazar e ir al estado 19
    KW_CLASS                   desplazar e ir al estado 20
    IDENTIFIER                 desplazar e ir al estado 21
    KW_INTEGER                 desplazar e ir al estado 22
    KW_FIXED_POINT             desplazar e ir al estado 23
    KW_FLOATING_POINT          desplazar e ir al estado 24
    KW_CHARACTER               desplazar e ir al estado 25
    KW_CHARACTER_STRING        desplazar e ir al estado 26
    KW_BIT_STRING              desplazar e ir al estado 27
    KW_SEQUENCE                desplazar e ir al estado 28
    KW_DICTIONARY              desplazar e ir al estado 29
    KW_PRINTABLE_ASCII_STRING  desplazar e ir al estado 30
    KW_UNICODE_STRING          desplazar e ir al estado 31
    '}'                        desplazar e ir al estado 32

    data_type              ir al estado 33
    integer_type           ir al estado 34
    fixed_point_type       ir al estado 35
    floating_point_type    ir al estado 36
    character_type         ir al estado 37
    character_string_type  ir al estado 38
    bit_string_type        ir al estado 39
    sequence_type          ir al estado 40
    dictionary_type        ir al estado 41
    class_ref_type         ir al estado 42
    inline_enum_type       ir al estado 43


estado 8

    2 file: file publishable_struct .

    $default  reduce usando la regla 2 (file)


estado 9

   11 mapping_begin: mapping_begin . data_type IDENTIFIER ';'
   12              | mapping_begin . IDENTIFIER IDENTIFIER ';'
   13 mapping: mapping_begin . '}' ';'

    KW_ENUM                    desplazar e ir al estado 19
    KW_CLASS                   desplazar e ir al estado 20
    IDENTIFIER                 desplazar e ir al estado 44
    KW_INTEGER                 desplazar e ir al estado 22
    KW_FIXED_POINT             desplazar e ir al estado 23
    KW_FLOATING_POINT          desplazar e ir al estado 24
    KW_CHARACTER               desplazar e ir al estado 25
    KW_CHARACTER_STRING        desplazar e ir al estado 26
    KW_BIT_STRING              desplazar e ir al estado 27
    KW_SEQUENCE                desplazar e ir al estado 28
    KW_DICTIONARY              desplazar e ir al estado 29
    KW_PRINTABLE_ASCII_STRING  desplazar e ir al estado 30
    KW_UNICODE_STRING          desplazar e ir al estado 31
    '}'                        desplazar e ir al estado 45

    data_type              ir al estado 46
    integer_type           ir al estado 34
    fixed_point_type       ir al estado 35
    floating_point_type    ir al estado 36
    character_type         ir al estado 37
    character_string_type  ir al estado 38
    bit_string_type        ir al estado 39
    sequence_type          ir al estado 40
    dictionary_type        ir al estado 41
    class_ref_type         ir al estado 42
    inline_enum_type       ir al estado 43


estado 10

    3 file: file mapping .

    $default  reduce usando la regla 3 (file)


estado 11

   15 encoding_begin: encoding_begin . data_element
   16               | encoding_begin . data_group
   17               | encoding_begin . KW_FENCE
   18 encoding: encoding_begin . '}' ';'

    KW_ENUM                    desplazar e ir al estado 19
    KW_CLASS                   desplazar e ir al estado 20
    KW_EXTEND                  desplazar e ir al estado 47
    KW_FENCE                   desplazar e ir al estado 48
    IDENTIFIER                 desplazar e ir al estado 49
    KW_INTEGER                 desplazar e ir al estado 22
    KW_FIXED_POINT             desplazar e ir al estado 23
    KW_FLOATING_POINT          desplazar e ir al estado 24
    KW_CHARACTER               desplazar e ir al estado 25
    KW_CHARACTER_STRING        desplazar e ir al estado 26
    KW_BIT_STRING              desplazar e ir al estado 27
    KW_SEQUENCE                desplazar e ir al estado 28
    KW_DICTIONARY              desplazar e ir al estado 29
    KW_PRINTABLE_ASCII_STRING  desplazar e ir al estado 30
    KW_UNICODE_STRING          desplazar e ir al estado 31
    '}'                        desplazar e ir al estado 50

    data_element           ir al estado 51
    data_group_begin       ir al estado 52
    data_group             ir al estado 53
    data_type              ir al estado 54
    integer_type           ir al estado 34
    fixed_point_type       ir al estado 35
    floating_point_type    ir al estado 36
    character_type         ir al estado 37
    character_string_type  ir al estado 38
    bit_string_type        ir al estado 39
    sequence_type          ir al estado 40
    dictionary_type        ir al estado 41
    class_ref_type         ir al estado 42
    inline_enum_type       ir al estado 43


estado 12

    4 file: file encoding .

    $default  reduce usando la regla 4 (file)


estado 13

   38 discriminated_union_begin: discriminated_union_begin . union_data_element
   39 discriminated_union: discriminated_union_begin . '}' ';'

    KW_ENUM                    desplazar e ir al estado 19
    KW_CLASS                   desplazar e ir al estado 20
    IDENTIFIER                 desplazar e ir al estado 55
    KW_INTEGER                 desplazar e ir al estado 22
    KW_FIXED_POINT             desplazar e ir al estado 23
    KW_FLOATING_POINT          desplazar e ir al estado 24
    KW_CHARACTER               desplazar e ir al estado 25
    KW_CHARACTER_STRING        desplazar e ir al estado 26
    KW_BIT_STRING              desplazar e ir al estado 27
    KW_SEQUENCE                desplazar e ir al estado 28
    KW_DICTIONARY              desplazar e ir al estado 29
    KW_PRINTABLE_ASCII_STRING  desplazar e ir al estado 30
    KW_UNICODE_STRING          desplazar e ir al estado 31
    '}'                        desplazar e ir al estado 56

    union_data_element     ir al estado 57
    data_type              ir al estado 58
    integer_type           ir al estado 34
    fixed_point_type       ir al estado 35
    floating_point_type    ir al estado 36
    character_type         ir al estado 37
    character_string_type  ir al estado 38
    bit_string_type        ir al estado 39
    sequence_type          ir al estado 40
    dictionary_type        ir al estado 41
    class_ref_type         ir al estado 42
    inline_enum_type       ir al estado 43


estado 14

    5 file: file discriminated_union .

    $default  reduce usando la regla 5 (file)


estado 15

    6 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 59


estado 16

   10 mapping_begin: KW_MAPPING '(' . arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 60

    arg_list  ir al estado 61


estado 17

   14 encoding_begin: KW_ENCODING '(' . arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 60

    arg_list  ir al estado 62


estado 18

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' . KW_DISCRIMINANT '=' IDENTIFIER ')' IDENTIFIER '{'

    KW_DISCRIMINANT  desplazar e ir al estado 63


estado 19

   83 inline_enum_type: KW_ENUM . IDENTIFIER '{' enum_values '}'

    IDENTIFIER  desplazar e ir al estado 64


estado 20

   82 class_ref_type: KW_CLASS . IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 65


estado 21

    8 publishable_struct_begin: publishable_struct_begin IDENTIFIER . IDENTIFIER ';'
   76 sequence_type: IDENTIFIER . '<' data_type '>'
   77              | IDENTIFIER . '<' IDENTIFIER '>'

    IDENTIFIER  desplazar e ir al estado 66
    '<'         desplazar e ir al estado 67


estado 22

   58 integer_type: KW_INTEGER . '[' expr ',' expr ']'
   59             | KW_INTEGER . '(' expr ',' expr ']'
   60             | KW_INTEGER . '[' expr ',' expr ')'
   61             | KW_INTEGER . '(' expr ',' expr ')'

    '('  desplazar e ir al estado 68
    '['  desplazar e ir al estado 69


estado 23

   62 fixed_point_type: KW_FIXED_POINT . '[' expr ',' expr ',' expr ']'
   63                 | KW_FIXED_POINT . '(' expr ',' expr ',' expr ']'
   64                 | KW_FIXED_POINT . '[' expr ',' expr ',' expr ')'
   65                 | KW_FIXED_POINT . '(' expr ',' expr ',' expr ')'

    '('  desplazar e ir al estado 70
    '['  desplazar e ir al estado 71


estado 24

   66 floating_point_type: KW_FLOATING_POINT . '(' expr ',' expr ')'

    '('  desplazar e ir al estado 72


estado 25

   67 character_type: KW_CHARACTER . '{' STRING_LITERAL '}'
   68               | KW_CHARACTER . '{' character_set '}'

    '{'  desplazar e ir al estado 73


estado 26

   69 character_string_type: KW_CHARACTER_STRING . '{' STRING_LITERAL '}'
   70                      | KW_CHARACTER_STRING . '{' STRING_LITERAL '}' '[' expr ',' expr ']'
   71                      | KW_CHARACTER_STRING . '{' character_set '}'
   72                      | KW_CHARACTER_STRING . '{' character_set '}' '[' expr ',' expr ']'

    '{'  desplazar e ir al estado 74


estado 27

   73 bit_string_type: KW_BIT_STRING . '[' expr ',' expr ']'

    '['  desplazar e ir al estado 75


estado 28

   74 sequence_type: KW_SEQUENCE . '<' data_type '>'
   75              | KW_SEQUENCE . '<' IDENTIFIER '>'

    '<'  desplazar e ir al estado 76


estado 29

   78 dictionary_type: KW_DICTIONARY . '<' data_type ',' data_type '>'
   79                | KW_DICTIONARY . '<' IDENTIFIER ',' data_type '>'
   80                | KW_DICTIONARY . '<' data_type ',' IDENTIFIER '>'
   81                | KW_DICTIONARY . '<' IDENTIFIER ',' IDENTIFIER '>'

    '<'  desplazar e ir al estado 77


estado 30

   56 data_type: KW_PRINTABLE_ASCII_STRING .

    $default  reduce usando la regla 56 (data_type)


estado 31

   57 data_type: KW_UNICODE_STRING .

    $default  reduce usando la regla 57 (data_type)


estado 32

    9 publishable_struct: publishable_struct_begin '}' . ';'

    ';'  desplazar e ir al estado 78


estado 33

    7 publishable_struct_begin: publishable_struct_begin data_type . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 79


estado 34

   46 data_type: integer_type .

    $default  reduce usando la regla 46 (data_type)


estado 35

   47 data_type: fixed_point_type .

    $default  reduce usando la regla 47 (data_type)


estado 36

   48 data_type: floating_point_type .

    $default  reduce usando la regla 48 (data_type)


estado 37

   49 data_type: character_type .

    $default  reduce usando la regla 49 (data_type)


estado 38

   50 data_type: character_string_type .

    $default  reduce usando la regla 50 (data_type)


estado 39

   51 data_type: bit_string_type .

    $default  reduce usando la regla 51 (data_type)


estado 40

   52 data_type: sequence_type .

    $default  reduce usando la regla 52 (data_type)


estado 41

   53 data_type: dictionary_type .

    $default  reduce usando la regla 53 (data_type)


estado 42

   55 data_type: class_ref_type .

    $default  reduce usando la regla 55 (data_type)


estado 43

   54 data_type: inline_enum_type .

    $default  reduce usando la regla 54 (data_type)


estado 44

   12 mapping_begin: mapping_begin IDENTIFIER . IDENTIFIER ';'
   76 sequence_type: IDENTIFIER . '<' data_type '>'
   77              | IDENTIFIER . '<' IDENTIFIER '>'

    IDENTIFIER  desplazar e ir al estado 80
    '<'         desplazar e ir al estado 67


estado 45

   13 mapping: mapping_begin '}' . ';'

    ';'  desplazar e ir al estado 81


estado 46

   11 mapping_begin: mapping_begin data_type . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 82


estado 47

   21 data_element: KW_EXTEND . IDENTIFIER KW_TO data_type ';'
   24             | KW_EXTEND . IDENTIFIER KW_TO IDENTIFIER ';'
   27             | KW_EXTEND . IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' ';'

    IDENTIFIER  desplazar e ir al estado 83


estado 48

   17 encoding_begin: encoding_begin KW_FENCE .

    $default  reduce usando la regla 17 (encoding_begin)


estado 49

   22 data_element: IDENTIFIER . IDENTIFIER ';'
   23             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   25             | IDENTIFIER . '(' arg_list ')' IDENTIFIER ';'
   26             | IDENTIFIER . '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   28 data_group_begin: IDENTIFIER . '{'
   29                 | IDENTIFIER . '(' arg_list ')' '{'
   33 data_group: IDENTIFIER . data_element
   34           | IDENTIFIER . '(' arg_list ')' data_element
   35           | IDENTIFIER . data_group
   36           | IDENTIFIER . '(' arg_list ')' data_group
   76 sequence_type: IDENTIFIER . '<' data_type '>'
   77              | IDENTIFIER . '<' IDENTIFIER '>'

    KW_ENUM                    desplazar e ir al estado 19
    KW_CLASS                   desplazar e ir al estado 20
    KW_EXTEND                  desplazar e ir al estado 47
    IDENTIFIER                 desplazar e ir al estado 84
    KW_INTEGER                 desplazar e ir al estado 22
    KW_FIXED_POINT             desplazar e ir al estado 23
    KW_FLOATING_POINT          desplazar e ir al estado 24
    KW_CHARACTER               desplazar e ir al estado 25
    KW_CHARACTER_STRING        desplazar e ir al estado 26
    KW_BIT_STRING              desplazar e ir al estado 27
    KW_SEQUENCE                desplazar e ir al estado 28
    KW_DICTIONARY              desplazar e ir al estado 29
    KW_PRINTABLE_ASCII_STRING  desplazar e ir al estado 30
    KW_UNICODE_STRING          desplazar e ir al estado 31
    '{'                        desplazar e ir al estado 85
    '('                        desplazar e ir al estado 86
    '<'                        desplazar e ir al estado 67

    data_element           ir al estado 87
    data_group_begin       ir al estado 52
    data_group             ir al estado 88
    data_type              ir al estado 54
    integer_type           ir al estado 34
    fixed_point_type       ir al estado 35
    floating_point_type    ir al estado 36
    character_type         ir al estado 37
    character_string_type  ir al estado 38
    bit_string_type        ir al estado 39
    sequence_type          ir al estado 40
    dictionary_type        ir al estado 41
    class_ref_type         ir al estado 42
    inline_enum_type       ir al estado 43


estado 50

   18 encoding: encoding_begin '}' . ';'

    ';'  desplazar e ir al estado 89


estado 51

   15 encoding_begin: encoding_begin data_element .

    $default  reduce usando la regla 15 (encoding_begin)


estado 52

   30 data_group_begin: data_group_begin . data_element
   31                 | data_group_begin . data_group
   32 data_group: data_group_begin . '}'

    KW_ENUM                    desplazar e ir al estado 19
    KW_CLASS                   desplazar e ir al estado 20
    KW_EXTEND                  desplazar e ir al estado 47
    IDENTIFIER                 desplazar e ir al estado 49
    KW_INTEGER                 desplazar e ir al estado 22
    KW_FIXED_POINT             desplazar e ir al estado 23
    KW_FLOATING_POINT          desplazar e ir al estado 24
    KW_CHARACTER               desplazar e ir al estado 25
    KW_CHARACTER_STRING        desplazar e ir al estado 26
    KW_BIT_STRING              desplazar e ir al estado 27
    KW_SEQUENCE                desplazar e ir al estado 28
    KW_DICTIONARY              desplazar e ir al estado 29
    KW_PRINTABLE_ASCII_STRING  desplazar e ir al estado 30
    KW_UNICODE_STRING          desplazar e ir al estado 31
    '}'                        desplazar e ir al estado 90

    data_element           ir al estado 91
    data_group_begin       ir al estado 52
    data_group             ir al estado 92
    data_type              ir al estado 54
    integer_type           ir al estado 34
    fixed_point_type       ir al estado 35
    floating_point_type    ir al estado 36
    character_type         ir al estado 37
    character_string_type  ir al estado 38
    bit_string_type        ir al estado 39
    sequence_type          ir al estado 40
    dictionary_type        ir al estado 41
    class_ref_type         ir al estado 42
    inline_enum_type       ir al estado 43


estado 53

   16 encoding_begin: encoding_begin data_group .

    $default  reduce usando la regla 16 (encoding_begin)


estado 54

   19 data_element: data_type . IDENTIFIER ';'
   20             | data_type . IDENTIFIER KW_DEFAULT '=' expr ';'

    IDENTIFIER  desplazar e ir al estado 93


estado 55

   43 union_data_element: IDENTIFIER . IDENTIFIER ';'
   44                   | IDENTIFIER . IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';'
   45                   | IDENTIFIER . IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';'
   76 sequence_type: IDENTIFIER . '<' data_type '>'
   77              | IDENTIFIER . '<' IDENTIFIER '>'

    IDENTIFIER  desplazar e ir al estado 94
    '<'         desplazar e ir al estado 67


estado 56

   39 discriminated_union: discriminated_union_begin '}' . ';'

    ';'  desplazar e ir al estado 95


estado 57

   38 discriminated_union_begin: discriminated_union_begin union_data_element .

    $default  reduce usando la regla 38 (discriminated_union_begin)


estado 58

   40 union_data_element: data_type . IDENTIFIER ';'
   41                   | data_type . IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';'
   42                   | data_type . IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 96


estado 59

    6 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 6 (publishable_struct_begin)


estado 60

   86 arg_list: IDENTIFIER . '=' expr

    '='  desplazar e ir al estado 97


estado 61

   10 mapping_begin: KW_MAPPING '(' arg_list . ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   87 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 98
    ','  desplazar e ir al estado 99


estado 62

   14 encoding_begin: KW_ENCODING '(' arg_list . ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   87 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 100
    ','  desplazar e ir al estado 99


estado 63

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT . '=' IDENTIFIER ')' IDENTIFIER '{'

    '='  desplazar e ir al estado 101


estado 64

   83 inline_enum_type: KW_ENUM IDENTIFIER . '{' enum_values '}'

    '{'  desplazar e ir al estado 102


estado 65

   82 class_ref_type: KW_CLASS IDENTIFIER .

    $default  reduce usando la regla 82 (class_ref_type)


estado 66

    8 publishable_struct_begin: publishable_struct_begin IDENTIFIER IDENTIFIER . ';'

    ';'  desplazar e ir al estado 103


estado 67

   76 sequence_type: IDENTIFIER '<' . data_type '>'
   77              | IDENTIFIER '<' . IDENTIFIER '>'

    KW_ENUM                    desplazar e ir al estado 19
    KW_CLASS                   desplazar e ir al estado 20
    IDENTIFIER                 desplazar e ir al estado 104
    KW_INTEGER                 desplazar e ir al estado 22
    KW_FIXED_POINT             desplazar e ir al estado 23
    KW_FLOATING_POINT          desplazar e ir al estado 24
    KW_CHARACTER               desplazar e ir al estado 25
    KW_CHARACTER_STRING        desplazar e ir al estado 26
    KW_BIT_STRING              desplazar e ir al estado 27
    KW_SEQUENCE                desplazar e ir al estado 28
    KW_DICTIONARY              desplazar e ir al estado 29
    KW_PRINTABLE_ASCII_STRING  desplazar e ir al estado 30
    KW_UNICODE_STRING          desplazar e ir al estado 31

    data_type              ir al estado 105
    integer_type           ir al estado 34
    fixed_point_type       ir al estado 35
    floating_point_type    ir al estado 36
    character_type         ir al estado 37
    character_string_type  ir al estado 38
    bit_string_type        ir al estado 39
    sequence_type          ir al estado 40
    dictionary_type        ir al estado 41
    class_ref_type         ir al estado 42
    inline_enum_type       ir al estado 43


estado 68

   59 integer_type: KW_INTEGER '(' . expr ',' expr ']'
   61             | KW_INTEGER '(' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 111


estado 69

   58 integer_type: KW_INTEGER '[' . expr ',' expr ']'
   60             | KW_INTEGER '[' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 112


estado 70

   63 fixed_point_type: KW_FIXED_POINT '(' . expr ',' expr ',' expr ']'
   65                 | KW_FIXED_POINT '(' . expr ',' expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 113


estado 71

   62 fixed_point_type: KW_FIXED_POINT '[' . expr ',' expr ',' expr ']'
   64                 | KW_FIXED_POINT '[' . expr ',' expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 114


estado 72

   66 floating_point_type: KW_FLOATING_POINT '(' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 115


estado 73

   67 character_type: KW_CHARACTER '{' . STRING_LITERAL '}'
   68               | KW_CHARACTER '{' . character_set '}'

    STRING_LITERAL   desplazar e ir al estado 116
    INTEGER_LITERAL  desplazar e ir al estado 117

    character_set  ir al estado 118


estado 74

   69 character_string_type: KW_CHARACTER_STRING '{' . STRING_LITERAL '}'
   70                      | KW_CHARACTER_STRING '{' . STRING_LITERAL '}' '[' expr ',' expr ']'
   71                      | KW_CHARACTER_STRING '{' . character_set '}'
   72                      | KW_CHARACTER_STRING '{' . character_set '}' '[' expr ',' expr ']'

    STRING_LITERAL   desplazar e ir al estado 119
    INTEGER_LITERAL  desplazar e ir al estado 117

    character_set  ir al estado 120


estado 75

   73 bit_string_type: KW_BIT_STRING '[' . expr ',' expr ']'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 121


estado 76

   74 sequence_type: KW_SEQUENCE '<' . data_type '>'
   75              | KW_SEQUENCE '<' . IDENTIFIER '>'

    KW_ENUM                    desplazar e ir al estado 19
    KW_CLASS                   desplazar e ir al estado 20
    IDENTIFIER                 desplazar e ir al estado 122
    KW_INTEGER                 desplazar e ir al estado 22
    KW_FIXED_POINT             desplazar e ir al estado 23
    KW_FLOATING_POINT          desplazar e ir al estado 24
    KW_CHARACTER               desplazar e ir al estado 25
    KW_CHARACTER_STRING        desplazar e ir al estado 26
    KW_BIT_STRING              desplazar e ir al estado 27
    KW_SEQUENCE                desplazar e ir al estado 28
    KW_DICTIONARY              desplazar e ir al estado 29
    KW_PRINTABLE_ASCII_STRING  desplazar e ir al estado 30
    KW_UNICODE_STRING          desplazar e ir al estado 31

    data_type              ir al estado 123
    integer_type           ir al estado 34
    fixed_point_type       ir al estado 35
    floating_point_type    ir al estado 36
    character_type         ir al estado 37
    character_string_type  ir al estado 38
    bit_string_type        ir al estado 39
    sequence_type          ir al estado 40
    dictionary_type        ir al estado 41
    class_ref_type         ir al estado 42
    inline_enum_type       ir al estado 43


estado 77

   78 dictionary_type: KW_DICTIONARY '<' . data_type ',' data_type '>'
   79                | KW_DICTIONARY '<' . IDENTIFIER ',' data_type '>'
   80                | KW_DICTIONARY '<' . data_type ',' IDENTIFIER '>'
   81                | KW_DICTIONARY '<' . IDENTIFIER ',' IDENTIFIER '>'

    KW_ENUM                    desplazar e ir al estado 19
    KW_CLASS                   desplazar e ir al estado 20
    IDENTIFIER                 desplazar e ir al estado 124
    KW_INTEGER                 desplazar e ir al estado 22
    KW_FIXED_POINT             desplazar e ir al estado 23
    KW_FLOATING_POINT          desplazar e ir al estado 24
    KW_CHARACTER               desplazar e ir al estado 25
    KW_CHARACTER_STRING        desplazar e ir al estado 26
    KW_BIT_STRING              desplazar e ir al estado 27
    KW_SEQUENCE                desplazar e ir al estado 28
    KW_DICTIONARY              desplazar e ir al estado 29
    KW_PRINTABLE_ASCII_STRING  desplazar e ir al estado 30
    KW_UNICODE_STRING          desplazar e ir al estado 31

    data_type              ir al estado 125
    integer_type           ir al estado 34
    fixed_point_type       ir al estado 35
    floating_point_type    ir al estado 36
    character_type         ir al estado 37
    character_string_type  ir al estado 38
    bit_string_type        ir al estado 39
    sequence_type          ir al estado 40
    dictionary_type        ir al estado 41
    class_ref_type         ir al estado 42
    inline_enum_type       ir al estado 43


estado 78

    9 publishable_struct: publishable_struct_begin '}' ';' .

    $default  reduce usando la regla 9 (publishable_struct)


estado 79

    7 publishable_struct_begin: publishable_struct_begin data_type IDENTIFIER . ';'

    ';'  desplazar e ir al estado 126


estado 80

   12 mapping_begin: mapping_begin IDENTIFIER IDENTIFIER . ';'

    ';'  desplazar e ir al estado 127


estado 81

   13 mapping: mapping_begin '}' ';' .

    $default  reduce usando la regla 13 (mapping)


estado 82

   11 mapping_begin: mapping_begin data_type IDENTIFIER . ';'

    ';'  desplazar e ir al estado 128


estado 83

   21 data_element: KW_EXTEND IDENTIFIER . KW_TO data_type ';'
   24             | KW_EXTEND IDENTIFIER . KW_TO IDENTIFIER ';'
   27             | KW_EXTEND IDENTIFIER . KW_TO IDENTIFIER '(' arg_list ')' ';'

    KW_TO  desplazar e ir al estado 129


estado 84

   22 data_element: IDENTIFIER . IDENTIFIER ';'
   22             | IDENTIFIER IDENTIFIER . ';'
   23             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   23             | IDENTIFIER IDENTIFIER . KW_DEFAULT '=' expr ';'
   25             | IDENTIFIER . '(' arg_list ')' IDENTIFIER ';'
   26             | IDENTIFIER . '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   28 data_group_begin: IDENTIFIER . '{'
   29                 | IDENTIFIER . '(' arg_list ')' '{'
   33 data_group: IDENTIFIER . data_element
   34           | IDENTIFIER . '(' arg_list ')' data_element
   35           | IDENTIFIER . data_group
   36           | IDENTIFIER . '(' arg_list ')' data_group
   76 sequence_type: IDENTIFIER . '<' data_type '>'
   77              | IDENTIFIER . '<' IDENTIFIER '>'

    KW_ENUM                    desplazar e ir al estado 19
    KW_CLASS                   desplazar e ir al estado 20
    KW_EXTEND                  desplazar e ir al estado 47
    KW_DEFAULT                 desplazar e ir al estado 130
    IDENTIFIER                 desplazar e ir al estado 84
    KW_INTEGER                 desplazar e ir al estado 22
    KW_FIXED_POINT             desplazar e ir al estado 23
    KW_FLOATING_POINT          desplazar e ir al estado 24
    KW_CHARACTER               desplazar e ir al estado 25
    KW_CHARACTER_STRING        desplazar e ir al estado 26
    KW_BIT_STRING              desplazar e ir al estado 27
    KW_SEQUENCE                desplazar e ir al estado 28
    KW_DICTIONARY              desplazar e ir al estado 29
    KW_PRINTABLE_ASCII_STRING  desplazar e ir al estado 30
    KW_UNICODE_STRING          desplazar e ir al estado 31
    '{'                        desplazar e ir al estado 85
    ';'                        desplazar e ir al estado 131
    '('                        desplazar e ir al estado 86
    '<'                        desplazar e ir al estado 67

    data_element           ir al estado 87
    data_group_begin       ir al estado 52
    data_group             ir al estado 88
    data_type              ir al estado 54
    integer_type           ir al estado 34
    fixed_point_type       ir al estado 35
    floating_point_type    ir al estado 36
    character_type         ir al estado 37
    character_string_type  ir al estado 38
    bit_string_type        ir al estado 39
    sequence_type          ir al estado 40
    dictionary_type        ir al estado 41
    class_ref_type         ir al estado 42
    inline_enum_type       ir al estado 43


estado 85

   28 data_group_begin: IDENTIFIER '{' .

    $default  reduce usando la regla 28 (data_group_begin)


estado 86

   25 data_element: IDENTIFIER '(' . arg_list ')' IDENTIFIER ';'
   26             | IDENTIFIER '(' . arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   29 data_group_begin: IDENTIFIER '(' . arg_list ')' '{'
   34 data_group: IDENTIFIER '(' . arg_list ')' data_element
   36           | IDENTIFIER '(' . arg_list ')' data_group

    IDENTIFIER  desplazar e ir al estado 60

    arg_list  ir al estado 132


estado 87

   33 data_group: IDENTIFIER data_element .

    $default  reduce usando la regla 33 (data_group)


estado 88

   35 data_group: IDENTIFIER data_group .

    $default  reduce usando la regla 35 (data_group)


estado 89

   18 encoding: encoding_begin '}' ';' .

    $default  reduce usando la regla 18 (encoding)


estado 90

   32 data_group: data_group_begin '}' .

    $default  reduce usando la regla 32 (data_group)


estado 91

   30 data_group_begin: data_group_begin data_element .

    $default  reduce usando la regla 30 (data_group_begin)


estado 92

   31 data_group_begin: data_group_begin data_group .

    $default  reduce usando la regla 31 (data_group_begin)


estado 93

   19 data_element: data_type IDENTIFIER . ';'
   20             | data_type IDENTIFIER . KW_DEFAULT '=' expr ';'

    KW_DEFAULT  desplazar e ir al estado 133
    ';'         desplazar e ir al estado 134


estado 94

   43 union_data_element: IDENTIFIER IDENTIFIER . ';'
   44                   | IDENTIFIER IDENTIFIER . KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';'
   45                   | IDENTIFIER IDENTIFIER . KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';'

    KW_WHEN_DISCRIMINANT_IN  desplazar e ir al estado 135
    KW_WHEN_DISCRIMINANT_IS  desplazar e ir al estado 136
    ';'                      desplazar e ir al estado 137


estado 95

   39 discriminated_union: discriminated_union_begin '}' ';' .

    $default  reduce usando la regla 39 (discriminated_union)


estado 96

   40 union_data_element: data_type IDENTIFIER . ';'
   41                   | data_type IDENTIFIER . KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';'
   42                   | data_type IDENTIFIER . KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';'

    KW_WHEN_DISCRIMINANT_IN  desplazar e ir al estado 138
    KW_WHEN_DISCRIMINANT_IS  desplazar e ir al estado 139
    ';'                      desplazar e ir al estado 140


estado 97

   86 arg_list: IDENTIFIER '=' . expr

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 141


estado 98

   10 mapping_begin: KW_MAPPING '(' arg_list ')' . KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    KW_PUBLISHABLE_STRUCT  desplazar e ir al estado 142


estado 99

   87 arg_list: arg_list ',' . IDENTIFIER '=' expr

    IDENTIFIER  desplazar e ir al estado 143


estado 100

   14 encoding_begin: KW_ENCODING '(' arg_list ')' . KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    KW_PUBLISHABLE_STRUCT  desplazar e ir al estado 144


estado 101

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' . IDENTIFIER ')' IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 145


estado 102

   83 inline_enum_type: KW_ENUM IDENTIFIER '{' . enum_values '}'

    IDENTIFIER  desplazar e ir al estado 146

    enum_values  ir al estado 147


estado 103

    8 publishable_struct_begin: publishable_struct_begin IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 8 (publishable_struct_begin)


estado 104

   76 sequence_type: IDENTIFIER . '<' data_type '>'
   77              | IDENTIFIER . '<' IDENTIFIER '>'
   77              | IDENTIFIER '<' IDENTIFIER . '>'

    '<'  desplazar e ir al estado 67
    '>'  desplazar e ir al estado 148


estado 105

   76 sequence_type: IDENTIFIER '<' data_type . '>'

    '>'  desplazar e ir al estado 149


estado 106

   96 expr: STRING_LITERAL .

    $default  reduce usando la regla 96 (expr)


estado 107

   90 expr: INTEGER_LITERAL .

    $default  reduce usando la regla 90 (expr)


estado 108

   93 expr: FLOAT_LITERAL .

    $default  reduce usando la regla 93 (expr)


estado 109

   91 expr: '+' . INTEGER_LITERAL
   94     | '+' . FLOAT_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 150
    FLOAT_LITERAL    desplazar e ir al estado 151


estado 110

   92 expr: '-' . INTEGER_LITERAL
   95     | '-' . FLOAT_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 152
    FLOAT_LITERAL    desplazar e ir al estado 153


estado 111

   59 integer_type: KW_INTEGER '(' expr . ',' expr ']'
   61             | KW_INTEGER '(' expr . ',' expr ')'

    ','  desplazar e ir al estado 154


estado 112

   58 integer_type: KW_INTEGER '[' expr . ',' expr ']'
   60             | KW_INTEGER '[' expr . ',' expr ')'

    ','  desplazar e ir al estado 155


estado 113

   63 fixed_point_type: KW_FIXED_POINT '(' expr . ',' expr ',' expr ']'
   65                 | KW_FIXED_POINT '(' expr . ',' expr ',' expr ')'

    ','  desplazar e ir al estado 156


estado 114

   62 fixed_point_type: KW_FIXED_POINT '[' expr . ',' expr ',' expr ']'
   64                 | KW_FIXED_POINT '[' expr . ',' expr ',' expr ')'

    ','  desplazar e ir al estado 157


estado 115

   66 floating_point_type: KW_FLOATING_POINT '(' expr . ',' expr ')'

    ','  desplazar e ir al estado 158


estado 116

   67 character_type: KW_CHARACTER '{' STRING_LITERAL . '}'

    '}'  desplazar e ir al estado 159


estado 117

   97 character_set: INTEGER_LITERAL .
   98              | INTEGER_LITERAL . '-' INTEGER_LITERAL

    '-'  desplazar e ir al estado 160

    $default  reduce usando la regla 97 (character_set)


estado 118

   68 character_type: KW_CHARACTER '{' character_set . '}'
   99 character_set: character_set . ',' INTEGER_LITERAL
  100              | character_set . ',' INTEGER_LITERAL '-' INTEGER_LITERAL

    '}'  desplazar e ir al estado 161
    ','  desplazar e ir al estado 162


estado 119

   69 character_string_type: KW_CHARACTER_STRING '{' STRING_LITERAL . '}'
   70                      | KW_CHARACTER_STRING '{' STRING_LITERAL . '}' '[' expr ',' expr ']'

    '}'  desplazar e ir al estado 163


estado 120

   71 character_string_type: KW_CHARACTER_STRING '{' character_set . '}'
   72                      | KW_CHARACTER_STRING '{' character_set . '}' '[' expr ',' expr ']'
   99 character_set: character_set . ',' INTEGER_LITERAL
  100              | character_set . ',' INTEGER_LITERAL '-' INTEGER_LITERAL

    '}'  desplazar e ir al estado 164
    ','  desplazar e ir al estado 162


estado 121

   73 bit_string_type: KW_BIT_STRING '[' expr . ',' expr ']'

    ','  desplazar e ir al estado 165


estado 122

   75 sequence_type: KW_SEQUENCE '<' IDENTIFIER . '>'
   76              | IDENTIFIER . '<' data_type '>'
   77              | IDENTIFIER . '<' IDENTIFIER '>'

    '<'  desplazar e ir al estado 67
    '>'  desplazar e ir al estado 166


estado 123

   74 sequence_type: KW_SEQUENCE '<' data_type . '>'

    '>'  desplazar e ir al estado 167


estado 124

   76 sequence_type: IDENTIFIER . '<' data_type '>'
   77              | IDENTIFIER . '<' IDENTIFIER '>'
   79 dictionary_type: KW_DICTIONARY '<' IDENTIFIER . ',' data_type '>'
   81                | KW_DICTIONARY '<' IDENTIFIER . ',' IDENTIFIER '>'

    ','  desplazar e ir al estado 168
    '<'  desplazar e ir al estado 67


estado 125

   78 dictionary_type: KW_DICTIONARY '<' data_type . ',' data_type '>'
   80                | KW_DICTIONARY '<' data_type . ',' IDENTIFIER '>'

    ','  desplazar e ir al estado 169


estado 126

    7 publishable_struct_begin: publishable_struct_begin data_type IDENTIFIER ';' .

    $default  reduce usando la regla 7 (publishable_struct_begin)


estado 127

   12 mapping_begin: mapping_begin IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 12 (mapping_begin)


estado 128

   11 mapping_begin: mapping_begin data_type IDENTIFIER ';' .

    $default  reduce usando la regla 11 (mapping_begin)


estado 129

   21 data_element: KW_EXTEND IDENTIFIER KW_TO . data_type ';'
   24             | KW_EXTEND IDENTIFIER KW_TO . IDENTIFIER ';'
   27             | KW_EXTEND IDENTIFIER KW_TO . IDENTIFIER '(' arg_list ')' ';'

    KW_ENUM                    desplazar e ir al estado 19
    KW_CLASS                   desplazar e ir al estado 20
    IDENTIFIER                 desplazar e ir al estado 170
    KW_INTEGER                 desplazar e ir al estado 22
    KW_FIXED_POINT             desplazar e ir al estado 23
    KW_FLOATING_POINT          desplazar e ir al estado 24
    KW_CHARACTER               desplazar e ir al estado 25
    KW_CHARACTER_STRING        desplazar e ir al estado 26
    KW_BIT_STRING              desplazar e ir al estado 27
    KW_SEQUENCE                desplazar e ir al estado 28
    KW_DICTIONARY              desplazar e ir al estado 29
    KW_PRINTABLE_ASCII_STRING  desplazar e ir al estado 30
    KW_UNICODE_STRING          desplazar e ir al estado 31

    data_type              ir al estado 171
    integer_type           ir al estado 34
    fixed_point_type       ir al estado 35
    floating_point_type    ir al estado 36
    character_type         ir al estado 37
    character_string_type  ir al estado 38
    bit_string_type        ir al estado 39
    sequence_type          ir al estado 40
    dictionary_type        ir al estado 41
    class_ref_type         ir al estado 42
    inline_enum_type       ir al estado 43


estado 130

   23 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 172


estado 131

   22 data_element: IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 22 (data_element)


estado 132

   25 data_element: IDENTIFIER '(' arg_list . ')' IDENTIFIER ';'
   26             | IDENTIFIER '(' arg_list . ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   29 data_group_begin: IDENTIFIER '(' arg_list . ')' '{'
   34 data_group: IDENTIFIER '(' arg_list . ')' data_element
   36           | IDENTIFIER '(' arg_list . ')' data_group
   87 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 173
    ','  desplazar e ir al estado 99


estado 133

   20 data_element: data_type IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 174


estado 134

   19 data_element: data_type IDENTIFIER ';' .

    $default  reduce usando la regla 19 (data_element)


estado 135

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IN . '{' id_list '}' ';'

    '{'  desplazar e ir al estado 175


estado 136

   45 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IS . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 176


estado 137

   43 union_data_element: IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 43 (union_data_element)


estado 138

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IN . '{' id_list '}' ';'

    '{'  desplazar e ir al estado 177


estado 139

   42 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IS . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 178


estado 140

   40 union_data_element: data_type IDENTIFIER ';' .

    $default  reduce usando la regla 40 (union_data_element)


estado 141

   86 arg_list: IDENTIFIER '=' expr .

    $default  reduce usando la regla 86 (arg_list)


estado 142

   10 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 179


estado 143

   87 arg_list: arg_list ',' IDENTIFIER . '=' expr

    '='  desplazar e ir al estado 180


estado 144

   14 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 181


estado 145

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' IDENTIFIER . ')' IDENTIFIER '{'

    ')'  desplazar e ir al estado 182


estado 146

   84 enum_values: IDENTIFIER . '=' INTEGER_LITERAL

    '='  desplazar e ir al estado 183


estado 147

   83 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values . '}'
   85 enum_values: enum_values . ',' IDENTIFIER '=' INTEGER_LITERAL

    '}'  desplazar e ir al estado 184
    ','  desplazar e ir al estado 185


estado 148

   77 sequence_type: IDENTIFIER '<' IDENTIFIER '>' .

    $default  reduce usando la regla 77 (sequence_type)


estado 149

   76 sequence_type: IDENTIFIER '<' data_type '>' .

    $default  reduce usando la regla 76 (sequence_type)


estado 150

   91 expr: '+' INTEGER_LITERAL .

    $default  reduce usando la regla 91 (expr)


estado 151

   94 expr: '+' FLOAT_LITERAL .

    $default  reduce usando la regla 94 (expr)


estado 152

   92 expr: '-' INTEGER_LITERAL .

    $default  reduce usando la regla 92 (expr)


estado 153

   95 expr: '-' FLOAT_LITERAL .

    $default  reduce usando la regla 95 (expr)


estado 154

   59 integer_type: KW_INTEGER '(' expr ',' . expr ']'
   61             | KW_INTEGER '(' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 186


estado 155

   58 integer_type: KW_INTEGER '[' expr ',' . expr ']'
   60             | KW_INTEGER '[' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 187


estado 156

   63 fixed_point_type: KW_FIXED_POINT '(' expr ',' . expr ',' expr ']'
   65                 | KW_FIXED_POINT '(' expr ',' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 188


estado 157

   62 fixed_point_type: KW_FIXED_POINT '[' expr ',' . expr ',' expr ']'
   64                 | KW_FIXED_POINT '[' expr ',' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 189


estado 158

   66 floating_point_type: KW_FLOATING_POINT '(' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 190


estado 159

   67 character_type: KW_CHARACTER '{' STRING_LITERAL '}' .

    $default  reduce usando la regla 67 (character_type)


estado 160

   98 character_set: INTEGER_LITERAL '-' . INTEGER_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 191


estado 161

   68 character_type: KW_CHARACTER '{' character_set '}' .

    $default  reduce usando la regla 68 (character_type)


estado 162

   99 character_set: character_set ',' . INTEGER_LITERAL
  100              | character_set ',' . INTEGER_LITERAL '-' INTEGER_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 192


estado 163

   69 character_string_type: KW_CHARACTER_STRING '{' STRING_LITERAL '}' .
   70                      | KW_CHARACTER_STRING '{' STRING_LITERAL '}' . '[' expr ',' expr ']'

    '['  desplazar e ir al estado 193

    $default  reduce usando la regla 69 (character_string_type)


estado 164

   71 character_string_type: KW_CHARACTER_STRING '{' character_set '}' .
   72                      | KW_CHARACTER_STRING '{' character_set '}' . '[' expr ',' expr ']'

    '['  desplazar e ir al estado 194

    $default  reduce usando la regla 71 (character_string_type)


estado 165

   73 bit_string_type: KW_BIT_STRING '[' expr ',' . expr ']'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 195


estado 166

   75 sequence_type: KW_SEQUENCE '<' IDENTIFIER '>' .

    $default  reduce usando la regla 75 (sequence_type)


estado 167

   74 sequence_type: KW_SEQUENCE '<' data_type '>' .

    $default  reduce usando la regla 74 (sequence_type)


estado 168

   79 dictionary_type: KW_DICTIONARY '<' IDENTIFIER ',' . data_type '>'
   81                | KW_DICTIONARY '<' IDENTIFIER ',' . IDENTIFIER '>'

    KW_ENUM                    desplazar e ir al estado 19
    KW_CLASS                   desplazar e ir al estado 20
    IDENTIFIER                 desplazar e ir al estado 196
    KW_INTEGER                 desplazar e ir al estado 22
    KW_FIXED_POINT             desplazar e ir al estado 23
    KW_FLOATING_POINT          desplazar e ir al estado 24
    KW_CHARACTER               desplazar e ir al estado 25
    KW_CHARACTER_STRING        desplazar e ir al estado 26
    KW_BIT_STRING              desplazar e ir al estado 27
    KW_SEQUENCE                desplazar e ir al estado 28
    KW_DICTIONARY              desplazar e ir al estado 29
    KW_PRINTABLE_ASCII_STRING  desplazar e ir al estado 30
    KW_UNICODE_STRING          desplazar e ir al estado 31

    data_type              ir al estado 197
    integer_type           ir al estado 34
    fixed_point_type       ir al estado 35
    floating_point_type    ir al estado 36
    character_type         ir al estado 37
    character_string_type  ir al estado 38
    bit_string_type        ir al estado 39
    sequence_type          ir al estado 40
    dictionary_type        ir al estado 41
    class_ref_type         ir al estado 42
    inline_enum_type       ir al estado 43


estado 169

   78 dictionary_type: KW_DICTIONARY '<' data_type ',' . data_type '>'
   80                | KW_DICTIONARY '<' data_type ',' . IDENTIFIER '>'

    KW_ENUM                    desplazar e ir al estado 19
    KW_CLASS                   desplazar e ir al estado 20
    IDENTIFIER                 desplazar e ir al estado 198
    KW_INTEGER                 desplazar e ir al estado 22
    KW_FIXED_POINT             desplazar e ir al estado 23
    KW_FLOATING_POINT          desplazar e ir al estado 24
    KW_CHARACTER               desplazar e ir al estado 25
    KW_CHARACTER_STRING        desplazar e ir al estado 26
    KW_BIT_STRING              desplazar e ir al estado 27
    KW_SEQUENCE                desplazar e ir al estado 28
    KW_DICTIONARY              desplazar e ir al estado 29
    KW_PRINTABLE_ASCII_STRING  desplazar e ir al estado 30
    KW_UNICODE_STRING          desplazar e ir al estado 31

    data_type              ir al estado 199
    integer_type           ir al estado 34
    fixed_point_type       ir al estado 35
    floating_point_type    ir al estado 36
    character_type         ir al estado 37
    character_string_type  ir al estado 38
    bit_string_type        ir al estado 39
    sequence_type          ir al estado 40
    dictionary_type        ir al estado 41
    class_ref_type         ir al estado 42
    inline_enum_type       ir al estado 43


estado 170

   24 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER . ';'
   27             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER . '(' arg_list ')' ';'
   76 sequence_type: IDENTIFIER . '<' data_type '>'
   77              | IDENTIFIER . '<' IDENTIFIER '>'

    ';'  desplazar e ir al estado 200
    '('  desplazar e ir al estado 201
    '<'  desplazar e ir al estado 67


estado 171

   21 data_element: KW_EXTEND IDENTIFIER KW_TO data_type . ';'

    ';'  desplazar e ir al estado 202


estado 172

   23 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' . expr ';'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 203


estado 173

   25 data_element: IDENTIFIER '(' arg_list ')' . IDENTIFIER ';'
   26             | IDENTIFIER '(' arg_list ')' . IDENTIFIER KW_DEFAULT '=' expr ';'
   29 data_group_begin: IDENTIFIER '(' arg_list ')' . '{'
   34 data_group: IDENTIFIER '(' arg_list ')' . data_element
   36           | IDENTIFIER '(' arg_list ')' . data_group

    KW_ENUM                    desplazar e ir al estado 19
    KW_CLASS                   desplazar e ir al estado 20
    KW_EXTEND                  desplazar e ir al estado 47
    IDENTIFIER                 desplazar e ir al estado 204
    KW_INTEGER                 desplazar e ir al estado 22
    KW_FIXED_POINT             desplazar e ir al estado 23
    KW_FLOATING_POINT          desplazar e ir al estado 24
    KW_CHARACTER               desplazar e ir al estado 25
    KW_CHARACTER_STRING        desplazar e ir al estado 26
    KW_BIT_STRING              desplazar e ir al estado 27
    KW_SEQUENCE                desplazar e ir al estado 28
    KW_DICTIONARY              desplazar e ir al estado 29
    KW_PRINTABLE_ASCII_STRING  desplazar e ir al estado 30
    KW_UNICODE_STRING          desplazar e ir al estado 31
    '{'                        desplazar e ir al estado 205

    data_element           ir al estado 206
    data_group_begin       ir al estado 52
    data_group             ir al estado 207
    data_type              ir al estado 54
    integer_type           ir al estado 34
    fixed_point_type       ir al estado 35
    floating_point_type    ir al estado 36
    character_type         ir al estado 37
    character_string_type  ir al estado 38
    bit_string_type        ir al estado 39
    sequence_type          ir al estado 40
    dictionary_type        ir al estado 41
    class_ref_type         ir al estado 42
    inline_enum_type       ir al estado 43


estado 174

   20 data_element: data_type IDENTIFIER KW_DEFAULT '=' . expr ';'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 208


estado 175

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' . id_list '}' ';'

    IDENTIFIER  desplazar e ir al estado 209

    id_list  ir al estado 210


estado 176

   45 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER . ';'

    ';'  desplazar e ir al estado 211


estado 177

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' . id_list '}' ';'

    IDENTIFIER  desplazar e ir al estado 209

    id_list  ir al estado 212


estado 178

   42 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER . ';'

    ';'  desplazar e ir al estado 213


estado 179

   10 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 214


estado 180

   87 arg_list: arg_list ',' IDENTIFIER '=' . expr

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 215


estado 181

   14 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 216


estado 182

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' IDENTIFIER ')' . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 217


estado 183

   84 enum_values: IDENTIFIER '=' . INTEGER_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 218


estado 184

   83 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values '}' .

    $default  reduce usando la regla 83 (inline_enum_type)


estado 185

   85 enum_values: enum_values ',' . IDENTIFIER '=' INTEGER_LITERAL

    IDENTIFIER  desplazar e ir al estado 219


estado 186

   59 integer_type: KW_INTEGER '(' expr ',' expr . ']'
   61             | KW_INTEGER '(' expr ',' expr . ')'

    ')'  desplazar e ir al estado 220
    ']'  desplazar e ir al estado 221


estado 187

   58 integer_type: KW_INTEGER '[' expr ',' expr . ']'
   60             | KW_INTEGER '[' expr ',' expr . ')'

    ')'  desplazar e ir al estado 222
    ']'  desplazar e ir al estado 223


estado 188

   63 fixed_point_type: KW_FIXED_POINT '(' expr ',' expr . ',' expr ']'
   65                 | KW_FIXED_POINT '(' expr ',' expr . ',' expr ')'

    ','  desplazar e ir al estado 224


estado 189

   62 fixed_point_type: KW_FIXED_POINT '[' expr ',' expr . ',' expr ']'
   64                 | KW_FIXED_POINT '[' expr ',' expr . ',' expr ')'

    ','  desplazar e ir al estado 225


estado 190

   66 floating_point_type: KW_FLOATING_POINT '(' expr ',' expr . ')'

    ')'  desplazar e ir al estado 226


estado 191

   98 character_set: INTEGER_LITERAL '-' INTEGER_LITERAL .

    $default  reduce usando la regla 98 (character_set)


estado 192

   99 character_set: character_set ',' INTEGER_LITERAL .
  100              | character_set ',' INTEGER_LITERAL . '-' INTEGER_LITERAL

    '-'  desplazar e ir al estado 227

    $default  reduce usando la regla 99 (character_set)


estado 193

   70 character_string_type: KW_CHARACTER_STRING '{' STRING_LITERAL '}' '[' . expr ',' expr ']'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 228


estado 194

   72 character_string_type: KW_CHARACTER_STRING '{' character_set '}' '[' . expr ',' expr ']'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 229


estado 195

   73 bit_string_type: KW_BIT_STRING '[' expr ',' expr . ']'

    ']'  desplazar e ir al estado 230


estado 196

   76 sequence_type: IDENTIFIER . '<' data_type '>'
   77              | IDENTIFIER . '<' IDENTIFIER '>'
   81 dictionary_type: KW_DICTIONARY '<' IDENTIFIER ',' IDENTIFIER . '>'

    '<'  desplazar e ir al estado 67
    '>'  desplazar e ir al estado 231


estado 197

   79 dictionary_type: KW_DICTIONARY '<' IDENTIFIER ',' data_type . '>'

    '>'  desplazar e ir al estado 232


estado 198

   76 sequence_type: IDENTIFIER . '<' data_type '>'
   77              | IDENTIFIER . '<' IDENTIFIER '>'
   80 dictionary_type: KW_DICTIONARY '<' data_type ',' IDENTIFIER . '>'

    '<'  desplazar e ir al estado 67
    '>'  desplazar e ir al estado 233


estado 199

   78 dictionary_type: KW_DICTIONARY '<' data_type ',' data_type . '>'

    '>'  desplazar e ir al estado 234


estado 200

   24 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER ';' .

    $default  reduce usando la regla 24 (data_element)


estado 201

   27 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' . arg_list ')' ';'

    IDENTIFIER  desplazar e ir al estado 60

    arg_list  ir al estado 235


estado 202

   21 data_element: KW_EXTEND IDENTIFIER KW_TO data_type ';' .

    $default  reduce usando la regla 21 (data_element)


estado 203

   23 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 236


estado 204

   22 data_element: IDENTIFIER . IDENTIFIER ';'
   23             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   25             | IDENTIFIER . '(' arg_list ')' IDENTIFIER ';'
   25             | IDENTIFIER '(' arg_list ')' IDENTIFIER . ';'
   26             | IDENTIFIER . '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   26             | IDENTIFIER '(' arg_list ')' IDENTIFIER . KW_DEFAULT '=' expr ';'
   28 data_group_begin: IDENTIFIER . '{'
   29                 | IDENTIFIER . '(' arg_list ')' '{'
   33 data_group: IDENTIFIER . data_element
   34           | IDENTIFIER . '(' arg_list ')' data_element
   35           | IDENTIFIER . data_group
   36           | IDENTIFIER . '(' arg_list ')' data_group
   76 sequence_type: IDENTIFIER . '<' data_type '>'
   77              | IDENTIFIER . '<' IDENTIFIER '>'

    KW_ENUM                    desplazar e ir al estado 19
    KW_CLASS                   desplazar e ir al estado 20
    KW_EXTEND                  desplazar e ir al estado 47
    KW_DEFAULT                 desplazar e ir al estado 237
    IDENTIFIER                 desplazar e ir al estado 84
    KW_INTEGER                 desplazar e ir al estado 22
    KW_FIXED_POINT             desplazar e ir al estado 23
    KW_FLOATING_POINT          desplazar e ir al estado 24
    KW_CHARACTER               desplazar e ir al estado 25
    KW_CHARACTER_STRING        desplazar e ir al estado 26
    KW_BIT_STRING              desplazar e ir al estado 27
    KW_SEQUENCE                desplazar e ir al estado 28
    KW_DICTIONARY              desplazar e ir al estado 29
    KW_PRINTABLE_ASCII_STRING  desplazar e ir al estado 30
    KW_UNICODE_STRING          desplazar e ir al estado 31
    '{'                        desplazar e ir al estado 85
    ';'                        desplazar e ir al estado 238
    '('                        desplazar e ir al estado 86
    '<'                        desplazar e ir al estado 67

    data_element           ir al estado 87
    data_group_begin       ir al estado 52
    data_group             ir al estado 88
    data_type              ir al estado 54
    integer_type           ir al estado 34
    fixed_point_type       ir al estado 35
    floating_point_type    ir al estado 36
    character_type         ir al estado 37
    character_string_type  ir al estado 38
    bit_string_type        ir al estado 39
    sequence_type          ir al estado 40
    dictionary_type        ir al estado 41
    class_ref_type         ir al estado 42
    inline_enum_type       ir al estado 43


estado 205

   29 data_group_begin: IDENTIFIER '(' arg_list ')' '{' .

    $default  reduce usando la regla 29 (data_group_begin)


estado 206

   34 data_group: IDENTIFIER '(' arg_list ')' data_element .

    $default  reduce usando la regla 34 (data_group)


estado 207

   36 data_group: IDENTIFIER '(' arg_list ')' data_group .

    $default  reduce usando la regla 36 (data_group)


estado 208

   20 data_element: data_type IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 239


estado 209

   88 id_list: IDENTIFIER .

    $default  reduce usando la regla 88 (id_list)


estado 210

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list . '}' ';'
   89 id_list: id_list . ',' IDENTIFIER

    '}'  desplazar e ir al estado 240
    ','  desplazar e ir al estado 241


estado 211

   45 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';' .

    $default  reduce usando la regla 45 (union_data_element)


estado 212

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list . '}' ';'
   89 id_list: id_list . ',' IDENTIFIER

    '}'  desplazar e ir al estado 242
    ','  desplazar e ir al estado 241


estado 213

   42 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IS IDENTIFIER ';' .

    $default  reduce usando la regla 42 (union_data_element)


estado 214

   10 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 10 (mapping_begin)


estado 215

   87 arg_list: arg_list ',' IDENTIFIER '=' expr .

    $default  reduce usando la regla 87 (arg_list)


estado 216

   14 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 14 (encoding_begin)


estado 217

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' IDENTIFIER ')' IDENTIFIER . '{'

    '{'  desplazar e ir al estado 243


estado 218

   84 enum_values: IDENTIFIER '=' INTEGER_LITERAL .

    $default  reduce usando la regla 84 (enum_values)


estado 219

   85 enum_values: enum_values ',' IDENTIFIER . '=' INTEGER_LITERAL

    '='  desplazar e ir al estado 244


estado 220

   61 integer_type: KW_INTEGER '(' expr ',' expr ')' .

    $default  reduce usando la regla 61 (integer_type)


estado 221

   59 integer_type: KW_INTEGER '(' expr ',' expr ']' .

    $default  reduce usando la regla 59 (integer_type)


estado 222

   60 integer_type: KW_INTEGER '[' expr ',' expr ')' .

    $default  reduce usando la regla 60 (integer_type)


estado 223

   58 integer_type: KW_INTEGER '[' expr ',' expr ']' .

    $default  reduce usando la regla 58 (integer_type)


estado 224

   63 fixed_point_type: KW_FIXED_POINT '(' expr ',' expr ',' . expr ']'
   65                 | KW_FIXED_POINT '(' expr ',' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 245


estado 225

   62 fixed_point_type: KW_FIXED_POINT '[' expr ',' expr ',' . expr ']'
   64                 | KW_FIXED_POINT '[' expr ',' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 246


estado 226

   66 floating_point_type: KW_FLOATING_POINT '(' expr ',' expr ')' .

    $default  reduce usando la regla 66 (floating_point_type)


estado 227

  100 character_set: character_set ',' INTEGER_LITERAL '-' . INTEGER_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 247


estado 228

   70 character_string_type: KW_CHARACTER_STRING '{' STRING_LITERAL '}' '[' expr . ',' expr ']'

    ','  desplazar e ir al estado 248


estado 229

   72 character_string_type: KW_CHARACTER_STRING '{' character_set '}' '[' expr . ',' expr ']'

    ','  desplazar e ir al estado 249


estado 230

   73 bit_string_type: KW_BIT_STRING '[' expr ',' expr ']' .

    $default  reduce usando la regla 73 (bit_string_type)


estado 231

   81 dictionary_type: KW_DICTIONARY '<' IDENTIFIER ',' IDENTIFIER '>' .

    $default  reduce usando la regla 81 (dictionary_type)


estado 232

   79 dictionary_type: KW_DICTIONARY '<' IDENTIFIER ',' data_type '>' .

    $default  reduce usando la regla 79 (dictionary_type)


estado 233

   80 dictionary_type: KW_DICTIONARY '<' data_type ',' IDENTIFIER '>' .

    $default  reduce usando la regla 80 (dictionary_type)


estado 234

   78 dictionary_type: KW_DICTIONARY '<' data_type ',' data_type '>' .

    $default  reduce usando la regla 78 (dictionary_type)


estado 235

   27 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list . ')' ';'
   87 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 250
    ','  desplazar e ir al estado 99


estado 236

   23 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 23 (data_element)


estado 237

   26 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 251


estado 238

   25 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER ';' .

    $default  reduce usando la regla 25 (data_element)


estado 239

   20 data_element: data_type IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 20 (data_element)


estado 240

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' . ';'

    ';'  desplazar e ir al estado 252


estado 241

   89 id_list: id_list ',' . IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 253


estado 242

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' . ';'

    ';'  desplazar e ir al estado 254


estado 243

   37 discriminated_union_begin: KW_DISCRIMINATED_UNION '(' KW_DISCRIMINANT '=' IDENTIFIER ')' IDENTIFIER '{' .

    $default  reduce usando la regla 37 (discriminated_union_begin)


estado 244

   85 enum_values: enum_values ',' IDENTIFIER '=' . INTEGER_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 255


estado 245

   63 fixed_point_type: KW_FIXED_POINT '(' expr ',' expr ',' expr . ']'
   65                 | KW_FIXED_POINT '(' expr ',' expr ',' expr . ')'

    ')'  desplazar e ir al estado 256
    ']'  desplazar e ir al estado 257


estado 246

   62 fixed_point_type: KW_FIXED_POINT '[' expr ',' expr ',' expr . ']'
   64                 | KW_FIXED_POINT '[' expr ',' expr ',' expr . ')'

    ')'  desplazar e ir al estado 258
    ']'  desplazar e ir al estado 259


estado 247

  100 character_set: character_set ',' INTEGER_LITERAL '-' INTEGER_LITERAL .

    $default  reduce usando la regla 100 (character_set)


estado 248

   70 character_string_type: KW_CHARACTER_STRING '{' STRING_LITERAL '}' '[' expr ',' . expr ']'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 260


estado 249

   72 character_string_type: KW_CHARACTER_STRING '{' character_set '}' '[' expr ',' . expr ']'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 261


estado 250

   27 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' . ';'

    ';'  desplazar e ir al estado 262


estado 251

   26 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' . expr ';'

    STRING_LITERAL   desplazar e ir al estado 106
    INTEGER_LITERAL  desplazar e ir al estado 107
    FLOAT_LITERAL    desplazar e ir al estado 108
    '+'              desplazar e ir al estado 109
    '-'              desplazar e ir al estado 110

    expr  ir al estado 263


estado 252

   44 union_data_element: IDENTIFIER IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';' .

    $default  reduce usando la regla 44 (union_data_element)


estado 253

   89 id_list: id_list ',' IDENTIFIER .

    $default  reduce usando la regla 89 (id_list)


estado 254

   41 union_data_element: data_type IDENTIFIER KW_WHEN_DISCRIMINANT_IN '{' id_list '}' ';' .

    $default  reduce usando la regla 41 (union_data_element)


estado 255

   85 enum_values: enum_values ',' IDENTIFIER '=' INTEGER_LITERAL .

    $default  reduce usando la regla 85 (enum_values)


estado 256

   65 fixed_point_type: KW_FIXED_POINT '(' expr ',' expr ',' expr ')' .

    $default  reduce usando la regla 65 (fixed_point_type)


estado 257

   63 fixed_point_type: KW_FIXED_POINT '(' expr ',' expr ',' expr ']' .

    $default  reduce usando la regla 63 (fixed_point_type)


estado 258

   64 fixed_point_type: KW_FIXED_POINT '[' expr ',' expr ',' expr ')' .

    $default  reduce usando la regla 64 (fixed_point_type)


estado 259

   62 fixed_point_type: KW_FIXED_POINT '[' expr ',' expr ',' expr ']' .

    $default  reduce usando la regla 62 (fixed_point_type)


estado 260

   70 character_string_type: KW_CHARACTER_STRING '{' STRING_LITERAL '}' '[' expr ',' expr . ']'

    ']'  desplazar e ir al estado 264


estado 261

   72 character_string_type: KW_CHARACTER_STRING '{' character_set '}' '[' expr ',' expr . ']'

    ']'  desplazar e ir al estado 265


estado 262

   27 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' ';' .

    $default  reduce usando la regla 27 (data_element)


estado 263

   26 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 266


estado 264

   70 character_string_type: KW_CHARACTER_STRING '{' STRING_LITERAL '}' '[' expr ',' expr ']' .

    $default  reduce usando la regla 70 (character_string_type)


estado 265

   72 character_string_type: KW_CHARACTER_STRING '{' character_set '}' '[' expr ',' expr ']' .

    $default  reduce usando la regla 72 (character_string_type)


estado 266

   26 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 26 (data_element)
