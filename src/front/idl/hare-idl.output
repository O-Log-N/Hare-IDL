Terminals unused in grammar

   CHAR_LITERAL


Gramática

    0 $accept: file $end

    1 file: /* vacío */
    2     | file publishable_struct
    3     | file mapping
    4     | file encoding

    5 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
    6                         | publishable_struct_begin data_type IDENTIFIER ';'
    7                         | publishable_struct_begin IDENTIFIER IDENTIFIER ';'

    8 publishable_struct: publishable_struct_begin '}' ';'

    9 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   10              | mapping_begin data_type IDENTIFIER ';'
   11              | mapping_begin IDENTIFIER IDENTIFIER ';'

   12 mapping: mapping_begin '}' ';'

   13 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   14               | encoding_begin data_element
   15               | encoding_begin data_group
   16               | encoding_begin KW_FENCE

   17 encoding: encoding_begin '}' ';'

   18 data_element: data_type IDENTIFIER ';'
   19             | data_type IDENTIFIER KW_DEFAULT '=' expr ';'
   20             | KW_EXTEND IDENTIFIER KW_TO data_type ';'
   21             | IDENTIFIER IDENTIFIER ';'
   22             | IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr ';'
   23             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER ';'
   24             | IDENTIFIER '(' arg_list ')' IDENTIFIER ';'
   25             | IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   26             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' ';'

   27 data_group_begin: IDENTIFIER '{'
   28                 | IDENTIFIER '(' arg_list ')' '{'
   29                 | data_group_begin data_element
   30                 | data_group_begin data_group

   31 data_group: data_group_begin '}'
   32           | IDENTIFIER data_element
   33           | IDENTIFIER '(' arg_list ')' data_element
   34           | IDENTIFIER data_group
   35           | IDENTIFIER '(' arg_list ')' data_group

   36 data_type: numeric_type
   37          | int_type
   38          | sequence_type
   39          | inline_enum_type
   40          | class_ref_type

   41 numeric_type: KW_NUMERIC '[' expr ',' expr ']'
   42             | KW_NUMERIC '(' expr ',' expr ']'
   43             | KW_NUMERIC '[' expr ',' expr ')'
   44             | KW_NUMERIC '(' expr ',' expr ')'

   45 int_type: KW_INT '[' expr ',' expr ']'
   46         | KW_INT '(' expr ',' expr ']'
   47         | KW_INT '[' expr ',' expr ')'
   48         | KW_INT '(' expr ',' expr ')'

   49 sequence_type: KW_SEQUENCE '<' data_type '>'
   50              | KW_SEQUENCE '<' IDENTIFIER '>'
   51              | IDENTIFIER '<' data_type '>'
   52              | IDENTIFIER '<' IDENTIFIER '>'

   53 class_ref_type: KW_CLASS IDENTIFIER

   54 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values '}'

   55 enum_values: IDENTIFIER '=' INTEGER_LITERAL
   56            | enum_values ',' IDENTIFIER '=' INTEGER_LITERAL

   57 arg_list: IDENTIFIER '=' expr
   58         | arg_list ',' IDENTIFIER '=' expr

   59 expr: INTEGER_LITERAL
   60     | FLOAT_LITERAL
   61     | STRING_LITERAL


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 9 13 24 25 26 28 33 35 42 44 46 48
')' (41) 9 13 24 25 26 28 33 35 43 44 47 48
',' (44) 41 42 43 44 45 46 47 48 56 58
';' (59) 6 7 8 10 11 12 17 18 19 20 21 22 23 24 25 26
'<' (60) 49 50 51 52
'=' (61) 19 22 25 55 56 57 58
'>' (62) 49 50 51 52
'[' (91) 41 43 45 47
']' (93) 41 42 45 46
'{' (123) 5 9 13 27 28 54
'}' (125) 8 12 17 31 54
error (256)
KW_PUBLISHABLE_STRUCT (258) 5 9 13
KW_ENUM (259) 54
KW_CLASS (260) 53
KW_MAPPING (261) 9
KW_ENCODING (262) 13
KW_NUMERIC (263) 41 42 43 44
KW_INT (264) 45 46 47 48
KW_SEQUENCE (265) 49 50
KW_EXTEND (266) 20 23 26
KW_TO (267) 20 23 26
KW_DEFAULT (268) 19 22 25
KW_FENCE (269) 16
IDENTIFIER (270) 5 6 7 9 10 11 13 18 19 20 21 22 23 24 25 26 27 28
    32 33 34 35 50 51 52 53 54 55 56 57 58
STRING_LITERAL (271) 61
INTEGER_LITERAL (272) 55 56 59
CHAR_LITERAL (273)
FLOAT_LITERAL (274) 60


No terminales con las reglas donde aparecen

$accept (31)
    en la izquierda: 0
file (32)
    en la izquierda: 1 2 3 4, en la derecha: 0 2 3 4
publishable_struct_begin (33)
    en la izquierda: 5 6 7, en la derecha: 6 7 8
publishable_struct (34)
    en la izquierda: 8, en la derecha: 2
mapping_begin (35)
    en la izquierda: 9 10 11, en la derecha: 10 11 12
mapping (36)
    en la izquierda: 12, en la derecha: 3
encoding_begin (37)
    en la izquierda: 13 14 15 16, en la derecha: 14 15 16 17
encoding (38)
    en la izquierda: 17, en la derecha: 4
data_element (39)
    en la izquierda: 18 19 20 21 22 23 24 25 26, en la derecha: 14
    29 32 33
data_group_begin (40)
    en la izquierda: 27 28 29 30, en la derecha: 29 30 31
data_group (41)
    en la izquierda: 31 32 33 34 35, en la derecha: 15 30 34 35
data_type (42)
    en la izquierda: 36 37 38 39 40, en la derecha: 6 10 18 19 20 49
    51
numeric_type (43)
    en la izquierda: 41 42 43 44, en la derecha: 36
int_type (44)
    en la izquierda: 45 46 47 48, en la derecha: 37
sequence_type (45)
    en la izquierda: 49 50 51 52, en la derecha: 38
class_ref_type (46)
    en la izquierda: 53, en la derecha: 40
inline_enum_type (47)
    en la izquierda: 54, en la derecha: 39
enum_values (48)
    en la izquierda: 55 56, en la derecha: 54 56
arg_list (49)
    en la izquierda: 57 58, en la derecha: 9 13 24 25 26 28 33 35 58
expr (50)
    en la izquierda: 59 60 61, en la derecha: 19 22 25 41 42 43 44
    45 46 47 48 57 58


estado 0

    0 $accept: . file $end

    $default  reduce usando la regla 1 (file)

    file  ir al estado 1


estado 1

    0 $accept: file . $end
    2 file: file . publishable_struct
    3     | file . mapping
    4     | file . encoding

    $end                   desplazar e ir al estado 2
    KW_PUBLISHABLE_STRUCT  desplazar e ir al estado 3
    KW_MAPPING             desplazar e ir al estado 4
    KW_ENCODING            desplazar e ir al estado 5

    publishable_struct_begin  ir al estado 6
    publishable_struct        ir al estado 7
    mapping_begin             ir al estado 8
    mapping                   ir al estado 9
    encoding_begin            ir al estado 10
    encoding                  ir al estado 11


estado 2

    0 $accept: file $end .

    $default  aceptar


estado 3

    5 publishable_struct_begin: KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 12


estado 4

    9 mapping_begin: KW_MAPPING . '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    '('  desplazar e ir al estado 13


estado 5

   13 encoding_begin: KW_ENCODING . '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    '('  desplazar e ir al estado 14


estado 6

    6 publishable_struct_begin: publishable_struct_begin . data_type IDENTIFIER ';'
    7                         | publishable_struct_begin . IDENTIFIER IDENTIFIER ';'
    8 publishable_struct: publishable_struct_begin . '}' ';'

    KW_ENUM      desplazar e ir al estado 15
    KW_CLASS     desplazar e ir al estado 16
    KW_NUMERIC   desplazar e ir al estado 17
    KW_INT       desplazar e ir al estado 18
    KW_SEQUENCE  desplazar e ir al estado 19
    IDENTIFIER   desplazar e ir al estado 20
    '}'          desplazar e ir al estado 21

    data_type         ir al estado 22
    numeric_type      ir al estado 23
    int_type          ir al estado 24
    sequence_type     ir al estado 25
    class_ref_type    ir al estado 26
    inline_enum_type  ir al estado 27


estado 7

    2 file: file publishable_struct .

    $default  reduce usando la regla 2 (file)


estado 8

   10 mapping_begin: mapping_begin . data_type IDENTIFIER ';'
   11              | mapping_begin . IDENTIFIER IDENTIFIER ';'
   12 mapping: mapping_begin . '}' ';'

    KW_ENUM      desplazar e ir al estado 15
    KW_CLASS     desplazar e ir al estado 16
    KW_NUMERIC   desplazar e ir al estado 17
    KW_INT       desplazar e ir al estado 18
    KW_SEQUENCE  desplazar e ir al estado 19
    IDENTIFIER   desplazar e ir al estado 28
    '}'          desplazar e ir al estado 29

    data_type         ir al estado 30
    numeric_type      ir al estado 23
    int_type          ir al estado 24
    sequence_type     ir al estado 25
    class_ref_type    ir al estado 26
    inline_enum_type  ir al estado 27


estado 9

    3 file: file mapping .

    $default  reduce usando la regla 3 (file)


estado 10

   14 encoding_begin: encoding_begin . data_element
   15               | encoding_begin . data_group
   16               | encoding_begin . KW_FENCE
   17 encoding: encoding_begin . '}' ';'

    KW_ENUM      desplazar e ir al estado 15
    KW_CLASS     desplazar e ir al estado 16
    KW_NUMERIC   desplazar e ir al estado 17
    KW_INT       desplazar e ir al estado 18
    KW_SEQUENCE  desplazar e ir al estado 19
    KW_EXTEND    desplazar e ir al estado 31
    KW_FENCE     desplazar e ir al estado 32
    IDENTIFIER   desplazar e ir al estado 33
    '}'          desplazar e ir al estado 34

    data_element      ir al estado 35
    data_group_begin  ir al estado 36
    data_group        ir al estado 37
    data_type         ir al estado 38
    numeric_type      ir al estado 23
    int_type          ir al estado 24
    sequence_type     ir al estado 25
    class_ref_type    ir al estado 26
    inline_enum_type  ir al estado 27


estado 11

    4 file: file encoding .

    $default  reduce usando la regla 4 (file)


estado 12

    5 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 39


estado 13

    9 mapping_begin: KW_MAPPING '(' . arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 40

    arg_list  ir al estado 41


estado 14

   13 encoding_begin: KW_ENCODING '(' . arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 40

    arg_list  ir al estado 42


estado 15

   54 inline_enum_type: KW_ENUM . IDENTIFIER '{' enum_values '}'

    IDENTIFIER  desplazar e ir al estado 43


estado 16

   53 class_ref_type: KW_CLASS . IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 44


estado 17

   41 numeric_type: KW_NUMERIC . '[' expr ',' expr ']'
   42             | KW_NUMERIC . '(' expr ',' expr ']'
   43             | KW_NUMERIC . '[' expr ',' expr ')'
   44             | KW_NUMERIC . '(' expr ',' expr ')'

    '('  desplazar e ir al estado 45
    '['  desplazar e ir al estado 46


estado 18

   45 int_type: KW_INT . '[' expr ',' expr ']'
   46         | KW_INT . '(' expr ',' expr ']'
   47         | KW_INT . '[' expr ',' expr ')'
   48         | KW_INT . '(' expr ',' expr ')'

    '('  desplazar e ir al estado 47
    '['  desplazar e ir al estado 48


estado 19

   49 sequence_type: KW_SEQUENCE . '<' data_type '>'
   50              | KW_SEQUENCE . '<' IDENTIFIER '>'

    '<'  desplazar e ir al estado 49


estado 20

    7 publishable_struct_begin: publishable_struct_begin IDENTIFIER . IDENTIFIER ';'
   51 sequence_type: IDENTIFIER . '<' data_type '>'
   52              | IDENTIFIER . '<' IDENTIFIER '>'

    IDENTIFIER  desplazar e ir al estado 50
    '<'         desplazar e ir al estado 51


estado 21

    8 publishable_struct: publishable_struct_begin '}' . ';'

    ';'  desplazar e ir al estado 52


estado 22

    6 publishable_struct_begin: publishable_struct_begin data_type . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 53


estado 23

   36 data_type: numeric_type .

    $default  reduce usando la regla 36 (data_type)


estado 24

   37 data_type: int_type .

    $default  reduce usando la regla 37 (data_type)


estado 25

   38 data_type: sequence_type .

    $default  reduce usando la regla 38 (data_type)


estado 26

   40 data_type: class_ref_type .

    $default  reduce usando la regla 40 (data_type)


estado 27

   39 data_type: inline_enum_type .

    $default  reduce usando la regla 39 (data_type)


estado 28

   11 mapping_begin: mapping_begin IDENTIFIER . IDENTIFIER ';'
   51 sequence_type: IDENTIFIER . '<' data_type '>'
   52              | IDENTIFIER . '<' IDENTIFIER '>'

    IDENTIFIER  desplazar e ir al estado 54
    '<'         desplazar e ir al estado 51


estado 29

   12 mapping: mapping_begin '}' . ';'

    ';'  desplazar e ir al estado 55


estado 30

   10 mapping_begin: mapping_begin data_type . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 56


estado 31

   20 data_element: KW_EXTEND . IDENTIFIER KW_TO data_type ';'
   23             | KW_EXTEND . IDENTIFIER KW_TO IDENTIFIER ';'
   26             | KW_EXTEND . IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' ';'

    IDENTIFIER  desplazar e ir al estado 57


estado 32

   16 encoding_begin: encoding_begin KW_FENCE .

    $default  reduce usando la regla 16 (encoding_begin)


estado 33

   21 data_element: IDENTIFIER . IDENTIFIER ';'
   22             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   24             | IDENTIFIER . '(' arg_list ')' IDENTIFIER ';'
   25             | IDENTIFIER . '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   27 data_group_begin: IDENTIFIER . '{'
   28                 | IDENTIFIER . '(' arg_list ')' '{'
   32 data_group: IDENTIFIER . data_element
   33           | IDENTIFIER . '(' arg_list ')' data_element
   34           | IDENTIFIER . data_group
   35           | IDENTIFIER . '(' arg_list ')' data_group
   51 sequence_type: IDENTIFIER . '<' data_type '>'
   52              | IDENTIFIER . '<' IDENTIFIER '>'

    KW_ENUM      desplazar e ir al estado 15
    KW_CLASS     desplazar e ir al estado 16
    KW_NUMERIC   desplazar e ir al estado 17
    KW_INT       desplazar e ir al estado 18
    KW_SEQUENCE  desplazar e ir al estado 19
    KW_EXTEND    desplazar e ir al estado 31
    IDENTIFIER   desplazar e ir al estado 58
    '{'          desplazar e ir al estado 59
    '('          desplazar e ir al estado 60
    '<'          desplazar e ir al estado 51

    data_element      ir al estado 61
    data_group_begin  ir al estado 36
    data_group        ir al estado 62
    data_type         ir al estado 38
    numeric_type      ir al estado 23
    int_type          ir al estado 24
    sequence_type     ir al estado 25
    class_ref_type    ir al estado 26
    inline_enum_type  ir al estado 27


estado 34

   17 encoding: encoding_begin '}' . ';'

    ';'  desplazar e ir al estado 63


estado 35

   14 encoding_begin: encoding_begin data_element .

    $default  reduce usando la regla 14 (encoding_begin)


estado 36

   29 data_group_begin: data_group_begin . data_element
   30                 | data_group_begin . data_group
   31 data_group: data_group_begin . '}'

    KW_ENUM      desplazar e ir al estado 15
    KW_CLASS     desplazar e ir al estado 16
    KW_NUMERIC   desplazar e ir al estado 17
    KW_INT       desplazar e ir al estado 18
    KW_SEQUENCE  desplazar e ir al estado 19
    KW_EXTEND    desplazar e ir al estado 31
    IDENTIFIER   desplazar e ir al estado 33
    '}'          desplazar e ir al estado 64

    data_element      ir al estado 65
    data_group_begin  ir al estado 36
    data_group        ir al estado 66
    data_type         ir al estado 38
    numeric_type      ir al estado 23
    int_type          ir al estado 24
    sequence_type     ir al estado 25
    class_ref_type    ir al estado 26
    inline_enum_type  ir al estado 27


estado 37

   15 encoding_begin: encoding_begin data_group .

    $default  reduce usando la regla 15 (encoding_begin)


estado 38

   18 data_element: data_type . IDENTIFIER ';'
   19             | data_type . IDENTIFIER KW_DEFAULT '=' expr ';'

    IDENTIFIER  desplazar e ir al estado 67


estado 39

    5 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 5 (publishable_struct_begin)


estado 40

   57 arg_list: IDENTIFIER . '=' expr

    '='  desplazar e ir al estado 68


estado 41

    9 mapping_begin: KW_MAPPING '(' arg_list . ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   58 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 69
    ','  desplazar e ir al estado 70


estado 42

   13 encoding_begin: KW_ENCODING '(' arg_list . ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   58 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 71
    ','  desplazar e ir al estado 70


estado 43

   54 inline_enum_type: KW_ENUM IDENTIFIER . '{' enum_values '}'

    '{'  desplazar e ir al estado 72


estado 44

   53 class_ref_type: KW_CLASS IDENTIFIER .

    $default  reduce usando la regla 53 (class_ref_type)


estado 45

   42 numeric_type: KW_NUMERIC '(' . expr ',' expr ']'
   44             | KW_NUMERIC '(' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 73
    INTEGER_LITERAL  desplazar e ir al estado 74
    FLOAT_LITERAL    desplazar e ir al estado 75

    expr  ir al estado 76


estado 46

   41 numeric_type: KW_NUMERIC '[' . expr ',' expr ']'
   43             | KW_NUMERIC '[' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 73
    INTEGER_LITERAL  desplazar e ir al estado 74
    FLOAT_LITERAL    desplazar e ir al estado 75

    expr  ir al estado 77


estado 47

   46 int_type: KW_INT '(' . expr ',' expr ']'
   48         | KW_INT '(' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 73
    INTEGER_LITERAL  desplazar e ir al estado 74
    FLOAT_LITERAL    desplazar e ir al estado 75

    expr  ir al estado 78


estado 48

   45 int_type: KW_INT '[' . expr ',' expr ']'
   47         | KW_INT '[' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 73
    INTEGER_LITERAL  desplazar e ir al estado 74
    FLOAT_LITERAL    desplazar e ir al estado 75

    expr  ir al estado 79


estado 49

   49 sequence_type: KW_SEQUENCE '<' . data_type '>'
   50              | KW_SEQUENCE '<' . IDENTIFIER '>'

    KW_ENUM      desplazar e ir al estado 15
    KW_CLASS     desplazar e ir al estado 16
    KW_NUMERIC   desplazar e ir al estado 17
    KW_INT       desplazar e ir al estado 18
    KW_SEQUENCE  desplazar e ir al estado 19
    IDENTIFIER   desplazar e ir al estado 80

    data_type         ir al estado 81
    numeric_type      ir al estado 23
    int_type          ir al estado 24
    sequence_type     ir al estado 25
    class_ref_type    ir al estado 26
    inline_enum_type  ir al estado 27


estado 50

    7 publishable_struct_begin: publishable_struct_begin IDENTIFIER IDENTIFIER . ';'

    ';'  desplazar e ir al estado 82


estado 51

   51 sequence_type: IDENTIFIER '<' . data_type '>'
   52              | IDENTIFIER '<' . IDENTIFIER '>'

    KW_ENUM      desplazar e ir al estado 15
    KW_CLASS     desplazar e ir al estado 16
    KW_NUMERIC   desplazar e ir al estado 17
    KW_INT       desplazar e ir al estado 18
    KW_SEQUENCE  desplazar e ir al estado 19
    IDENTIFIER   desplazar e ir al estado 83

    data_type         ir al estado 84
    numeric_type      ir al estado 23
    int_type          ir al estado 24
    sequence_type     ir al estado 25
    class_ref_type    ir al estado 26
    inline_enum_type  ir al estado 27


estado 52

    8 publishable_struct: publishable_struct_begin '}' ';' .

    $default  reduce usando la regla 8 (publishable_struct)


estado 53

    6 publishable_struct_begin: publishable_struct_begin data_type IDENTIFIER . ';'

    ';'  desplazar e ir al estado 85


estado 54

   11 mapping_begin: mapping_begin IDENTIFIER IDENTIFIER . ';'

    ';'  desplazar e ir al estado 86


estado 55

   12 mapping: mapping_begin '}' ';' .

    $default  reduce usando la regla 12 (mapping)


estado 56

   10 mapping_begin: mapping_begin data_type IDENTIFIER . ';'

    ';'  desplazar e ir al estado 87


estado 57

   20 data_element: KW_EXTEND IDENTIFIER . KW_TO data_type ';'
   23             | KW_EXTEND IDENTIFIER . KW_TO IDENTIFIER ';'
   26             | KW_EXTEND IDENTIFIER . KW_TO IDENTIFIER '(' arg_list ')' ';'

    KW_TO  desplazar e ir al estado 88


estado 58

   21 data_element: IDENTIFIER . IDENTIFIER ';'
   21             | IDENTIFIER IDENTIFIER . ';'
   22             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   22             | IDENTIFIER IDENTIFIER . KW_DEFAULT '=' expr ';'
   24             | IDENTIFIER . '(' arg_list ')' IDENTIFIER ';'
   25             | IDENTIFIER . '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   27 data_group_begin: IDENTIFIER . '{'
   28                 | IDENTIFIER . '(' arg_list ')' '{'
   32 data_group: IDENTIFIER . data_element
   33           | IDENTIFIER . '(' arg_list ')' data_element
   34           | IDENTIFIER . data_group
   35           | IDENTIFIER . '(' arg_list ')' data_group
   51 sequence_type: IDENTIFIER . '<' data_type '>'
   52              | IDENTIFIER . '<' IDENTIFIER '>'

    KW_ENUM      desplazar e ir al estado 15
    KW_CLASS     desplazar e ir al estado 16
    KW_NUMERIC   desplazar e ir al estado 17
    KW_INT       desplazar e ir al estado 18
    KW_SEQUENCE  desplazar e ir al estado 19
    KW_EXTEND    desplazar e ir al estado 31
    KW_DEFAULT   desplazar e ir al estado 89
    IDENTIFIER   desplazar e ir al estado 58
    '{'          desplazar e ir al estado 59
    ';'          desplazar e ir al estado 90
    '('          desplazar e ir al estado 60
    '<'          desplazar e ir al estado 51

    data_element      ir al estado 61
    data_group_begin  ir al estado 36
    data_group        ir al estado 62
    data_type         ir al estado 38
    numeric_type      ir al estado 23
    int_type          ir al estado 24
    sequence_type     ir al estado 25
    class_ref_type    ir al estado 26
    inline_enum_type  ir al estado 27


estado 59

   27 data_group_begin: IDENTIFIER '{' .

    $default  reduce usando la regla 27 (data_group_begin)


estado 60

   24 data_element: IDENTIFIER '(' . arg_list ')' IDENTIFIER ';'
   25             | IDENTIFIER '(' . arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   28 data_group_begin: IDENTIFIER '(' . arg_list ')' '{'
   33 data_group: IDENTIFIER '(' . arg_list ')' data_element
   35           | IDENTIFIER '(' . arg_list ')' data_group

    IDENTIFIER  desplazar e ir al estado 40

    arg_list  ir al estado 91


estado 61

   32 data_group: IDENTIFIER data_element .

    $default  reduce usando la regla 32 (data_group)


estado 62

   34 data_group: IDENTIFIER data_group .

    $default  reduce usando la regla 34 (data_group)


estado 63

   17 encoding: encoding_begin '}' ';' .

    $default  reduce usando la regla 17 (encoding)


estado 64

   31 data_group: data_group_begin '}' .

    $default  reduce usando la regla 31 (data_group)


estado 65

   29 data_group_begin: data_group_begin data_element .

    $default  reduce usando la regla 29 (data_group_begin)


estado 66

   30 data_group_begin: data_group_begin data_group .

    $default  reduce usando la regla 30 (data_group_begin)


estado 67

   18 data_element: data_type IDENTIFIER . ';'
   19             | data_type IDENTIFIER . KW_DEFAULT '=' expr ';'

    KW_DEFAULT  desplazar e ir al estado 92
    ';'         desplazar e ir al estado 93


estado 68

   57 arg_list: IDENTIFIER '=' . expr

    STRING_LITERAL   desplazar e ir al estado 73
    INTEGER_LITERAL  desplazar e ir al estado 74
    FLOAT_LITERAL    desplazar e ir al estado 75

    expr  ir al estado 94


estado 69

    9 mapping_begin: KW_MAPPING '(' arg_list ')' . KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    KW_PUBLISHABLE_STRUCT  desplazar e ir al estado 95


estado 70

   58 arg_list: arg_list ',' . IDENTIFIER '=' expr

    IDENTIFIER  desplazar e ir al estado 96


estado 71

   13 encoding_begin: KW_ENCODING '(' arg_list ')' . KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    KW_PUBLISHABLE_STRUCT  desplazar e ir al estado 97


estado 72

   54 inline_enum_type: KW_ENUM IDENTIFIER '{' . enum_values '}'

    IDENTIFIER  desplazar e ir al estado 98

    enum_values  ir al estado 99


estado 73

   61 expr: STRING_LITERAL .

    $default  reduce usando la regla 61 (expr)


estado 74

   59 expr: INTEGER_LITERAL .

    $default  reduce usando la regla 59 (expr)


estado 75

   60 expr: FLOAT_LITERAL .

    $default  reduce usando la regla 60 (expr)


estado 76

   42 numeric_type: KW_NUMERIC '(' expr . ',' expr ']'
   44             | KW_NUMERIC '(' expr . ',' expr ')'

    ','  desplazar e ir al estado 100


estado 77

   41 numeric_type: KW_NUMERIC '[' expr . ',' expr ']'
   43             | KW_NUMERIC '[' expr . ',' expr ')'

    ','  desplazar e ir al estado 101


estado 78

   46 int_type: KW_INT '(' expr . ',' expr ']'
   48         | KW_INT '(' expr . ',' expr ')'

    ','  desplazar e ir al estado 102


estado 79

   45 int_type: KW_INT '[' expr . ',' expr ']'
   47         | KW_INT '[' expr . ',' expr ')'

    ','  desplazar e ir al estado 103


estado 80

   50 sequence_type: KW_SEQUENCE '<' IDENTIFIER . '>'
   51              | IDENTIFIER . '<' data_type '>'
   52              | IDENTIFIER . '<' IDENTIFIER '>'

    '<'  desplazar e ir al estado 51
    '>'  desplazar e ir al estado 104


estado 81

   49 sequence_type: KW_SEQUENCE '<' data_type . '>'

    '>'  desplazar e ir al estado 105


estado 82

    7 publishable_struct_begin: publishable_struct_begin IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 7 (publishable_struct_begin)


estado 83

   51 sequence_type: IDENTIFIER . '<' data_type '>'
   52              | IDENTIFIER . '<' IDENTIFIER '>'
   52              | IDENTIFIER '<' IDENTIFIER . '>'

    '<'  desplazar e ir al estado 51
    '>'  desplazar e ir al estado 106


estado 84

   51 sequence_type: IDENTIFIER '<' data_type . '>'

    '>'  desplazar e ir al estado 107


estado 85

    6 publishable_struct_begin: publishable_struct_begin data_type IDENTIFIER ';' .

    $default  reduce usando la regla 6 (publishable_struct_begin)


estado 86

   11 mapping_begin: mapping_begin IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 11 (mapping_begin)


estado 87

   10 mapping_begin: mapping_begin data_type IDENTIFIER ';' .

    $default  reduce usando la regla 10 (mapping_begin)


estado 88

   20 data_element: KW_EXTEND IDENTIFIER KW_TO . data_type ';'
   23             | KW_EXTEND IDENTIFIER KW_TO . IDENTIFIER ';'
   26             | KW_EXTEND IDENTIFIER KW_TO . IDENTIFIER '(' arg_list ')' ';'

    KW_ENUM      desplazar e ir al estado 15
    KW_CLASS     desplazar e ir al estado 16
    KW_NUMERIC   desplazar e ir al estado 17
    KW_INT       desplazar e ir al estado 18
    KW_SEQUENCE  desplazar e ir al estado 19
    IDENTIFIER   desplazar e ir al estado 108

    data_type         ir al estado 109
    numeric_type      ir al estado 23
    int_type          ir al estado 24
    sequence_type     ir al estado 25
    class_ref_type    ir al estado 26
    inline_enum_type  ir al estado 27


estado 89

   22 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 110


estado 90

   21 data_element: IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 21 (data_element)


estado 91

   24 data_element: IDENTIFIER '(' arg_list . ')' IDENTIFIER ';'
   25             | IDENTIFIER '(' arg_list . ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   28 data_group_begin: IDENTIFIER '(' arg_list . ')' '{'
   33 data_group: IDENTIFIER '(' arg_list . ')' data_element
   35           | IDENTIFIER '(' arg_list . ')' data_group
   58 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 111
    ','  desplazar e ir al estado 70


estado 92

   19 data_element: data_type IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 112


estado 93

   18 data_element: data_type IDENTIFIER ';' .

    $default  reduce usando la regla 18 (data_element)


estado 94

   57 arg_list: IDENTIFIER '=' expr .

    $default  reduce usando la regla 57 (arg_list)


estado 95

    9 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 113


estado 96

   58 arg_list: arg_list ',' IDENTIFIER . '=' expr

    '='  desplazar e ir al estado 114


estado 97

   13 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 115


estado 98

   55 enum_values: IDENTIFIER . '=' INTEGER_LITERAL

    '='  desplazar e ir al estado 116


estado 99

   54 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values . '}'
   56 enum_values: enum_values . ',' IDENTIFIER '=' INTEGER_LITERAL

    '}'  desplazar e ir al estado 117
    ','  desplazar e ir al estado 118


estado 100

   42 numeric_type: KW_NUMERIC '(' expr ',' . expr ']'
   44             | KW_NUMERIC '(' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 73
    INTEGER_LITERAL  desplazar e ir al estado 74
    FLOAT_LITERAL    desplazar e ir al estado 75

    expr  ir al estado 119


estado 101

   41 numeric_type: KW_NUMERIC '[' expr ',' . expr ']'
   43             | KW_NUMERIC '[' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 73
    INTEGER_LITERAL  desplazar e ir al estado 74
    FLOAT_LITERAL    desplazar e ir al estado 75

    expr  ir al estado 120


estado 102

   46 int_type: KW_INT '(' expr ',' . expr ']'
   48         | KW_INT '(' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 73
    INTEGER_LITERAL  desplazar e ir al estado 74
    FLOAT_LITERAL    desplazar e ir al estado 75

    expr  ir al estado 121


estado 103

   45 int_type: KW_INT '[' expr ',' . expr ']'
   47         | KW_INT '[' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 73
    INTEGER_LITERAL  desplazar e ir al estado 74
    FLOAT_LITERAL    desplazar e ir al estado 75

    expr  ir al estado 122


estado 104

   50 sequence_type: KW_SEQUENCE '<' IDENTIFIER '>' .

    $default  reduce usando la regla 50 (sequence_type)


estado 105

   49 sequence_type: KW_SEQUENCE '<' data_type '>' .

    $default  reduce usando la regla 49 (sequence_type)


estado 106

   52 sequence_type: IDENTIFIER '<' IDENTIFIER '>' .

    $default  reduce usando la regla 52 (sequence_type)


estado 107

   51 sequence_type: IDENTIFIER '<' data_type '>' .

    $default  reduce usando la regla 51 (sequence_type)


estado 108

   23 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER . ';'
   26             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER . '(' arg_list ')' ';'
   51 sequence_type: IDENTIFIER . '<' data_type '>'
   52              | IDENTIFIER . '<' IDENTIFIER '>'

    ';'  desplazar e ir al estado 123
    '('  desplazar e ir al estado 124
    '<'  desplazar e ir al estado 51


estado 109

   20 data_element: KW_EXTEND IDENTIFIER KW_TO data_type . ';'

    ';'  desplazar e ir al estado 125


estado 110

   22 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' . expr ';'

    STRING_LITERAL   desplazar e ir al estado 73
    INTEGER_LITERAL  desplazar e ir al estado 74
    FLOAT_LITERAL    desplazar e ir al estado 75

    expr  ir al estado 126


estado 111

   24 data_element: IDENTIFIER '(' arg_list ')' . IDENTIFIER ';'
   25             | IDENTIFIER '(' arg_list ')' . IDENTIFIER KW_DEFAULT '=' expr ';'
   28 data_group_begin: IDENTIFIER '(' arg_list ')' . '{'
   33 data_group: IDENTIFIER '(' arg_list ')' . data_element
   35           | IDENTIFIER '(' arg_list ')' . data_group

    KW_ENUM      desplazar e ir al estado 15
    KW_CLASS     desplazar e ir al estado 16
    KW_NUMERIC   desplazar e ir al estado 17
    KW_INT       desplazar e ir al estado 18
    KW_SEQUENCE  desplazar e ir al estado 19
    KW_EXTEND    desplazar e ir al estado 31
    IDENTIFIER   desplazar e ir al estado 127
    '{'          desplazar e ir al estado 128

    data_element      ir al estado 129
    data_group_begin  ir al estado 36
    data_group        ir al estado 130
    data_type         ir al estado 38
    numeric_type      ir al estado 23
    int_type          ir al estado 24
    sequence_type     ir al estado 25
    class_ref_type    ir al estado 26
    inline_enum_type  ir al estado 27


estado 112

   19 data_element: data_type IDENTIFIER KW_DEFAULT '=' . expr ';'

    STRING_LITERAL   desplazar e ir al estado 73
    INTEGER_LITERAL  desplazar e ir al estado 74
    FLOAT_LITERAL    desplazar e ir al estado 75

    expr  ir al estado 131


estado 113

    9 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 132


estado 114

   58 arg_list: arg_list ',' IDENTIFIER '=' . expr

    STRING_LITERAL   desplazar e ir al estado 73
    INTEGER_LITERAL  desplazar e ir al estado 74
    FLOAT_LITERAL    desplazar e ir al estado 75

    expr  ir al estado 133


estado 115

   13 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 134


estado 116

   55 enum_values: IDENTIFIER '=' . INTEGER_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 135


estado 117

   54 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values '}' .

    $default  reduce usando la regla 54 (inline_enum_type)


estado 118

   56 enum_values: enum_values ',' . IDENTIFIER '=' INTEGER_LITERAL

    IDENTIFIER  desplazar e ir al estado 136


estado 119

   42 numeric_type: KW_NUMERIC '(' expr ',' expr . ']'
   44             | KW_NUMERIC '(' expr ',' expr . ')'

    ')'  desplazar e ir al estado 137
    ']'  desplazar e ir al estado 138


estado 120

   41 numeric_type: KW_NUMERIC '[' expr ',' expr . ']'
   43             | KW_NUMERIC '[' expr ',' expr . ')'

    ')'  desplazar e ir al estado 139
    ']'  desplazar e ir al estado 140


estado 121

   46 int_type: KW_INT '(' expr ',' expr . ']'
   48         | KW_INT '(' expr ',' expr . ')'

    ')'  desplazar e ir al estado 141
    ']'  desplazar e ir al estado 142


estado 122

   45 int_type: KW_INT '[' expr ',' expr . ']'
   47         | KW_INT '[' expr ',' expr . ')'

    ')'  desplazar e ir al estado 143
    ']'  desplazar e ir al estado 144


estado 123

   23 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER ';' .

    $default  reduce usando la regla 23 (data_element)


estado 124

   26 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' . arg_list ')' ';'

    IDENTIFIER  desplazar e ir al estado 40

    arg_list  ir al estado 145


estado 125

   20 data_element: KW_EXTEND IDENTIFIER KW_TO data_type ';' .

    $default  reduce usando la regla 20 (data_element)


estado 126

   22 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 146


estado 127

   21 data_element: IDENTIFIER . IDENTIFIER ';'
   22             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   24             | IDENTIFIER . '(' arg_list ')' IDENTIFIER ';'
   24             | IDENTIFIER '(' arg_list ')' IDENTIFIER . ';'
   25             | IDENTIFIER . '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   25             | IDENTIFIER '(' arg_list ')' IDENTIFIER . KW_DEFAULT '=' expr ';'
   27 data_group_begin: IDENTIFIER . '{'
   28                 | IDENTIFIER . '(' arg_list ')' '{'
   32 data_group: IDENTIFIER . data_element
   33           | IDENTIFIER . '(' arg_list ')' data_element
   34           | IDENTIFIER . data_group
   35           | IDENTIFIER . '(' arg_list ')' data_group
   51 sequence_type: IDENTIFIER . '<' data_type '>'
   52              | IDENTIFIER . '<' IDENTIFIER '>'

    KW_ENUM      desplazar e ir al estado 15
    KW_CLASS     desplazar e ir al estado 16
    KW_NUMERIC   desplazar e ir al estado 17
    KW_INT       desplazar e ir al estado 18
    KW_SEQUENCE  desplazar e ir al estado 19
    KW_EXTEND    desplazar e ir al estado 31
    KW_DEFAULT   desplazar e ir al estado 147
    IDENTIFIER   desplazar e ir al estado 58
    '{'          desplazar e ir al estado 59
    ';'          desplazar e ir al estado 148
    '('          desplazar e ir al estado 60
    '<'          desplazar e ir al estado 51

    data_element      ir al estado 61
    data_group_begin  ir al estado 36
    data_group        ir al estado 62
    data_type         ir al estado 38
    numeric_type      ir al estado 23
    int_type          ir al estado 24
    sequence_type     ir al estado 25
    class_ref_type    ir al estado 26
    inline_enum_type  ir al estado 27


estado 128

   28 data_group_begin: IDENTIFIER '(' arg_list ')' '{' .

    $default  reduce usando la regla 28 (data_group_begin)


estado 129

   33 data_group: IDENTIFIER '(' arg_list ')' data_element .

    $default  reduce usando la regla 33 (data_group)


estado 130

   35 data_group: IDENTIFIER '(' arg_list ')' data_group .

    $default  reduce usando la regla 35 (data_group)


estado 131

   19 data_element: data_type IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 149


estado 132

    9 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 9 (mapping_begin)


estado 133

   58 arg_list: arg_list ',' IDENTIFIER '=' expr .

    $default  reduce usando la regla 58 (arg_list)


estado 134

   13 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 13 (encoding_begin)


estado 135

   55 enum_values: IDENTIFIER '=' INTEGER_LITERAL .

    $default  reduce usando la regla 55 (enum_values)


estado 136

   56 enum_values: enum_values ',' IDENTIFIER . '=' INTEGER_LITERAL

    '='  desplazar e ir al estado 150


estado 137

   44 numeric_type: KW_NUMERIC '(' expr ',' expr ')' .

    $default  reduce usando la regla 44 (numeric_type)


estado 138

   42 numeric_type: KW_NUMERIC '(' expr ',' expr ']' .

    $default  reduce usando la regla 42 (numeric_type)


estado 139

   43 numeric_type: KW_NUMERIC '[' expr ',' expr ')' .

    $default  reduce usando la regla 43 (numeric_type)


estado 140

   41 numeric_type: KW_NUMERIC '[' expr ',' expr ']' .

    $default  reduce usando la regla 41 (numeric_type)


estado 141

   48 int_type: KW_INT '(' expr ',' expr ')' .

    $default  reduce usando la regla 48 (int_type)


estado 142

   46 int_type: KW_INT '(' expr ',' expr ']' .

    $default  reduce usando la regla 46 (int_type)


estado 143

   47 int_type: KW_INT '[' expr ',' expr ')' .

    $default  reduce usando la regla 47 (int_type)


estado 144

   45 int_type: KW_INT '[' expr ',' expr ']' .

    $default  reduce usando la regla 45 (int_type)


estado 145

   26 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list . ')' ';'
   58 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 151
    ','  desplazar e ir al estado 70


estado 146

   22 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 22 (data_element)


estado 147

   25 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 152


estado 148

   24 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER ';' .

    $default  reduce usando la regla 24 (data_element)


estado 149

   19 data_element: data_type IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 19 (data_element)


estado 150

   56 enum_values: enum_values ',' IDENTIFIER '=' . INTEGER_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 153


estado 151

   26 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' . ';'

    ';'  desplazar e ir al estado 154


estado 152

   25 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' . expr ';'

    STRING_LITERAL   desplazar e ir al estado 73
    INTEGER_LITERAL  desplazar e ir al estado 74
    FLOAT_LITERAL    desplazar e ir al estado 75

    expr  ir al estado 155


estado 153

   56 enum_values: enum_values ',' IDENTIFIER '=' INTEGER_LITERAL .

    $default  reduce usando la regla 56 (enum_values)


estado 154

   26 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' ';' .

    $default  reduce usando la regla 26 (data_element)


estado 155

   25 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 156


estado 156

   25 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 25 (data_element)
