Terminals unused in grammar

   CHAR_LITERAL


Gramática

    0 $accept: file $end

    1 file: /* vacío */
    2     | file publishable_struct
    3     | file mapping
    4     | file encoding

    5 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
    6                         | publishable_struct_begin data_type IDENTIFIER ';'
    7                         | publishable_struct_begin IDENTIFIER IDENTIFIER ';'

    8 publishable_struct: publishable_struct_begin '}' ';'

    9 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   10              | mapping_begin data_type IDENTIFIER ';'
   11              | mapping_begin IDENTIFIER IDENTIFIER ';'

   12 mapping: mapping_begin '}' ';'

   13 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   14               | encoding_begin data_element
   15               | encoding_begin data_group
   16               | encoding_begin KW_FENCE

   17 encoding: encoding_begin '}' ';'

   18 data_element: data_type IDENTIFIER ';'
   19             | data_type IDENTIFIER KW_DEFAULT '=' expr ';'
   20             | KW_EXTEND IDENTIFIER KW_TO data_type ';'
   21             | IDENTIFIER IDENTIFIER ';'
   22             | IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr ';'
   23             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER ';'
   24             | IDENTIFIER '(' arg_list ')' IDENTIFIER ';'
   25             | IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   26             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' ';'

   27 data_group_begin: IDENTIFIER '{'
   28                 | IDENTIFIER '(' arg_list ')' '{'
   29                 | data_group_begin data_element
   30                 | data_group_begin data_group

   31 data_group: data_group_begin '}'
   32           | IDENTIFIER data_element
   33           | IDENTIFIER '(' arg_list ')' data_element
   34           | IDENTIFIER data_group
   35           | IDENTIFIER '(' arg_list ')' data_group

   36 data_type: numeric_type
   37          | int_type
   38          | sequence_type
   39          | inline_enum_type
   40          | class_ref_type
   41          | bit_type
   42          | fixed_point_type

   43 numeric_type: KW_NUMERIC '[' expr ',' expr ']'
   44             | KW_NUMERIC '(' expr ',' expr ']'
   45             | KW_NUMERIC '[' expr ',' expr ')'
   46             | KW_NUMERIC '(' expr ',' expr ')'

   47 int_type: KW_INT '[' expr ',' expr ']'
   48         | KW_INT '(' expr ',' expr ']'
   49         | KW_INT '[' expr ',' expr ')'
   50         | KW_INT '(' expr ',' expr ')'

   51 fixed_point_type: KW_FIXED_POINT '(' arg_list ')'

   52 bit_type: KW_BIT '(' arg_list ')'

   53 sequence_type: KW_SEQUENCE '<' IDENTIFIER '>'

   54 class_ref_type: KW_CLASS IDENTIFIER

   55 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values '}'

   56 enum_values: IDENTIFIER '=' INTEGER_LITERAL
   57            | enum_values ',' IDENTIFIER '=' INTEGER_LITERAL

   58 arg_list: IDENTIFIER '=' expr
   59         | arg_list ',' IDENTIFIER '=' expr

   60 expr: INTEGER_LITERAL
   61     | FLOAT_LITERAL
   62     | STRING_LITERAL


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 9 13 24 25 26 28 33 35 44 46 48 50 51 52
')' (41) 9 13 24 25 26 28 33 35 45 46 49 50 51 52
',' (44) 43 44 45 46 47 48 49 50 57 59
';' (59) 6 7 8 10 11 12 17 18 19 20 21 22 23 24 25 26
'<' (60) 53
'=' (61) 19 22 25 56 57 58 59
'>' (62) 53
'[' (91) 43 45 47 49
']' (93) 43 44 47 48
'{' (123) 5 9 13 27 28 55
'}' (125) 8 12 17 31 55
error (256)
KW_PUBLISHABLE_STRUCT (258) 5 9 13
KW_ENUM (259) 55
KW_CLASS (260) 54
KW_MAPPING (261) 9
KW_ENCODING (262) 13
KW_NUMERIC (263) 43 44 45 46
KW_INT (264) 47 48 49 50
KW_SEQUENCE (265) 53
KW_FIXED_POINT (266) 51
KW_BIT (267) 52
KW_EXTEND (268) 20 23 26
KW_TO (269) 20 23 26
KW_DEFAULT (270) 19 22 25
KW_FENCE (271) 16
IDENTIFIER (272) 5 6 7 9 10 11 13 18 19 20 21 22 23 24 25 26 27 28
    32 33 34 35 53 54 55 56 57 58 59
STRING_LITERAL (273) 62
INTEGER_LITERAL (274) 56 57 60
CHAR_LITERAL (275)
FLOAT_LITERAL (276) 61


No terminales con las reglas donde aparecen

$accept (33)
    en la izquierda: 0
file (34)
    en la izquierda: 1 2 3 4, en la derecha: 0 2 3 4
publishable_struct_begin (35)
    en la izquierda: 5 6 7, en la derecha: 6 7 8
publishable_struct (36)
    en la izquierda: 8, en la derecha: 2
mapping_begin (37)
    en la izquierda: 9 10 11, en la derecha: 10 11 12
mapping (38)
    en la izquierda: 12, en la derecha: 3
encoding_begin (39)
    en la izquierda: 13 14 15 16, en la derecha: 14 15 16 17
encoding (40)
    en la izquierda: 17, en la derecha: 4
data_element (41)
    en la izquierda: 18 19 20 21 22 23 24 25 26, en la derecha: 14
    29 32 33
data_group_begin (42)
    en la izquierda: 27 28 29 30, en la derecha: 29 30 31
data_group (43)
    en la izquierda: 31 32 33 34 35, en la derecha: 15 30 34 35
data_type (44)
    en la izquierda: 36 37 38 39 40 41 42, en la derecha: 6 10 18 19
    20
numeric_type (45)
    en la izquierda: 43 44 45 46, en la derecha: 36
int_type (46)
    en la izquierda: 47 48 49 50, en la derecha: 37
fixed_point_type (47)
    en la izquierda: 51, en la derecha: 42
bit_type (48)
    en la izquierda: 52, en la derecha: 41
sequence_type (49)
    en la izquierda: 53, en la derecha: 38
class_ref_type (50)
    en la izquierda: 54, en la derecha: 40
inline_enum_type (51)
    en la izquierda: 55, en la derecha: 39
enum_values (52)
    en la izquierda: 56 57, en la derecha: 55 57
arg_list (53)
    en la izquierda: 58 59, en la derecha: 9 13 24 25 26 28 33 35 51
    52 59
expr (54)
    en la izquierda: 60 61 62, en la derecha: 19 22 25 43 44 45 46
    47 48 49 50 58 59


estado 0

    0 $accept: . file $end

    $default  reduce usando la regla 1 (file)

    file  ir al estado 1


estado 1

    0 $accept: file . $end
    2 file: file . publishable_struct
    3     | file . mapping
    4     | file . encoding

    $end                   desplazar e ir al estado 2
    KW_PUBLISHABLE_STRUCT  desplazar e ir al estado 3
    KW_MAPPING             desplazar e ir al estado 4
    KW_ENCODING            desplazar e ir al estado 5

    publishable_struct_begin  ir al estado 6
    publishable_struct        ir al estado 7
    mapping_begin             ir al estado 8
    mapping                   ir al estado 9
    encoding_begin            ir al estado 10
    encoding                  ir al estado 11


estado 2

    0 $accept: file $end .

    $default  aceptar


estado 3

    5 publishable_struct_begin: KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 12


estado 4

    9 mapping_begin: KW_MAPPING . '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    '('  desplazar e ir al estado 13


estado 5

   13 encoding_begin: KW_ENCODING . '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    '('  desplazar e ir al estado 14


estado 6

    6 publishable_struct_begin: publishable_struct_begin . data_type IDENTIFIER ';'
    7                         | publishable_struct_begin . IDENTIFIER IDENTIFIER ';'
    8 publishable_struct: publishable_struct_begin . '}' ';'

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    IDENTIFIER      desplazar e ir al estado 22
    '}'             desplazar e ir al estado 23

    data_type         ir al estado 24
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 7

    2 file: file publishable_struct .

    $default  reduce usando la regla 2 (file)


estado 8

   10 mapping_begin: mapping_begin . data_type IDENTIFIER ';'
   11              | mapping_begin . IDENTIFIER IDENTIFIER ';'
   12 mapping: mapping_begin . '}' ';'

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    IDENTIFIER      desplazar e ir al estado 32
    '}'             desplazar e ir al estado 33

    data_type         ir al estado 34
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 9

    3 file: file mapping .

    $default  reduce usando la regla 3 (file)


estado 10

   14 encoding_begin: encoding_begin . data_element
   15               | encoding_begin . data_group
   16               | encoding_begin . KW_FENCE
   17 encoding: encoding_begin . '}' ';'

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    KW_EXTEND       desplazar e ir al estado 35
    KW_FENCE        desplazar e ir al estado 36
    IDENTIFIER      desplazar e ir al estado 37
    '}'             desplazar e ir al estado 38

    data_element      ir al estado 39
    data_group_begin  ir al estado 40
    data_group        ir al estado 41
    data_type         ir al estado 42
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 11

    4 file: file encoding .

    $default  reduce usando la regla 4 (file)


estado 12

    5 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 43


estado 13

    9 mapping_begin: KW_MAPPING '(' . arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 44

    arg_list  ir al estado 45


estado 14

   13 encoding_begin: KW_ENCODING '(' . arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 44

    arg_list  ir al estado 46


estado 15

   55 inline_enum_type: KW_ENUM . IDENTIFIER '{' enum_values '}'

    IDENTIFIER  desplazar e ir al estado 47


estado 16

   54 class_ref_type: KW_CLASS . IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 48


estado 17

   43 numeric_type: KW_NUMERIC . '[' expr ',' expr ']'
   44             | KW_NUMERIC . '(' expr ',' expr ']'
   45             | KW_NUMERIC . '[' expr ',' expr ')'
   46             | KW_NUMERIC . '(' expr ',' expr ')'

    '('  desplazar e ir al estado 49
    '['  desplazar e ir al estado 50


estado 18

   47 int_type: KW_INT . '[' expr ',' expr ']'
   48         | KW_INT . '(' expr ',' expr ']'
   49         | KW_INT . '[' expr ',' expr ')'
   50         | KW_INT . '(' expr ',' expr ')'

    '('  desplazar e ir al estado 51
    '['  desplazar e ir al estado 52


estado 19

   53 sequence_type: KW_SEQUENCE . '<' IDENTIFIER '>'

    '<'  desplazar e ir al estado 53


estado 20

   51 fixed_point_type: KW_FIXED_POINT . '(' arg_list ')'

    '('  desplazar e ir al estado 54


estado 21

   52 bit_type: KW_BIT . '(' arg_list ')'

    '('  desplazar e ir al estado 55


estado 22

    7 publishable_struct_begin: publishable_struct_begin IDENTIFIER . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 56


estado 23

    8 publishable_struct: publishable_struct_begin '}' . ';'

    ';'  desplazar e ir al estado 57


estado 24

    6 publishable_struct_begin: publishable_struct_begin data_type . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 58


estado 25

   36 data_type: numeric_type .

    $default  reduce usando la regla 36 (data_type)


estado 26

   37 data_type: int_type .

    $default  reduce usando la regla 37 (data_type)


estado 27

   42 data_type: fixed_point_type .

    $default  reduce usando la regla 42 (data_type)


estado 28

   41 data_type: bit_type .

    $default  reduce usando la regla 41 (data_type)


estado 29

   38 data_type: sequence_type .

    $default  reduce usando la regla 38 (data_type)


estado 30

   40 data_type: class_ref_type .

    $default  reduce usando la regla 40 (data_type)


estado 31

   39 data_type: inline_enum_type .

    $default  reduce usando la regla 39 (data_type)


estado 32

   11 mapping_begin: mapping_begin IDENTIFIER . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 59


estado 33

   12 mapping: mapping_begin '}' . ';'

    ';'  desplazar e ir al estado 60


estado 34

   10 mapping_begin: mapping_begin data_type . IDENTIFIER ';'

    IDENTIFIER  desplazar e ir al estado 61


estado 35

   20 data_element: KW_EXTEND . IDENTIFIER KW_TO data_type ';'
   23             | KW_EXTEND . IDENTIFIER KW_TO IDENTIFIER ';'
   26             | KW_EXTEND . IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' ';'

    IDENTIFIER  desplazar e ir al estado 62


estado 36

   16 encoding_begin: encoding_begin KW_FENCE .

    $default  reduce usando la regla 16 (encoding_begin)


estado 37

   21 data_element: IDENTIFIER . IDENTIFIER ';'
   22             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   24             | IDENTIFIER . '(' arg_list ')' IDENTIFIER ';'
   25             | IDENTIFIER . '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   27 data_group_begin: IDENTIFIER . '{'
   28                 | IDENTIFIER . '(' arg_list ')' '{'
   32 data_group: IDENTIFIER . data_element
   33           | IDENTIFIER . '(' arg_list ')' data_element
   34           | IDENTIFIER . data_group
   35           | IDENTIFIER . '(' arg_list ')' data_group

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    KW_EXTEND       desplazar e ir al estado 35
    IDENTIFIER      desplazar e ir al estado 63
    '{'             desplazar e ir al estado 64
    '('             desplazar e ir al estado 65

    data_element      ir al estado 66
    data_group_begin  ir al estado 40
    data_group        ir al estado 67
    data_type         ir al estado 42
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 38

   17 encoding: encoding_begin '}' . ';'

    ';'  desplazar e ir al estado 68


estado 39

   14 encoding_begin: encoding_begin data_element .

    $default  reduce usando la regla 14 (encoding_begin)


estado 40

   29 data_group_begin: data_group_begin . data_element
   30                 | data_group_begin . data_group
   31 data_group: data_group_begin . '}'

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    KW_EXTEND       desplazar e ir al estado 35
    IDENTIFIER      desplazar e ir al estado 37
    '}'             desplazar e ir al estado 69

    data_element      ir al estado 70
    data_group_begin  ir al estado 40
    data_group        ir al estado 71
    data_type         ir al estado 42
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 41

   15 encoding_begin: encoding_begin data_group .

    $default  reduce usando la regla 15 (encoding_begin)


estado 42

   18 data_element: data_type . IDENTIFIER ';'
   19             | data_type . IDENTIFIER KW_DEFAULT '=' expr ';'

    IDENTIFIER  desplazar e ir al estado 72


estado 43

    5 publishable_struct_begin: KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 5 (publishable_struct_begin)


estado 44

   58 arg_list: IDENTIFIER . '=' expr

    '='  desplazar e ir al estado 73


estado 45

    9 mapping_begin: KW_MAPPING '(' arg_list . ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   59 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 74
    ','  desplazar e ir al estado 75


estado 46

   13 encoding_begin: KW_ENCODING '(' arg_list . ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{'
   59 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 76
    ','  desplazar e ir al estado 75


estado 47

   55 inline_enum_type: KW_ENUM IDENTIFIER . '{' enum_values '}'

    '{'  desplazar e ir al estado 77


estado 48

   54 class_ref_type: KW_CLASS IDENTIFIER .

    $default  reduce usando la regla 54 (class_ref_type)


estado 49

   44 numeric_type: KW_NUMERIC '(' . expr ',' expr ']'
   46             | KW_NUMERIC '(' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 78
    INTEGER_LITERAL  desplazar e ir al estado 79
    FLOAT_LITERAL    desplazar e ir al estado 80

    expr  ir al estado 81


estado 50

   43 numeric_type: KW_NUMERIC '[' . expr ',' expr ']'
   45             | KW_NUMERIC '[' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 78
    INTEGER_LITERAL  desplazar e ir al estado 79
    FLOAT_LITERAL    desplazar e ir al estado 80

    expr  ir al estado 82


estado 51

   48 int_type: KW_INT '(' . expr ',' expr ']'
   50         | KW_INT '(' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 78
    INTEGER_LITERAL  desplazar e ir al estado 79
    FLOAT_LITERAL    desplazar e ir al estado 80

    expr  ir al estado 83


estado 52

   47 int_type: KW_INT '[' . expr ',' expr ']'
   49         | KW_INT '[' . expr ',' expr ')'

    STRING_LITERAL   desplazar e ir al estado 78
    INTEGER_LITERAL  desplazar e ir al estado 79
    FLOAT_LITERAL    desplazar e ir al estado 80

    expr  ir al estado 84


estado 53

   53 sequence_type: KW_SEQUENCE '<' . IDENTIFIER '>'

    IDENTIFIER  desplazar e ir al estado 85


estado 54

   51 fixed_point_type: KW_FIXED_POINT '(' . arg_list ')'

    IDENTIFIER  desplazar e ir al estado 44

    arg_list  ir al estado 86


estado 55

   52 bit_type: KW_BIT '(' . arg_list ')'

    IDENTIFIER  desplazar e ir al estado 44

    arg_list  ir al estado 87


estado 56

    7 publishable_struct_begin: publishable_struct_begin IDENTIFIER IDENTIFIER . ';'

    ';'  desplazar e ir al estado 88


estado 57

    8 publishable_struct: publishable_struct_begin '}' ';' .

    $default  reduce usando la regla 8 (publishable_struct)


estado 58

    6 publishable_struct_begin: publishable_struct_begin data_type IDENTIFIER . ';'

    ';'  desplazar e ir al estado 89


estado 59

   11 mapping_begin: mapping_begin IDENTIFIER IDENTIFIER . ';'

    ';'  desplazar e ir al estado 90


estado 60

   12 mapping: mapping_begin '}' ';' .

    $default  reduce usando la regla 12 (mapping)


estado 61

   10 mapping_begin: mapping_begin data_type IDENTIFIER . ';'

    ';'  desplazar e ir al estado 91


estado 62

   20 data_element: KW_EXTEND IDENTIFIER . KW_TO data_type ';'
   23             | KW_EXTEND IDENTIFIER . KW_TO IDENTIFIER ';'
   26             | KW_EXTEND IDENTIFIER . KW_TO IDENTIFIER '(' arg_list ')' ';'

    KW_TO  desplazar e ir al estado 92


estado 63

   21 data_element: IDENTIFIER . IDENTIFIER ';'
   21             | IDENTIFIER IDENTIFIER . ';'
   22             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   22             | IDENTIFIER IDENTIFIER . KW_DEFAULT '=' expr ';'
   24             | IDENTIFIER . '(' arg_list ')' IDENTIFIER ';'
   25             | IDENTIFIER . '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   27 data_group_begin: IDENTIFIER . '{'
   28                 | IDENTIFIER . '(' arg_list ')' '{'
   32 data_group: IDENTIFIER . data_element
   33           | IDENTIFIER . '(' arg_list ')' data_element
   34           | IDENTIFIER . data_group
   35           | IDENTIFIER . '(' arg_list ')' data_group

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    KW_EXTEND       desplazar e ir al estado 35
    KW_DEFAULT      desplazar e ir al estado 93
    IDENTIFIER      desplazar e ir al estado 63
    '{'             desplazar e ir al estado 64
    ';'             desplazar e ir al estado 94
    '('             desplazar e ir al estado 65

    data_element      ir al estado 66
    data_group_begin  ir al estado 40
    data_group        ir al estado 67
    data_type         ir al estado 42
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 64

   27 data_group_begin: IDENTIFIER '{' .

    $default  reduce usando la regla 27 (data_group_begin)


estado 65

   24 data_element: IDENTIFIER '(' . arg_list ')' IDENTIFIER ';'
   25             | IDENTIFIER '(' . arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   28 data_group_begin: IDENTIFIER '(' . arg_list ')' '{'
   33 data_group: IDENTIFIER '(' . arg_list ')' data_element
   35           | IDENTIFIER '(' . arg_list ')' data_group

    IDENTIFIER  desplazar e ir al estado 44

    arg_list  ir al estado 95


estado 66

   32 data_group: IDENTIFIER data_element .

    $default  reduce usando la regla 32 (data_group)


estado 67

   34 data_group: IDENTIFIER data_group .

    $default  reduce usando la regla 34 (data_group)


estado 68

   17 encoding: encoding_begin '}' ';' .

    $default  reduce usando la regla 17 (encoding)


estado 69

   31 data_group: data_group_begin '}' .

    $default  reduce usando la regla 31 (data_group)


estado 70

   29 data_group_begin: data_group_begin data_element .

    $default  reduce usando la regla 29 (data_group_begin)


estado 71

   30 data_group_begin: data_group_begin data_group .

    $default  reduce usando la regla 30 (data_group_begin)


estado 72

   18 data_element: data_type IDENTIFIER . ';'
   19             | data_type IDENTIFIER . KW_DEFAULT '=' expr ';'

    KW_DEFAULT  desplazar e ir al estado 96
    ';'         desplazar e ir al estado 97


estado 73

   58 arg_list: IDENTIFIER '=' . expr

    STRING_LITERAL   desplazar e ir al estado 78
    INTEGER_LITERAL  desplazar e ir al estado 79
    FLOAT_LITERAL    desplazar e ir al estado 80

    expr  ir al estado 98


estado 74

    9 mapping_begin: KW_MAPPING '(' arg_list ')' . KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    KW_PUBLISHABLE_STRUCT  desplazar e ir al estado 99


estado 75

   59 arg_list: arg_list ',' . IDENTIFIER '=' expr

    IDENTIFIER  desplazar e ir al estado 100


estado 76

   13 encoding_begin: KW_ENCODING '(' arg_list ')' . KW_PUBLISHABLE_STRUCT IDENTIFIER '{'

    KW_PUBLISHABLE_STRUCT  desplazar e ir al estado 101


estado 77

   55 inline_enum_type: KW_ENUM IDENTIFIER '{' . enum_values '}'

    IDENTIFIER  desplazar e ir al estado 102

    enum_values  ir al estado 103


estado 78

   62 expr: STRING_LITERAL .

    $default  reduce usando la regla 62 (expr)


estado 79

   60 expr: INTEGER_LITERAL .

    $default  reduce usando la regla 60 (expr)


estado 80

   61 expr: FLOAT_LITERAL .

    $default  reduce usando la regla 61 (expr)


estado 81

   44 numeric_type: KW_NUMERIC '(' expr . ',' expr ']'
   46             | KW_NUMERIC '(' expr . ',' expr ')'

    ','  desplazar e ir al estado 104


estado 82

   43 numeric_type: KW_NUMERIC '[' expr . ',' expr ']'
   45             | KW_NUMERIC '[' expr . ',' expr ')'

    ','  desplazar e ir al estado 105


estado 83

   48 int_type: KW_INT '(' expr . ',' expr ']'
   50         | KW_INT '(' expr . ',' expr ')'

    ','  desplazar e ir al estado 106


estado 84

   47 int_type: KW_INT '[' expr . ',' expr ']'
   49         | KW_INT '[' expr . ',' expr ')'

    ','  desplazar e ir al estado 107


estado 85

   53 sequence_type: KW_SEQUENCE '<' IDENTIFIER . '>'

    '>'  desplazar e ir al estado 108


estado 86

   51 fixed_point_type: KW_FIXED_POINT '(' arg_list . ')'
   59 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 109
    ','  desplazar e ir al estado 75


estado 87

   52 bit_type: KW_BIT '(' arg_list . ')'
   59 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 110
    ','  desplazar e ir al estado 75


estado 88

    7 publishable_struct_begin: publishable_struct_begin IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 7 (publishable_struct_begin)


estado 89

    6 publishable_struct_begin: publishable_struct_begin data_type IDENTIFIER ';' .

    $default  reduce usando la regla 6 (publishable_struct_begin)


estado 90

   11 mapping_begin: mapping_begin IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 11 (mapping_begin)


estado 91

   10 mapping_begin: mapping_begin data_type IDENTIFIER ';' .

    $default  reduce usando la regla 10 (mapping_begin)


estado 92

   20 data_element: KW_EXTEND IDENTIFIER KW_TO . data_type ';'
   23             | KW_EXTEND IDENTIFIER KW_TO . IDENTIFIER ';'
   26             | KW_EXTEND IDENTIFIER KW_TO . IDENTIFIER '(' arg_list ')' ';'

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    IDENTIFIER      desplazar e ir al estado 111

    data_type         ir al estado 112
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 93

   22 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 113


estado 94

   21 data_element: IDENTIFIER IDENTIFIER ';' .

    $default  reduce usando la regla 21 (data_element)


estado 95

   24 data_element: IDENTIFIER '(' arg_list . ')' IDENTIFIER ';'
   25             | IDENTIFIER '(' arg_list . ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   28 data_group_begin: IDENTIFIER '(' arg_list . ')' '{'
   33 data_group: IDENTIFIER '(' arg_list . ')' data_element
   35           | IDENTIFIER '(' arg_list . ')' data_group
   59 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 114
    ','  desplazar e ir al estado 75


estado 96

   19 data_element: data_type IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 115


estado 97

   18 data_element: data_type IDENTIFIER ';' .

    $default  reduce usando la regla 18 (data_element)


estado 98

   58 arg_list: IDENTIFIER '=' expr .

    $default  reduce usando la regla 58 (arg_list)


estado 99

    9 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 116


estado 100

   59 arg_list: arg_list ',' IDENTIFIER . '=' expr

    '='  desplazar e ir al estado 117


estado 101

   13 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT . IDENTIFIER '{'

    IDENTIFIER  desplazar e ir al estado 118


estado 102

   56 enum_values: IDENTIFIER . '=' INTEGER_LITERAL

    '='  desplazar e ir al estado 119


estado 103

   55 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values . '}'
   57 enum_values: enum_values . ',' IDENTIFIER '=' INTEGER_LITERAL

    '}'  desplazar e ir al estado 120
    ','  desplazar e ir al estado 121


estado 104

   44 numeric_type: KW_NUMERIC '(' expr ',' . expr ']'
   46             | KW_NUMERIC '(' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 78
    INTEGER_LITERAL  desplazar e ir al estado 79
    FLOAT_LITERAL    desplazar e ir al estado 80

    expr  ir al estado 122


estado 105

   43 numeric_type: KW_NUMERIC '[' expr ',' . expr ']'
   45             | KW_NUMERIC '[' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 78
    INTEGER_LITERAL  desplazar e ir al estado 79
    FLOAT_LITERAL    desplazar e ir al estado 80

    expr  ir al estado 123


estado 106

   48 int_type: KW_INT '(' expr ',' . expr ']'
   50         | KW_INT '(' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 78
    INTEGER_LITERAL  desplazar e ir al estado 79
    FLOAT_LITERAL    desplazar e ir al estado 80

    expr  ir al estado 124


estado 107

   47 int_type: KW_INT '[' expr ',' . expr ']'
   49         | KW_INT '[' expr ',' . expr ')'

    STRING_LITERAL   desplazar e ir al estado 78
    INTEGER_LITERAL  desplazar e ir al estado 79
    FLOAT_LITERAL    desplazar e ir al estado 80

    expr  ir al estado 125


estado 108

   53 sequence_type: KW_SEQUENCE '<' IDENTIFIER '>' .

    $default  reduce usando la regla 53 (sequence_type)


estado 109

   51 fixed_point_type: KW_FIXED_POINT '(' arg_list ')' .

    $default  reduce usando la regla 51 (fixed_point_type)


estado 110

   52 bit_type: KW_BIT '(' arg_list ')' .

    $default  reduce usando la regla 52 (bit_type)


estado 111

   23 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER . ';'
   26             | KW_EXTEND IDENTIFIER KW_TO IDENTIFIER . '(' arg_list ')' ';'

    ';'  desplazar e ir al estado 126
    '('  desplazar e ir al estado 127


estado 112

   20 data_element: KW_EXTEND IDENTIFIER KW_TO data_type . ';'

    ';'  desplazar e ir al estado 128


estado 113

   22 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' . expr ';'

    STRING_LITERAL   desplazar e ir al estado 78
    INTEGER_LITERAL  desplazar e ir al estado 79
    FLOAT_LITERAL    desplazar e ir al estado 80

    expr  ir al estado 129


estado 114

   24 data_element: IDENTIFIER '(' arg_list ')' . IDENTIFIER ';'
   25             | IDENTIFIER '(' arg_list ')' . IDENTIFIER KW_DEFAULT '=' expr ';'
   28 data_group_begin: IDENTIFIER '(' arg_list ')' . '{'
   33 data_group: IDENTIFIER '(' arg_list ')' . data_element
   35           | IDENTIFIER '(' arg_list ')' . data_group

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    KW_EXTEND       desplazar e ir al estado 35
    IDENTIFIER      desplazar e ir al estado 130
    '{'             desplazar e ir al estado 131

    data_element      ir al estado 132
    data_group_begin  ir al estado 40
    data_group        ir al estado 133
    data_type         ir al estado 42
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 115

   19 data_element: data_type IDENTIFIER KW_DEFAULT '=' . expr ';'

    STRING_LITERAL   desplazar e ir al estado 78
    INTEGER_LITERAL  desplazar e ir al estado 79
    FLOAT_LITERAL    desplazar e ir al estado 80

    expr  ir al estado 134


estado 116

    9 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 135


estado 117

   59 arg_list: arg_list ',' IDENTIFIER '=' . expr

    STRING_LITERAL   desplazar e ir al estado 78
    INTEGER_LITERAL  desplazar e ir al estado 79
    FLOAT_LITERAL    desplazar e ir al estado 80

    expr  ir al estado 136


estado 118

   13 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER . '{'

    '{'  desplazar e ir al estado 137


estado 119

   56 enum_values: IDENTIFIER '=' . INTEGER_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 138


estado 120

   55 inline_enum_type: KW_ENUM IDENTIFIER '{' enum_values '}' .

    $default  reduce usando la regla 55 (inline_enum_type)


estado 121

   57 enum_values: enum_values ',' . IDENTIFIER '=' INTEGER_LITERAL

    IDENTIFIER  desplazar e ir al estado 139


estado 122

   44 numeric_type: KW_NUMERIC '(' expr ',' expr . ']'
   46             | KW_NUMERIC '(' expr ',' expr . ')'

    ')'  desplazar e ir al estado 140
    ']'  desplazar e ir al estado 141


estado 123

   43 numeric_type: KW_NUMERIC '[' expr ',' expr . ']'
   45             | KW_NUMERIC '[' expr ',' expr . ')'

    ')'  desplazar e ir al estado 142
    ']'  desplazar e ir al estado 143


estado 124

   48 int_type: KW_INT '(' expr ',' expr . ']'
   50         | KW_INT '(' expr ',' expr . ')'

    ')'  desplazar e ir al estado 144
    ']'  desplazar e ir al estado 145


estado 125

   47 int_type: KW_INT '[' expr ',' expr . ']'
   49         | KW_INT '[' expr ',' expr . ')'

    ')'  desplazar e ir al estado 146
    ']'  desplazar e ir al estado 147


estado 126

   23 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER ';' .

    $default  reduce usando la regla 23 (data_element)


estado 127

   26 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' . arg_list ')' ';'

    IDENTIFIER  desplazar e ir al estado 44

    arg_list  ir al estado 148


estado 128

   20 data_element: KW_EXTEND IDENTIFIER KW_TO data_type ';' .

    $default  reduce usando la regla 20 (data_element)


estado 129

   22 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 149


estado 130

   21 data_element: IDENTIFIER . IDENTIFIER ';'
   22             | IDENTIFIER . IDENTIFIER KW_DEFAULT '=' expr ';'
   24             | IDENTIFIER . '(' arg_list ')' IDENTIFIER ';'
   24             | IDENTIFIER '(' arg_list ')' IDENTIFIER . ';'
   25             | IDENTIFIER . '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';'
   25             | IDENTIFIER '(' arg_list ')' IDENTIFIER . KW_DEFAULT '=' expr ';'
   27 data_group_begin: IDENTIFIER . '{'
   28                 | IDENTIFIER . '(' arg_list ')' '{'
   32 data_group: IDENTIFIER . data_element
   33           | IDENTIFIER . '(' arg_list ')' data_element
   34           | IDENTIFIER . data_group
   35           | IDENTIFIER . '(' arg_list ')' data_group

    KW_ENUM         desplazar e ir al estado 15
    KW_CLASS        desplazar e ir al estado 16
    KW_NUMERIC      desplazar e ir al estado 17
    KW_INT          desplazar e ir al estado 18
    KW_SEQUENCE     desplazar e ir al estado 19
    KW_FIXED_POINT  desplazar e ir al estado 20
    KW_BIT          desplazar e ir al estado 21
    KW_EXTEND       desplazar e ir al estado 35
    KW_DEFAULT      desplazar e ir al estado 150
    IDENTIFIER      desplazar e ir al estado 63
    '{'             desplazar e ir al estado 64
    ';'             desplazar e ir al estado 151
    '('             desplazar e ir al estado 65

    data_element      ir al estado 66
    data_group_begin  ir al estado 40
    data_group        ir al estado 67
    data_type         ir al estado 42
    numeric_type      ir al estado 25
    int_type          ir al estado 26
    fixed_point_type  ir al estado 27
    bit_type          ir al estado 28
    sequence_type     ir al estado 29
    class_ref_type    ir al estado 30
    inline_enum_type  ir al estado 31


estado 131

   28 data_group_begin: IDENTIFIER '(' arg_list ')' '{' .

    $default  reduce usando la regla 28 (data_group_begin)


estado 132

   33 data_group: IDENTIFIER '(' arg_list ')' data_element .

    $default  reduce usando la regla 33 (data_group)


estado 133

   35 data_group: IDENTIFIER '(' arg_list ')' data_group .

    $default  reduce usando la regla 35 (data_group)


estado 134

   19 data_element: data_type IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 152


estado 135

    9 mapping_begin: KW_MAPPING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 9 (mapping_begin)


estado 136

   59 arg_list: arg_list ',' IDENTIFIER '=' expr .

    $default  reduce usando la regla 59 (arg_list)


estado 137

   13 encoding_begin: KW_ENCODING '(' arg_list ')' KW_PUBLISHABLE_STRUCT IDENTIFIER '{' .

    $default  reduce usando la regla 13 (encoding_begin)


estado 138

   56 enum_values: IDENTIFIER '=' INTEGER_LITERAL .

    $default  reduce usando la regla 56 (enum_values)


estado 139

   57 enum_values: enum_values ',' IDENTIFIER . '=' INTEGER_LITERAL

    '='  desplazar e ir al estado 153


estado 140

   46 numeric_type: KW_NUMERIC '(' expr ',' expr ')' .

    $default  reduce usando la regla 46 (numeric_type)


estado 141

   44 numeric_type: KW_NUMERIC '(' expr ',' expr ']' .

    $default  reduce usando la regla 44 (numeric_type)


estado 142

   45 numeric_type: KW_NUMERIC '[' expr ',' expr ')' .

    $default  reduce usando la regla 45 (numeric_type)


estado 143

   43 numeric_type: KW_NUMERIC '[' expr ',' expr ']' .

    $default  reduce usando la regla 43 (numeric_type)


estado 144

   50 int_type: KW_INT '(' expr ',' expr ')' .

    $default  reduce usando la regla 50 (int_type)


estado 145

   48 int_type: KW_INT '(' expr ',' expr ']' .

    $default  reduce usando la regla 48 (int_type)


estado 146

   49 int_type: KW_INT '[' expr ',' expr ')' .

    $default  reduce usando la regla 49 (int_type)


estado 147

   47 int_type: KW_INT '[' expr ',' expr ']' .

    $default  reduce usando la regla 47 (int_type)


estado 148

   26 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list . ')' ';'
   59 arg_list: arg_list . ',' IDENTIFIER '=' expr

    ')'  desplazar e ir al estado 154
    ','  desplazar e ir al estado 75


estado 149

   22 data_element: IDENTIFIER IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 22 (data_element)


estado 150

   25 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT . '=' expr ';'

    '='  desplazar e ir al estado 155


estado 151

   24 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER ';' .

    $default  reduce usando la regla 24 (data_element)


estado 152

   19 data_element: data_type IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 19 (data_element)


estado 153

   57 enum_values: enum_values ',' IDENTIFIER '=' . INTEGER_LITERAL

    INTEGER_LITERAL  desplazar e ir al estado 156


estado 154

   26 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' . ';'

    ';'  desplazar e ir al estado 157


estado 155

   25 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' . expr ';'

    STRING_LITERAL   desplazar e ir al estado 78
    INTEGER_LITERAL  desplazar e ir al estado 79
    FLOAT_LITERAL    desplazar e ir al estado 80

    expr  ir al estado 158


estado 156

   57 enum_values: enum_values ',' IDENTIFIER '=' INTEGER_LITERAL .

    $default  reduce usando la regla 57 (enum_values)


estado 157

   26 data_element: KW_EXTEND IDENTIFIER KW_TO IDENTIFIER '(' arg_list ')' ';' .

    $default  reduce usando la regla 26 (data_element)


estado 158

   25 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr . ';'

    ';'  desplazar e ir al estado 159


estado 159

   25 data_element: IDENTIFIER '(' arg_list ')' IDENTIFIER KW_DEFAULT '=' expr ';' .

    $default  reduce usando la regla 25 (data_element)
