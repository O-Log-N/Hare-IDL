From c8aea4ba116bfa22a5b127e914d9dfc78e0f2715 Mon Sep 17 00:00:00 2001
From: mb <mb@o-log-n.com>
Date: Tue, 5 Apr 2016 17:39:39 -0300
Subject: [PATCH] Added basic HareIDL attribute support.

---
 include/clang/Basic/Attr.td     | 14 ++++++++++++++
 include/clang/Basic/AttrDocs.td | 32 ++++++++++++++++++++++++++++++++
 lib/Sema/SemaDeclAttr.cpp       |  6 ++++++
 3 files changed, 52 insertions(+)

diff --git a/include/clang/Basic/Attr.td b/include/clang/Basic/Attr.td
index d5ba722..34d2405 100644
--- a/include/clang/Basic/Attr.td
+++ b/include/clang/Basic/Attr.td
@@ -2170,3 +2170,17 @@ def InternalLinkage : InheritableAttr {
   let Subjects = SubjectList<[Var, Function, CXXRecord]>;
   let Documentation = [InternalLinkageDocs];
 }
+
+def HareMapping : InheritableAttr {
+  let Spellings = [CXX11<"hare","mapping">];
+  let Args = [StringArgument<"PublishableStruct", 1>];
+  let Subjects = SubjectList<[CXXRecord]>;
+  let Documentation = [HareMappingDocs];
+}
+
+def HareEncodeAs : InheritableAttr {
+  let Spellings = [CXX11<"hare","encode_as">];
+  let Args = [StringArgument<"Encoding">];
+//  let Subjects = SubjectList<[Field]>;
+  let Documentation = [HareEncodeAsDocs];
+}
diff --git a/include/clang/Basic/AttrDocs.td b/include/clang/Basic/AttrDocs.td
index 2567d55..8bb5bab 100644
--- a/include/clang/Basic/AttrDocs.td
+++ b/include/clang/Basic/AttrDocs.td
@@ -1859,3 +1859,35 @@ Marking virtual functions as ``disable_tail_calls`` is legal.
 
   }];
 }
+
+def DocCatHare : DocumentationCategory<"Hare-IDL"> {
+  let Content = [{
+Additional attributes used to modify the encoding when used by Hare-IDL tool.
+  }];
+}
+
+def HareMappingDocs : Documentation {
+  let Category = DocCatHare;
+  let Content = [{
+A class or struct declared as with ``[[hare::mapping]]`` shall be involved in Hare-IDL interaction.
+The optional string argument can reference a PUBLISHABLE_STRUCT with different class name.
+.. code-block:: c++
+
+  class [[hare::mapping]] MyClass {
+  };
+
+  class [[hare::mapping("MyPublishableStruct")]] MyClass {
+  };
+
+  }];
+}
+
+def HareEncodeAsDocs : Documentation {
+  let Category = DocCatHare;
+  let Content = [{
+The ``[[hare::encode_as()]]`` attribute allow to pass an string with encoding specific information to Hare-IDL tool.
+.. code-block:: c++
+
+  [[hare::encode_as("DELTA VLQ")]] double value;
+  }];
+}
diff --git a/lib/Sema/SemaDeclAttr.cpp b/lib/Sema/SemaDeclAttr.cpp
index f94c822..2bff0c5 100644
--- a/lib/Sema/SemaDeclAttr.cpp
+++ b/lib/Sema/SemaDeclAttr.cpp
@@ -5466,6 +5466,12 @@ static void ProcessDeclAttribute(Sema &S, Scope *scope, Decl *D,
   case AttributeList::AT_TypeTagForDatatype:
     handleTypeTagForDatatypeAttr(S, D, Attr);
     break;
+  case AttributeList::AT_HareMapping:
+    handleAttrWithMessage<HareMappingAttr>(S, D, Attr);
+    break;
+  case AttributeList::AT_HareEncodeAs:
+    handleAttrWithMessage<HareEncodeAsAttr>(S, D, Attr);
+    break;
   }
 }
 
-- 
2.6.4.windows.1

