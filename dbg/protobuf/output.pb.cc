// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: output.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "output.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* Limit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Limit_reflection_ = NULL;
const ::google::protobuf::Descriptor* Location_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Location_reflection_ = NULL;
const ::google::protobuf::Descriptor* CharacterRange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CharacterRange_reflection_ = NULL;
const ::google::protobuf::Descriptor* CharacterSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CharacterSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* Variant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Variant_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataType_reflection_ = NULL;
const ::google::protobuf::Descriptor* EncodingSpecifics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EncodingSpecifics_reflection_ = NULL;
const ::google::protobuf::Descriptor* EncodedOrMember_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EncodedOrMember_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataMember_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataMember_reflection_ = NULL;
const ::google::protobuf::Descriptor* EncodedMembers_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EncodedMembers_reflection_ = NULL;
const ::google::protobuf::Descriptor* Structure_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Structure_reflection_ = NULL;
const ::google::protobuf::Descriptor* Typedef_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Typedef_reflection_ = NULL;
const ::google::protobuf::Descriptor* Root_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Root_reflection_ = NULL;
const ::google::protobuf::Descriptor* __unique_ptr_DataType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  __unique_ptr_DataType_reflection_ = NULL;
const ::google::protobuf::Descriptor* __unique_ptr_EncodedOrMember_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  __unique_ptr_EncodedOrMember_reflection_ = NULL;
const ::google::protobuf::Descriptor* __unique_ptr_Structure_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  __unique_ptr_Structure_reflection_ = NULL;
const ::google::protobuf::Descriptor* map_string_Variant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  map_string_Variant_reflection_ = NULL;
const ::google::protobuf::Descriptor* map_string_uint32_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  map_string_uint32_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_output_2eproto() {
  protobuf_AddDesc_output_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "output.proto");
  GOOGLE_CHECK(file != NULL);
  Limit_descriptor_ = file->message_type(0);
  static const int Limit_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Limit, inclusive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Limit, value_),
  };
  Limit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Limit_descriptor_,
      Limit::default_instance_,
      Limit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Limit, _has_bits_[0]),
      -1,
      -1,
      sizeof(Limit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Limit, _internal_metadata_),
      -1);
  Location_descriptor_ = file->message_type(1);
  static const int Location_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, file_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, line_number_),
  };
  Location_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Location_descriptor_,
      Location::default_instance_,
      Location_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, _has_bits_[0]),
      -1,
      -1,
      sizeof(Location),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, _internal_metadata_),
      -1);
  CharacterRange_descriptor_ = file->message_type(2);
  static const int CharacterRange_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterRange, from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterRange, to_),
  };
  CharacterRange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CharacterRange_descriptor_,
      CharacterRange::default_instance_,
      CharacterRange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterRange, _has_bits_[0]),
      -1,
      -1,
      sizeof(CharacterRange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterRange, _internal_metadata_),
      -1);
  CharacterSet_descriptor_ = file->message_type(3);
  static const int CharacterSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterSet, ranges_),
  };
  CharacterSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CharacterSet_descriptor_,
      CharacterSet::default_instance_,
      CharacterSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterSet, _has_bits_[0]),
      -1,
      -1,
      sizeof(CharacterSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharacterSet, _internal_metadata_),
      -1);
  Variant_descriptor_ = file->message_type(4);
  static const int Variant_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variant, kind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variant, number_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variant, string_value_),
  };
  Variant_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Variant_descriptor_,
      Variant::default_instance_,
      Variant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variant, _has_bits_[0]),
      -1,
      -1,
      sizeof(Variant),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variant, _internal_metadata_),
      -1);
  DataType_descriptor_ = file->message_type(5);
  static const int DataType_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, kind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, mapping_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, encoding_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, key_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, param_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, low_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, high_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, fixed_precision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, floating_significand_bits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, floating_exponent_bits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, character_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, string_min_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, string_max_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, encoding_attrs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, mapping_attrs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, enum_values_),
  };
  DataType_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DataType_descriptor_,
      DataType::default_instance_,
      DataType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, _has_bits_[0]),
      -1,
      -1,
      sizeof(DataType),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataType, _internal_metadata_),
      -1);
  EncodingSpecifics_descriptor_ = file->message_type(6);
  static const int EncodingSpecifics_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncodingSpecifics, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncodingSpecifics, attrs_),
  };
  EncodingSpecifics_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EncodingSpecifics_descriptor_,
      EncodingSpecifics::default_instance_,
      EncodingSpecifics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncodingSpecifics, _has_bits_[0]),
      -1,
      -1,
      sizeof(EncodingSpecifics),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncodingSpecifics, _internal_metadata_),
      -1);
  EncodedOrMember_descriptor_ = file->message_type(7);
  static const int EncodedOrMember_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncodedOrMember, location_),
  };
  EncodedOrMember_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EncodedOrMember_descriptor_,
      EncodedOrMember::default_instance_,
      EncodedOrMember_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncodedOrMember, _has_bits_[0]),
      -1,
      -1,
      sizeof(EncodedOrMember),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncodedOrMember, _internal_metadata_),
      -1);
  DataMember_descriptor_ = file->message_type(8);
  static const int DataMember_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMember, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMember, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMember, extend_to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMember, default_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMember, when_discriminant_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMember, __parent_),
  };
  DataMember_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DataMember_descriptor_,
      DataMember::default_instance_,
      DataMember_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMember, _has_bits_[0]),
      -1,
      -1,
      sizeof(DataMember),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMember, _internal_metadata_),
      -1);
  EncodedMembers_descriptor_ = file->message_type(9);
  static const int EncodedMembers_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncodedMembers, encoding_specifics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncodedMembers, members_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncodedMembers, __parent_),
  };
  EncodedMembers_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EncodedMembers_descriptor_,
      EncodedMembers::default_instance_,
      EncodedMembers_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncodedMembers, _has_bits_[0]),
      -1,
      -1,
      sizeof(EncodedMembers),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncodedMembers, _internal_metadata_),
      -1);
  Structure_descriptor_ = file->message_type(10);
  static const int Structure_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Structure, decl_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Structure, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Structure, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Structure, discriminant_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Structure, inherited_from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Structure, __parent_),
  };
  Structure_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Structure_descriptor_,
      Structure::default_instance_,
      Structure_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Structure, _has_bits_[0]),
      -1,
      -1,
      sizeof(Structure),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Structure, _internal_metadata_),
      -1);
  Typedef_descriptor_ = file->message_type(11);
  static const int Typedef_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Typedef, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Typedef, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Typedef, name_),
  };
  Typedef_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Typedef_descriptor_,
      Typedef::default_instance_,
      Typedef_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Typedef, _has_bits_[0]),
      -1,
      -1,
      sizeof(Typedef),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Typedef, _internal_metadata_),
      -1);
  Root_descriptor_ = file->message_type(12);
  static const int Root_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, typedefs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, structures_),
  };
  Root_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Root_descriptor_,
      Root::default_instance_,
      Root_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, _has_bits_[0]),
      -1,
      -1,
      sizeof(Root),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, _internal_metadata_),
      -1);
  __unique_ptr_DataType_descriptor_ = file->message_type(13);
  static const int __unique_ptr_DataType_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(__unique_ptr_DataType, du_data_type_),
  };
  __unique_ptr_DataType_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      __unique_ptr_DataType_descriptor_,
      __unique_ptr_DataType::default_instance_,
      __unique_ptr_DataType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(__unique_ptr_DataType, _has_bits_[0]),
      -1,
      -1,
      sizeof(__unique_ptr_DataType),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(__unique_ptr_DataType, _internal_metadata_),
      -1);
  __unique_ptr_EncodedOrMember_descriptor_ = file->message_type(14);
  static const int __unique_ptr_EncodedOrMember_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(__unique_ptr_EncodedOrMember, du_data_member_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(__unique_ptr_EncodedOrMember, du_encoded_members_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(__unique_ptr_EncodedOrMember, du_encoded_or_member_),
  };
  __unique_ptr_EncodedOrMember_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      __unique_ptr_EncodedOrMember_descriptor_,
      __unique_ptr_EncodedOrMember::default_instance_,
      __unique_ptr_EncodedOrMember_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(__unique_ptr_EncodedOrMember, _has_bits_[0]),
      -1,
      -1,
      sizeof(__unique_ptr_EncodedOrMember),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(__unique_ptr_EncodedOrMember, _internal_metadata_),
      -1);
  __unique_ptr_Structure_descriptor_ = file->message_type(15);
  static const int __unique_ptr_Structure_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(__unique_ptr_Structure, du_structure_),
  };
  __unique_ptr_Structure_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      __unique_ptr_Structure_descriptor_,
      __unique_ptr_Structure::default_instance_,
      __unique_ptr_Structure_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(__unique_ptr_Structure, _has_bits_[0]),
      -1,
      -1,
      sizeof(__unique_ptr_Structure),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(__unique_ptr_Structure, _internal_metadata_),
      -1);
  map_string_Variant_descriptor_ = file->message_type(16);
  static const int map_string_Variant_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(map_string_Variant, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(map_string_Variant, value_),
  };
  map_string_Variant_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      map_string_Variant_descriptor_,
      map_string_Variant::default_instance_,
      map_string_Variant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(map_string_Variant, _has_bits_[0]),
      -1,
      -1,
      sizeof(map_string_Variant),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(map_string_Variant, _internal_metadata_),
      -1);
  map_string_uint32_descriptor_ = file->message_type(17);
  static const int map_string_uint32_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(map_string_uint32, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(map_string_uint32, value_),
  };
  map_string_uint32_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      map_string_uint32_descriptor_,
      map_string_uint32::default_instance_,
      map_string_uint32_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(map_string_uint32, _has_bits_[0]),
      -1,
      -1,
      sizeof(map_string_uint32),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(map_string_uint32, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_output_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Limit_descriptor_, &Limit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Location_descriptor_, &Location::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CharacterRange_descriptor_, &CharacterRange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CharacterSet_descriptor_, &CharacterSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Variant_descriptor_, &Variant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DataType_descriptor_, &DataType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EncodingSpecifics_descriptor_, &EncodingSpecifics::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EncodedOrMember_descriptor_, &EncodedOrMember::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DataMember_descriptor_, &DataMember::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EncodedMembers_descriptor_, &EncodedMembers::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Structure_descriptor_, &Structure::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Typedef_descriptor_, &Typedef::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Root_descriptor_, &Root::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      __unique_ptr_DataType_descriptor_, &__unique_ptr_DataType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      __unique_ptr_EncodedOrMember_descriptor_, &__unique_ptr_EncodedOrMember::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      __unique_ptr_Structure_descriptor_, &__unique_ptr_Structure::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      map_string_Variant_descriptor_, &map_string_Variant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      map_string_uint32_descriptor_, &map_string_uint32::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_output_2eproto() {
  delete Limit::default_instance_;
  delete Limit_reflection_;
  delete Location::default_instance_;
  delete Location_reflection_;
  delete CharacterRange::default_instance_;
  delete CharacterRange_reflection_;
  delete CharacterSet::default_instance_;
  delete CharacterSet_reflection_;
  delete Variant::default_instance_;
  delete Variant_reflection_;
  delete DataType::default_instance_;
  delete DataType_reflection_;
  delete EncodingSpecifics::default_instance_;
  delete EncodingSpecifics_reflection_;
  delete EncodedOrMember::default_instance_;
  delete EncodedOrMember_reflection_;
  delete DataMember::default_instance_;
  delete DataMember_reflection_;
  delete EncodedMembers::default_instance_;
  delete EncodedMembers_reflection_;
  delete Structure::default_instance_;
  delete Structure_reflection_;
  delete Typedef::default_instance_;
  delete Typedef_reflection_;
  delete Root::default_instance_;
  delete Root_reflection_;
  delete __unique_ptr_DataType::default_instance_;
  delete __unique_ptr_DataType_reflection_;
  delete __unique_ptr_EncodedOrMember::default_instance_;
  delete __unique_ptr_EncodedOrMember_reflection_;
  delete __unique_ptr_Structure::default_instance_;
  delete __unique_ptr_Structure_reflection_;
  delete map_string_Variant::default_instance_;
  delete map_string_Variant_reflection_;
  delete map_string_uint32::default_instance_;
  delete map_string_uint32_reflection_;
}

void protobuf_AddDesc_output_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014output.proto\022\002pb\")\n\005Limit\022\021\n\tinclusive"
    "\030\001 \001(\010\022\r\n\005value\030\002 \001(\001\"2\n\010Location\022\021\n\tfil"
    "e_name\030\001 \001(\t\022\023\n\013line_number\030\002 \001(\021\"*\n\016Cha"
    "racterRange\022\014\n\004from\030\001 \001(\r\022\n\n\002to\030\002 \001(\r\"2\n"
    "\014CharacterSet\022\"\n\006ranges\030\001 \003(\0132\022.pb.Chara"
    "cterRange\"C\n\007Variant\022\014\n\004kind\030\001 \001(\r\022\024\n\014nu"
    "mber_value\030\002 \001(\001\022\024\n\014string_value\030\003 \001(\t\"\256"
    "\004\n\010DataType\022\014\n\004kind\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022"
    "\024\n\014mapping_name\030\003 \001(\t\022\025\n\rencoding_name\030\004"
    " \001(\t\022+\n\010key_type\030\005 \001(\0132\031.pb.__unique_ptr"
    "_DataType\022-\n\nparam_type\030\006 \001(\0132\031.pb.__uni"
    "que_ptr_DataType\022\034\n\tlow_limit\030\007 \001(\0132\t.pb"
    ".Limit\022\035\n\nhigh_limit\030\010 \001(\0132\t.pb.Limit\022\027\n"
    "\017fixed_precision\030\t \001(\001\022!\n\031floating_signi"
    "ficand_bits\030\n \001(\r\022\036\n\026floating_exponent_b"
    "its\030\013 \001(\r\022\'\n\rcharacter_set\030\014 \001(\0132\020.pb.Ch"
    "aracterSet\022\027\n\017string_min_size\030\r \001(\r\022\027\n\017s"
    "tring_max_size\030\016 \001(\r\022.\n\016encoding_attrs\030\017"
    " \003(\0132\026.pb.map_string_Variant\022-\n\rmapping_"
    "attrs\030\020 \003(\0132\026.pb.map_string_Variant\022*\n\013e"
    "num_values\030\021 \003(\0132\025.pb.map_string_uint32\""
    "H\n\021EncodingSpecifics\022\014\n\004name\030\001 \001(\t\022%\n\005at"
    "trs\030\002 \003(\0132\026.pb.map_string_Variant\"1\n\017Enc"
    "odedOrMember\022\036\n\010location\030\001 \001(\0132\014.pb.Loca"
    "tion\"\257\001\n\nDataMember\022\032\n\004type\030\001 \001(\0132\014.pb.D"
    "ataType\022\014\n\004name\030\002 \001(\t\022\021\n\textend_to\030\003 \001(\010"
    "\022\"\n\rdefault_value\030\004 \001(\0132\013.pb.Variant\022\031\n\021"
    "when_discriminant\030\005 \003(\t\022%\n\010__parent\030\006 \001("
    "\0132\023.pb.EncodedOrMember\"\235\001\n\016EncodedMember"
    "s\0221\n\022encoding_specifics\030\001 \001(\0132\025.pb.Encod"
    "ingSpecifics\0221\n\007members\030\002 \003(\0132 .pb.__uni"
    "que_ptr_EncodedOrMember\022%\n\010__parent\030\003 \001("
    "\0132\023.pb.EncodedOrMember\"\216\001\n\tStructure\022\021\n\t"
    "decl_type\030\001 \001(\r\022\014\n\004type\030\002 \001(\r\022\014\n\004name\030\003 "
    "\001(\t\022\024\n\014discriminant\030\004 \001(\t\022\026\n\016inherited_f"
    "rom\030\005 \001(\t\022$\n\010__parent\030\006 \001(\0132\022.pb.Encoded"
    "Members\"S\n\007Typedef\022\036\n\010location\030\001 \001(\0132\014.p"
    "b.Location\022\032\n\004type\030\002 \001(\0132\014.pb.DataType\022\014"
    "\n\004name\030\003 \001(\t\"U\n\004Root\022\035\n\010typedefs\030\001 \003(\0132\013"
    ".pb.Typedef\022.\n\nstructures\030\002 \003(\0132\032.pb.__u"
    "nique_ptr_Structure\";\n\025__unique_ptr_Data"
    "Type\022\"\n\014du_data_type\030\001 \001(\0132\014.pb.DataType"
    "\"\251\001\n\034__unique_ptr_EncodedOrMember\022&\n\016du_"
    "data_member\030\001 \001(\0132\016.pb.DataMember\022.\n\022du_"
    "encoded_members\030\002 \001(\0132\022.pb.EncodedMember"
    "s\0221\n\024du_encoded_or_member\030\003 \001(\0132\023.pb.Enc"
    "odedOrMember\"=\n\026__unique_ptr_Structure\022#"
    "\n\014du_structure\030\001 \001(\0132\r.pb.Structure\"=\n\022m"
    "ap_string_Variant\022\013\n\003key\030\001 \001(\t\022\032\n\005value\030"
    "\002 \001(\0132\013.pb.Variant\"/\n\021map_string_uint32\022"
    "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r", 2027);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "output.proto", &protobuf_RegisterTypes);
  Limit::default_instance_ = new Limit();
  Location::default_instance_ = new Location();
  CharacterRange::default_instance_ = new CharacterRange();
  CharacterSet::default_instance_ = new CharacterSet();
  Variant::default_instance_ = new Variant();
  DataType::default_instance_ = new DataType();
  EncodingSpecifics::default_instance_ = new EncodingSpecifics();
  EncodedOrMember::default_instance_ = new EncodedOrMember();
  DataMember::default_instance_ = new DataMember();
  EncodedMembers::default_instance_ = new EncodedMembers();
  Structure::default_instance_ = new Structure();
  Typedef::default_instance_ = new Typedef();
  Root::default_instance_ = new Root();
  __unique_ptr_DataType::default_instance_ = new __unique_ptr_DataType();
  __unique_ptr_EncodedOrMember::default_instance_ = new __unique_ptr_EncodedOrMember();
  __unique_ptr_Structure::default_instance_ = new __unique_ptr_Structure();
  map_string_Variant::default_instance_ = new map_string_Variant();
  map_string_uint32::default_instance_ = new map_string_uint32();
  Limit::default_instance_->InitAsDefaultInstance();
  Location::default_instance_->InitAsDefaultInstance();
  CharacterRange::default_instance_->InitAsDefaultInstance();
  CharacterSet::default_instance_->InitAsDefaultInstance();
  Variant::default_instance_->InitAsDefaultInstance();
  DataType::default_instance_->InitAsDefaultInstance();
  EncodingSpecifics::default_instance_->InitAsDefaultInstance();
  EncodedOrMember::default_instance_->InitAsDefaultInstance();
  DataMember::default_instance_->InitAsDefaultInstance();
  EncodedMembers::default_instance_->InitAsDefaultInstance();
  Structure::default_instance_->InitAsDefaultInstance();
  Typedef::default_instance_->InitAsDefaultInstance();
  Root::default_instance_->InitAsDefaultInstance();
  __unique_ptr_DataType::default_instance_->InitAsDefaultInstance();
  __unique_ptr_EncodedOrMember::default_instance_->InitAsDefaultInstance();
  __unique_ptr_Structure::default_instance_->InitAsDefaultInstance();
  map_string_Variant::default_instance_->InitAsDefaultInstance();
  map_string_uint32::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_output_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_output_2eproto {
  StaticDescriptorInitializer_output_2eproto() {
    protobuf_AddDesc_output_2eproto();
  }
} static_descriptor_initializer_output_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Limit::kInclusiveFieldNumber;
const int Limit::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Limit::Limit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Limit)
}

void Limit::InitAsDefaultInstance() {
}

Limit::Limit(const Limit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.Limit)
}

void Limit::SharedCtor() {
  _cached_size_ = 0;
  inclusive_ = false;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Limit::~Limit() {
  // @@protoc_insertion_point(destructor:pb.Limit)
  SharedDtor();
}

void Limit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Limit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Limit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Limit_descriptor_;
}

const Limit& Limit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

Limit* Limit::default_instance_ = NULL;

Limit* Limit::New(::google::protobuf::Arena* arena) const {
  Limit* n = new Limit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Limit::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Limit)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Limit, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Limit*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(value_, inclusive_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Limit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Limit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool inclusive = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &inclusive_)));
          set_has_inclusive();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_value;
        break;
      }

      // optional double value = 2;
      case 2: {
        if (tag == 17) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Limit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Limit)
  return false;
#undef DO_
}

void Limit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Limit)
  // optional bool inclusive = 1;
  if (has_inclusive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->inclusive(), output);
  }

  // optional double value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Limit)
}

::google::protobuf::uint8* Limit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.Limit)
  // optional bool inclusive = 1;
  if (has_inclusive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->inclusive(), target);
  }

  // optional double value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Limit)
  return target;
}

int Limit::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Limit)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional bool inclusive = 1;
    if (has_inclusive()) {
      total_size += 1 + 1;
    }

    // optional double value = 2;
    if (has_value()) {
      total_size += 1 + 8;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Limit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Limit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Limit* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Limit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Limit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Limit)
    MergeFrom(*source);
  }
}

void Limit::MergeFrom(const Limit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Limit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_inclusive()) {
      set_inclusive(from.inclusive());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Limit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Limit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Limit::CopyFrom(const Limit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Limit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Limit::IsInitialized() const {

  return true;
}

void Limit::Swap(Limit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Limit::InternalSwap(Limit* other) {
  std::swap(inclusive_, other->inclusive_);
  std::swap(value_, other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Limit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Limit_descriptor_;
  metadata.reflection = Limit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Limit

// optional bool inclusive = 1;
bool Limit::has_inclusive() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Limit::set_has_inclusive() {
  _has_bits_[0] |= 0x00000001u;
}
void Limit::clear_has_inclusive() {
  _has_bits_[0] &= ~0x00000001u;
}
void Limit::clear_inclusive() {
  inclusive_ = false;
  clear_has_inclusive();
}
 bool Limit::inclusive() const {
  // @@protoc_insertion_point(field_get:pb.Limit.inclusive)
  return inclusive_;
}
 void Limit::set_inclusive(bool value) {
  set_has_inclusive();
  inclusive_ = value;
  // @@protoc_insertion_point(field_set:pb.Limit.inclusive)
}

// optional double value = 2;
bool Limit::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Limit::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void Limit::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void Limit::clear_value() {
  value_ = 0;
  clear_has_value();
}
 double Limit::value() const {
  // @@protoc_insertion_point(field_get:pb.Limit.value)
  return value_;
}
 void Limit::set_value(double value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:pb.Limit.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Location::kFileNameFieldNumber;
const int Location::kLineNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Location::Location()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Location)
}

void Location::InitAsDefaultInstance() {
}

Location::Location(const Location& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.Location)
}

void Location::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Location::~Location() {
  // @@protoc_insertion_point(destructor:pb.Location)
  SharedDtor();
}

void Location::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Location::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Location::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Location_descriptor_;
}

const Location& Location::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

Location* Location::default_instance_ = NULL;

Location* Location::New(::google::protobuf::Arena* arena) const {
  Location* n = new Location;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Location)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_file_name()) {
      file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    line_number_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Location)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string file_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), this->file_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.Location.file_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_line_number;
        break;
      }

      // optional sint32 line_number = 2;
      case 2: {
        if (tag == 16) {
         parse_line_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &line_number_)));
          set_has_line_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Location)
  return false;
#undef DO_
}

void Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Location)
  // optional string file_name = 1;
  if (has_file_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Location.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_name(), output);
  }

  // optional sint32 line_number = 2;
  if (has_line_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->line_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Location)
}

::google::protobuf::uint8* Location::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.Location)
  // optional string file_name = 1;
  if (has_file_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Location.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_name(), target);
  }

  // optional sint32 line_number = 2;
  if (has_line_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->line_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Location)
  return target;
}

int Location::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Location)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string file_name = 1;
    if (has_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional sint32 line_number = 2;
    if (has_line_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->line_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Location)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Location* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Location>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Location)
    MergeFrom(*source);
  }
}

void Location::MergeFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Location)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_file_name()) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (from.has_line_number()) {
      set_line_number(from.line_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location::IsInitialized() const {

  return true;
}

void Location::Swap(Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Location::InternalSwap(Location* other) {
  file_name_.Swap(&other->file_name_);
  std::swap(line_number_, other->line_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Location::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Location_descriptor_;
  metadata.reflection = Location_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Location

// optional string file_name = 1;
bool Location::has_file_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Location::set_has_file_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Location::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Location::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_name();
}
 const ::std::string& Location::file_name() const {
  // @@protoc_insertion_point(field_get:pb.Location.file_name)
  return file_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Location::set_file_name(const ::std::string& value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Location.file_name)
}
 void Location::set_file_name(const char* value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Location.file_name)
}
 void Location::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Location.file_name)
}
 ::std::string* Location::mutable_file_name() {
  set_has_file_name();
  // @@protoc_insertion_point(field_mutable:pb.Location.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Location::release_file_name() {
  // @@protoc_insertion_point(field_release:pb.Location.file_name)
  clear_has_file_name();
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Location::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    set_has_file_name();
  } else {
    clear_has_file_name();
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:pb.Location.file_name)
}

// optional sint32 line_number = 2;
bool Location::has_line_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Location::set_has_line_number() {
  _has_bits_[0] |= 0x00000002u;
}
void Location::clear_has_line_number() {
  _has_bits_[0] &= ~0x00000002u;
}
void Location::clear_line_number() {
  line_number_ = 0;
  clear_has_line_number();
}
 ::google::protobuf::int32 Location::line_number() const {
  // @@protoc_insertion_point(field_get:pb.Location.line_number)
  return line_number_;
}
 void Location::set_line_number(::google::protobuf::int32 value) {
  set_has_line_number();
  line_number_ = value;
  // @@protoc_insertion_point(field_set:pb.Location.line_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharacterRange::kFromFieldNumber;
const int CharacterRange::kToFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharacterRange::CharacterRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CharacterRange)
}

void CharacterRange::InitAsDefaultInstance() {
}

CharacterRange::CharacterRange(const CharacterRange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.CharacterRange)
}

void CharacterRange::SharedCtor() {
  _cached_size_ = 0;
  from_ = 0u;
  to_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CharacterRange::~CharacterRange() {
  // @@protoc_insertion_point(destructor:pb.CharacterRange)
  SharedDtor();
}

void CharacterRange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CharacterRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CharacterRange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CharacterRange_descriptor_;
}

const CharacterRange& CharacterRange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

CharacterRange* CharacterRange::default_instance_ = NULL;

CharacterRange* CharacterRange::New(::google::protobuf::Arena* arena) const {
  CharacterRange* n = new CharacterRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CharacterRange::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CharacterRange)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CharacterRange, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CharacterRange*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(from_, to_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CharacterRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CharacterRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 from = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_)));
          set_has_from();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_to;
        break;
      }

      // optional uint32 to = 2;
      case 2: {
        if (tag == 16) {
         parse_to:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_)));
          set_has_to();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CharacterRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CharacterRange)
  return false;
#undef DO_
}

void CharacterRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CharacterRange)
  // optional uint32 from = 1;
  if (has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->from(), output);
  }

  // optional uint32 to = 2;
  if (has_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->to(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CharacterRange)
}

::google::protobuf::uint8* CharacterRange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CharacterRange)
  // optional uint32 from = 1;
  if (has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->from(), target);
  }

  // optional uint32 to = 2;
  if (has_to()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->to(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CharacterRange)
  return target;
}

int CharacterRange::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CharacterRange)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 from = 1;
    if (has_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->from());
    }

    // optional uint32 to = 2;
    if (has_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->to());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CharacterRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CharacterRange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CharacterRange* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CharacterRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CharacterRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CharacterRange)
    MergeFrom(*source);
  }
}

void CharacterRange::MergeFrom(const CharacterRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CharacterRange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_from()) {
      set_from(from.from());
    }
    if (from.has_to()) {
      set_to(from.to());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CharacterRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CharacterRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterRange::CopyFrom(const CharacterRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CharacterRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterRange::IsInitialized() const {

  return true;
}

void CharacterRange::Swap(CharacterRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharacterRange::InternalSwap(CharacterRange* other) {
  std::swap(from_, other->from_);
  std::swap(to_, other->to_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CharacterRange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CharacterRange_descriptor_;
  metadata.reflection = CharacterRange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CharacterRange

// optional uint32 from = 1;
bool CharacterRange::has_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CharacterRange::set_has_from() {
  _has_bits_[0] |= 0x00000001u;
}
void CharacterRange::clear_has_from() {
  _has_bits_[0] &= ~0x00000001u;
}
void CharacterRange::clear_from() {
  from_ = 0u;
  clear_has_from();
}
 ::google::protobuf::uint32 CharacterRange::from() const {
  // @@protoc_insertion_point(field_get:pb.CharacterRange.from)
  return from_;
}
 void CharacterRange::set_from(::google::protobuf::uint32 value) {
  set_has_from();
  from_ = value;
  // @@protoc_insertion_point(field_set:pb.CharacterRange.from)
}

// optional uint32 to = 2;
bool CharacterRange::has_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CharacterRange::set_has_to() {
  _has_bits_[0] |= 0x00000002u;
}
void CharacterRange::clear_has_to() {
  _has_bits_[0] &= ~0x00000002u;
}
void CharacterRange::clear_to() {
  to_ = 0u;
  clear_has_to();
}
 ::google::protobuf::uint32 CharacterRange::to() const {
  // @@protoc_insertion_point(field_get:pb.CharacterRange.to)
  return to_;
}
 void CharacterRange::set_to(::google::protobuf::uint32 value) {
  set_has_to();
  to_ = value;
  // @@protoc_insertion_point(field_set:pb.CharacterRange.to)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharacterSet::kRangesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharacterSet::CharacterSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.CharacterSet)
}

void CharacterSet::InitAsDefaultInstance() {
}

CharacterSet::CharacterSet(const CharacterSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.CharacterSet)
}

void CharacterSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CharacterSet::~CharacterSet() {
  // @@protoc_insertion_point(destructor:pb.CharacterSet)
  SharedDtor();
}

void CharacterSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CharacterSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CharacterSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CharacterSet_descriptor_;
}

const CharacterSet& CharacterSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

CharacterSet* CharacterSet::default_instance_ = NULL;

CharacterSet* CharacterSet::New(::google::protobuf::Arena* arena) const {
  CharacterSet* n = new CharacterSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CharacterSet::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.CharacterSet)
  ranges_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CharacterSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.CharacterSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.CharacterRange ranges = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ranges:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ranges()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ranges;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.CharacterSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.CharacterSet)
  return false;
#undef DO_
}

void CharacterSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.CharacterSet)
  // repeated .pb.CharacterRange ranges = 1;
  for (unsigned int i = 0, n = this->ranges_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ranges(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.CharacterSet)
}

::google::protobuf::uint8* CharacterSet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.CharacterSet)
  // repeated .pb.CharacterRange ranges = 1;
  for (unsigned int i = 0, n = this->ranges_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->ranges(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.CharacterSet)
  return target;
}

int CharacterSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.CharacterSet)
  int total_size = 0;

  // repeated .pb.CharacterRange ranges = 1;
  total_size += 1 * this->ranges_size();
  for (int i = 0; i < this->ranges_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ranges(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CharacterSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.CharacterSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CharacterSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CharacterSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.CharacterSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.CharacterSet)
    MergeFrom(*source);
  }
}

void CharacterSet::MergeFrom(const CharacterSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.CharacterSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  ranges_.MergeFrom(from.ranges_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CharacterSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.CharacterSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterSet::CopyFrom(const CharacterSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.CharacterSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterSet::IsInitialized() const {

  return true;
}

void CharacterSet::Swap(CharacterSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharacterSet::InternalSwap(CharacterSet* other) {
  ranges_.UnsafeArenaSwap(&other->ranges_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CharacterSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CharacterSet_descriptor_;
  metadata.reflection = CharacterSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CharacterSet

// repeated .pb.CharacterRange ranges = 1;
int CharacterSet::ranges_size() const {
  return ranges_.size();
}
void CharacterSet::clear_ranges() {
  ranges_.Clear();
}
const ::pb::CharacterRange& CharacterSet::ranges(int index) const {
  // @@protoc_insertion_point(field_get:pb.CharacterSet.ranges)
  return ranges_.Get(index);
}
::pb::CharacterRange* CharacterSet::mutable_ranges(int index) {
  // @@protoc_insertion_point(field_mutable:pb.CharacterSet.ranges)
  return ranges_.Mutable(index);
}
::pb::CharacterRange* CharacterSet::add_ranges() {
  // @@protoc_insertion_point(field_add:pb.CharacterSet.ranges)
  return ranges_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::CharacterRange >*
CharacterSet::mutable_ranges() {
  // @@protoc_insertion_point(field_mutable_list:pb.CharacterSet.ranges)
  return &ranges_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::CharacterRange >&
CharacterSet::ranges() const {
  // @@protoc_insertion_point(field_list:pb.CharacterSet.ranges)
  return ranges_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Variant::kKindFieldNumber;
const int Variant::kNumberValueFieldNumber;
const int Variant::kStringValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Variant::Variant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Variant)
}

void Variant::InitAsDefaultInstance() {
}

Variant::Variant(const Variant& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.Variant)
}

void Variant::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  kind_ = 0u;
  number_value_ = 0;
  string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Variant::~Variant() {
  // @@protoc_insertion_point(destructor:pb.Variant)
  SharedDtor();
}

void Variant::SharedDtor() {
  string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Variant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Variant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Variant_descriptor_;
}

const Variant& Variant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

Variant* Variant::default_instance_ = NULL;

Variant* Variant::New(::google::protobuf::Arena* arena) const {
  Variant* n = new Variant;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Variant::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Variant)
  if (_has_bits_[0 / 32] & 7u) {
    kind_ = 0u;
    number_value_ = 0;
    if (has_string_value()) {
      string_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Variant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Variant)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 kind = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kind_)));
          set_has_kind();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_number_value;
        break;
      }

      // optional double number_value = 2;
      case 2: {
        if (tag == 17) {
         parse_number_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &number_value_)));
          set_has_number_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_string_value;
        break;
      }

      // optional string string_value = 3;
      case 3: {
        if (tag == 26) {
         parse_string_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_value().data(), this->string_value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.Variant.string_value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Variant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Variant)
  return false;
#undef DO_
}

void Variant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Variant)
  // optional uint32 kind = 1;
  if (has_kind()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->kind(), output);
  }

  // optional double number_value = 2;
  if (has_number_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->number_value(), output);
  }

  // optional string string_value = 3;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Variant.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->string_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Variant)
}

::google::protobuf::uint8* Variant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.Variant)
  // optional uint32 kind = 1;
  if (has_kind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->kind(), target);
  }

  // optional double number_value = 2;
  if (has_number_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->number_value(), target);
  }

  // optional string string_value = 3;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Variant.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->string_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Variant)
  return target;
}

int Variant::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Variant)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 kind = 1;
    if (has_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->kind());
    }

    // optional double number_value = 2;
    if (has_number_value()) {
      total_size += 1 + 8;
    }

    // optional string string_value = 3;
    if (has_string_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Variant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Variant)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Variant* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Variant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Variant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Variant)
    MergeFrom(*source);
  }
}

void Variant::MergeFrom(const Variant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Variant)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_kind()) {
      set_kind(from.kind());
    }
    if (from.has_number_value()) {
      set_number_value(from.number_value());
    }
    if (from.has_string_value()) {
      set_has_string_value();
      string_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Variant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Variant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Variant::CopyFrom(const Variant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Variant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Variant::IsInitialized() const {

  return true;
}

void Variant::Swap(Variant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Variant::InternalSwap(Variant* other) {
  std::swap(kind_, other->kind_);
  std::swap(number_value_, other->number_value_);
  string_value_.Swap(&other->string_value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Variant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Variant_descriptor_;
  metadata.reflection = Variant_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Variant

// optional uint32 kind = 1;
bool Variant::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Variant::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
void Variant::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
void Variant::clear_kind() {
  kind_ = 0u;
  clear_has_kind();
}
 ::google::protobuf::uint32 Variant::kind() const {
  // @@protoc_insertion_point(field_get:pb.Variant.kind)
  return kind_;
}
 void Variant::set_kind(::google::protobuf::uint32 value) {
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:pb.Variant.kind)
}

// optional double number_value = 2;
bool Variant::has_number_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Variant::set_has_number_value() {
  _has_bits_[0] |= 0x00000002u;
}
void Variant::clear_has_number_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void Variant::clear_number_value() {
  number_value_ = 0;
  clear_has_number_value();
}
 double Variant::number_value() const {
  // @@protoc_insertion_point(field_get:pb.Variant.number_value)
  return number_value_;
}
 void Variant::set_number_value(double value) {
  set_has_number_value();
  number_value_ = value;
  // @@protoc_insertion_point(field_set:pb.Variant.number_value)
}

// optional string string_value = 3;
bool Variant::has_string_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Variant::set_has_string_value() {
  _has_bits_[0] |= 0x00000004u;
}
void Variant::clear_has_string_value() {
  _has_bits_[0] &= ~0x00000004u;
}
void Variant::clear_string_value() {
  string_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string_value();
}
 const ::std::string& Variant::string_value() const {
  // @@protoc_insertion_point(field_get:pb.Variant.string_value)
  return string_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Variant::set_string_value(const ::std::string& value) {
  set_has_string_value();
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Variant.string_value)
}
 void Variant::set_string_value(const char* value) {
  set_has_string_value();
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Variant.string_value)
}
 void Variant::set_string_value(const char* value, size_t size) {
  set_has_string_value();
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Variant.string_value)
}
 ::std::string* Variant::mutable_string_value() {
  set_has_string_value();
  // @@protoc_insertion_point(field_mutable:pb.Variant.string_value)
  return string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Variant::release_string_value() {
  // @@protoc_insertion_point(field_release:pb.Variant.string_value)
  clear_has_string_value();
  return string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Variant::set_allocated_string_value(::std::string* string_value) {
  if (string_value != NULL) {
    set_has_string_value();
  } else {
    clear_has_string_value();
  }
  string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value);
  // @@protoc_insertion_point(field_set_allocated:pb.Variant.string_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataType::kKindFieldNumber;
const int DataType::kNameFieldNumber;
const int DataType::kMappingNameFieldNumber;
const int DataType::kEncodingNameFieldNumber;
const int DataType::kKeyTypeFieldNumber;
const int DataType::kParamTypeFieldNumber;
const int DataType::kLowLimitFieldNumber;
const int DataType::kHighLimitFieldNumber;
const int DataType::kFixedPrecisionFieldNumber;
const int DataType::kFloatingSignificandBitsFieldNumber;
const int DataType::kFloatingExponentBitsFieldNumber;
const int DataType::kCharacterSetFieldNumber;
const int DataType::kStringMinSizeFieldNumber;
const int DataType::kStringMaxSizeFieldNumber;
const int DataType::kEncodingAttrsFieldNumber;
const int DataType::kMappingAttrsFieldNumber;
const int DataType::kEnumValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataType::DataType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.DataType)
}

void DataType::InitAsDefaultInstance() {
  key_type_ = const_cast< ::pb::__unique_ptr_DataType*>(&::pb::__unique_ptr_DataType::default_instance());
  param_type_ = const_cast< ::pb::__unique_ptr_DataType*>(&::pb::__unique_ptr_DataType::default_instance());
  low_limit_ = const_cast< ::pb::Limit*>(&::pb::Limit::default_instance());
  high_limit_ = const_cast< ::pb::Limit*>(&::pb::Limit::default_instance());
  character_set_ = const_cast< ::pb::CharacterSet*>(&::pb::CharacterSet::default_instance());
}

DataType::DataType(const DataType& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.DataType)
}

void DataType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  kind_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapping_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encoding_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_type_ = NULL;
  param_type_ = NULL;
  low_limit_ = NULL;
  high_limit_ = NULL;
  fixed_precision_ = 0;
  floating_significand_bits_ = 0u;
  floating_exponent_bits_ = 0u;
  character_set_ = NULL;
  string_min_size_ = 0u;
  string_max_size_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataType::~DataType() {
  // @@protoc_insertion_point(destructor:pb.DataType)
  SharedDtor();
}

void DataType::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mapping_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encoding_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete key_type_;
    delete param_type_;
    delete low_limit_;
    delete high_limit_;
    delete character_set_;
  }
}

void DataType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataType_descriptor_;
}

const DataType& DataType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

DataType* DataType::default_instance_ = NULL;

DataType* DataType::New(::google::protobuf::Arena* arena) const {
  DataType* n = new DataType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataType::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.DataType)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DataType, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DataType*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    kind_ = 0u;
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_mapping_name()) {
      mapping_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_encoding_name()) {
      encoding_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_key_type()) {
      if (key_type_ != NULL) key_type_->::pb::__unique_ptr_DataType::Clear();
    }
    if (has_param_type()) {
      if (param_type_ != NULL) param_type_->::pb::__unique_ptr_DataType::Clear();
    }
    if (has_low_limit()) {
      if (low_limit_ != NULL) low_limit_->::pb::Limit::Clear();
    }
    if (has_high_limit()) {
      if (high_limit_ != NULL) high_limit_->::pb::Limit::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 16128u) {
    ZR_(floating_exponent_bits_, string_min_size_);
    fixed_precision_ = 0;
    floating_significand_bits_ = 0u;
    if (has_character_set()) {
      if (character_set_ != NULL) character_set_->::pb::CharacterSet::Clear();
    }
    string_max_size_ = 0u;
  }

#undef ZR_HELPER_
#undef ZR_

  encoding_attrs_.Clear();
  mapping_attrs_.Clear();
  enum_values_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DataType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.DataType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 kind = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kind_)));
          set_has_kind();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.DataType.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mapping_name;
        break;
      }

      // optional string mapping_name = 3;
      case 3: {
        if (tag == 26) {
         parse_mapping_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mapping_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mapping_name().data(), this->mapping_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.DataType.mapping_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_encoding_name;
        break;
      }

      // optional string encoding_name = 4;
      case 4: {
        if (tag == 34) {
         parse_encoding_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_encoding_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->encoding_name().data(), this->encoding_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.DataType.encoding_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_key_type;
        break;
      }

      // optional .pb.__unique_ptr_DataType key_type = 5;
      case 5: {
        if (tag == 42) {
         parse_key_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_key_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_param_type;
        break;
      }

      // optional .pb.__unique_ptr_DataType param_type = 6;
      case 6: {
        if (tag == 50) {
         parse_param_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_param_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_low_limit;
        break;
      }

      // optional .pb.Limit low_limit = 7;
      case 7: {
        if (tag == 58) {
         parse_low_limit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_low_limit()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_high_limit;
        break;
      }

      // optional .pb.Limit high_limit = 8;
      case 8: {
        if (tag == 66) {
         parse_high_limit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_high_limit()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_fixed_precision;
        break;
      }

      // optional double fixed_precision = 9;
      case 9: {
        if (tag == 73) {
         parse_fixed_precision:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fixed_precision_)));
          set_has_fixed_precision();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_floating_significand_bits;
        break;
      }

      // optional uint32 floating_significand_bits = 10;
      case 10: {
        if (tag == 80) {
         parse_floating_significand_bits:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &floating_significand_bits_)));
          set_has_floating_significand_bits();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_floating_exponent_bits;
        break;
      }

      // optional uint32 floating_exponent_bits = 11;
      case 11: {
        if (tag == 88) {
         parse_floating_exponent_bits:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &floating_exponent_bits_)));
          set_has_floating_exponent_bits();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_character_set;
        break;
      }

      // optional .pb.CharacterSet character_set = 12;
      case 12: {
        if (tag == 98) {
         parse_character_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_character_set()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_string_min_size;
        break;
      }

      // optional uint32 string_min_size = 13;
      case 13: {
        if (tag == 104) {
         parse_string_min_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &string_min_size_)));
          set_has_string_min_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_string_max_size;
        break;
      }

      // optional uint32 string_max_size = 14;
      case 14: {
        if (tag == 112) {
         parse_string_max_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &string_max_size_)));
          set_has_string_max_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_encoding_attrs;
        break;
      }

      // repeated .pb.map_string_Variant encoding_attrs = 15;
      case 15: {
        if (tag == 122) {
         parse_encoding_attrs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_encoding_attrs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_encoding_attrs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_loop_encoding_attrs;
        if (input->ExpectTag(130)) goto parse_loop_mapping_attrs;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .pb.map_string_Variant mapping_attrs = 16;
      case 16: {
        if (tag == 130) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_mapping_attrs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_mapping_attrs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_loop_mapping_attrs;
        if (input->ExpectTag(138)) goto parse_loop_enum_values;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .pb.map_string_uint32 enum_values = 17;
      case 17: {
        if (tag == 138) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_enum_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_enum_values()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_loop_enum_values;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.DataType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.DataType)
  return false;
#undef DO_
}

void DataType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.DataType)
  // optional uint32 kind = 1;
  if (has_kind()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->kind(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.DataType.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string mapping_name = 3;
  if (has_mapping_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapping_name().data(), this->mapping_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.DataType.mapping_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mapping_name(), output);
  }

  // optional string encoding_name = 4;
  if (has_encoding_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encoding_name().data(), this->encoding_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.DataType.encoding_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->encoding_name(), output);
  }

  // optional .pb.__unique_ptr_DataType key_type = 5;
  if (has_key_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->key_type_, output);
  }

  // optional .pb.__unique_ptr_DataType param_type = 6;
  if (has_param_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->param_type_, output);
  }

  // optional .pb.Limit low_limit = 7;
  if (has_low_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->low_limit_, output);
  }

  // optional .pb.Limit high_limit = 8;
  if (has_high_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->high_limit_, output);
  }

  // optional double fixed_precision = 9;
  if (has_fixed_precision()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->fixed_precision(), output);
  }

  // optional uint32 floating_significand_bits = 10;
  if (has_floating_significand_bits()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->floating_significand_bits(), output);
  }

  // optional uint32 floating_exponent_bits = 11;
  if (has_floating_exponent_bits()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->floating_exponent_bits(), output);
  }

  // optional .pb.CharacterSet character_set = 12;
  if (has_character_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->character_set_, output);
  }

  // optional uint32 string_min_size = 13;
  if (has_string_min_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->string_min_size(), output);
  }

  // optional uint32 string_max_size = 14;
  if (has_string_max_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->string_max_size(), output);
  }

  // repeated .pb.map_string_Variant encoding_attrs = 15;
  for (unsigned int i = 0, n = this->encoding_attrs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->encoding_attrs(i), output);
  }

  // repeated .pb.map_string_Variant mapping_attrs = 16;
  for (unsigned int i = 0, n = this->mapping_attrs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->mapping_attrs(i), output);
  }

  // repeated .pb.map_string_uint32 enum_values = 17;
  for (unsigned int i = 0, n = this->enum_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->enum_values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.DataType)
}

::google::protobuf::uint8* DataType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.DataType)
  // optional uint32 kind = 1;
  if (has_kind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->kind(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.DataType.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string mapping_name = 3;
  if (has_mapping_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mapping_name().data(), this->mapping_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.DataType.mapping_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mapping_name(), target);
  }

  // optional string encoding_name = 4;
  if (has_encoding_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encoding_name().data(), this->encoding_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.DataType.encoding_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->encoding_name(), target);
  }

  // optional .pb.__unique_ptr_DataType key_type = 5;
  if (has_key_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->key_type_, target);
  }

  // optional .pb.__unique_ptr_DataType param_type = 6;
  if (has_param_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->param_type_, target);
  }

  // optional .pb.Limit low_limit = 7;
  if (has_low_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, *this->low_limit_, target);
  }

  // optional .pb.Limit high_limit = 8;
  if (has_high_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, *this->high_limit_, target);
  }

  // optional double fixed_precision = 9;
  if (has_fixed_precision()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->fixed_precision(), target);
  }

  // optional uint32 floating_significand_bits = 10;
  if (has_floating_significand_bits()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->floating_significand_bits(), target);
  }

  // optional uint32 floating_exponent_bits = 11;
  if (has_floating_exponent_bits()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->floating_exponent_bits(), target);
  }

  // optional .pb.CharacterSet character_set = 12;
  if (has_character_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, *this->character_set_, target);
  }

  // optional uint32 string_min_size = 13;
  if (has_string_min_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->string_min_size(), target);
  }

  // optional uint32 string_max_size = 14;
  if (has_string_max_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->string_max_size(), target);
  }

  // repeated .pb.map_string_Variant encoding_attrs = 15;
  for (unsigned int i = 0, n = this->encoding_attrs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->encoding_attrs(i), target);
  }

  // repeated .pb.map_string_Variant mapping_attrs = 16;
  for (unsigned int i = 0, n = this->mapping_attrs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->mapping_attrs(i), target);
  }

  // repeated .pb.map_string_uint32 enum_values = 17;
  for (unsigned int i = 0, n = this->enum_values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->enum_values(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.DataType)
  return target;
}

int DataType::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.DataType)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 kind = 1;
    if (has_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->kind());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string mapping_name = 3;
    if (has_mapping_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mapping_name());
    }

    // optional string encoding_name = 4;
    if (has_encoding_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->encoding_name());
    }

    // optional .pb.__unique_ptr_DataType key_type = 5;
    if (has_key_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->key_type_);
    }

    // optional .pb.__unique_ptr_DataType param_type = 6;
    if (has_param_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->param_type_);
    }

    // optional .pb.Limit low_limit = 7;
    if (has_low_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->low_limit_);
    }

    // optional .pb.Limit high_limit = 8;
    if (has_high_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->high_limit_);
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional double fixed_precision = 9;
    if (has_fixed_precision()) {
      total_size += 1 + 8;
    }

    // optional uint32 floating_significand_bits = 10;
    if (has_floating_significand_bits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->floating_significand_bits());
    }

    // optional uint32 floating_exponent_bits = 11;
    if (has_floating_exponent_bits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->floating_exponent_bits());
    }

    // optional .pb.CharacterSet character_set = 12;
    if (has_character_set()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->character_set_);
    }

    // optional uint32 string_min_size = 13;
    if (has_string_min_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->string_min_size());
    }

    // optional uint32 string_max_size = 14;
    if (has_string_max_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->string_max_size());
    }

  }
  // repeated .pb.map_string_Variant encoding_attrs = 15;
  total_size += 1 * this->encoding_attrs_size();
  for (int i = 0; i < this->encoding_attrs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->encoding_attrs(i));
  }

  // repeated .pb.map_string_Variant mapping_attrs = 16;
  total_size += 2 * this->mapping_attrs_size();
  for (int i = 0; i < this->mapping_attrs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mapping_attrs(i));
  }

  // repeated .pb.map_string_uint32 enum_values = 17;
  total_size += 2 * this->enum_values_size();
  for (int i = 0; i < this->enum_values_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->enum_values(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.DataType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DataType* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DataType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.DataType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.DataType)
    MergeFrom(*source);
  }
}

void DataType::MergeFrom(const DataType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.DataType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  encoding_attrs_.MergeFrom(from.encoding_attrs_);
  mapping_attrs_.MergeFrom(from.mapping_attrs_);
  enum_values_.MergeFrom(from.enum_values_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_kind()) {
      set_kind(from.kind());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_mapping_name()) {
      set_has_mapping_name();
      mapping_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mapping_name_);
    }
    if (from.has_encoding_name()) {
      set_has_encoding_name();
      encoding_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encoding_name_);
    }
    if (from.has_key_type()) {
      mutable_key_type()->::pb::__unique_ptr_DataType::MergeFrom(from.key_type());
    }
    if (from.has_param_type()) {
      mutable_param_type()->::pb::__unique_ptr_DataType::MergeFrom(from.param_type());
    }
    if (from.has_low_limit()) {
      mutable_low_limit()->::pb::Limit::MergeFrom(from.low_limit());
    }
    if (from.has_high_limit()) {
      mutable_high_limit()->::pb::Limit::MergeFrom(from.high_limit());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_fixed_precision()) {
      set_fixed_precision(from.fixed_precision());
    }
    if (from.has_floating_significand_bits()) {
      set_floating_significand_bits(from.floating_significand_bits());
    }
    if (from.has_floating_exponent_bits()) {
      set_floating_exponent_bits(from.floating_exponent_bits());
    }
    if (from.has_character_set()) {
      mutable_character_set()->::pb::CharacterSet::MergeFrom(from.character_set());
    }
    if (from.has_string_min_size()) {
      set_string_min_size(from.string_min_size());
    }
    if (from.has_string_max_size()) {
      set_string_max_size(from.string_max_size());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DataType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.DataType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataType::CopyFrom(const DataType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.DataType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataType::IsInitialized() const {

  return true;
}

void DataType::Swap(DataType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataType::InternalSwap(DataType* other) {
  std::swap(kind_, other->kind_);
  name_.Swap(&other->name_);
  mapping_name_.Swap(&other->mapping_name_);
  encoding_name_.Swap(&other->encoding_name_);
  std::swap(key_type_, other->key_type_);
  std::swap(param_type_, other->param_type_);
  std::swap(low_limit_, other->low_limit_);
  std::swap(high_limit_, other->high_limit_);
  std::swap(fixed_precision_, other->fixed_precision_);
  std::swap(floating_significand_bits_, other->floating_significand_bits_);
  std::swap(floating_exponent_bits_, other->floating_exponent_bits_);
  std::swap(character_set_, other->character_set_);
  std::swap(string_min_size_, other->string_min_size_);
  std::swap(string_max_size_, other->string_max_size_);
  encoding_attrs_.UnsafeArenaSwap(&other->encoding_attrs_);
  mapping_attrs_.UnsafeArenaSwap(&other->mapping_attrs_);
  enum_values_.UnsafeArenaSwap(&other->enum_values_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataType_descriptor_;
  metadata.reflection = DataType_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataType

// optional uint32 kind = 1;
bool DataType::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DataType::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
void DataType::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
void DataType::clear_kind() {
  kind_ = 0u;
  clear_has_kind();
}
 ::google::protobuf::uint32 DataType::kind() const {
  // @@protoc_insertion_point(field_get:pb.DataType.kind)
  return kind_;
}
 void DataType::set_kind(::google::protobuf::uint32 value) {
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:pb.DataType.kind)
}

// optional string name = 2;
bool DataType::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DataType::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void DataType::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void DataType::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& DataType::name() const {
  // @@protoc_insertion_point(field_get:pb.DataType.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DataType::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.DataType.name)
}
 void DataType::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.DataType.name)
}
 void DataType::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.DataType.name)
}
 ::std::string* DataType::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pb.DataType.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DataType::release_name() {
  // @@protoc_insertion_point(field_release:pb.DataType.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DataType::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.DataType.name)
}

// optional string mapping_name = 3;
bool DataType::has_mapping_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DataType::set_has_mapping_name() {
  _has_bits_[0] |= 0x00000004u;
}
void DataType::clear_has_mapping_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void DataType::clear_mapping_name() {
  mapping_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mapping_name();
}
 const ::std::string& DataType::mapping_name() const {
  // @@protoc_insertion_point(field_get:pb.DataType.mapping_name)
  return mapping_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DataType::set_mapping_name(const ::std::string& value) {
  set_has_mapping_name();
  mapping_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.DataType.mapping_name)
}
 void DataType::set_mapping_name(const char* value) {
  set_has_mapping_name();
  mapping_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.DataType.mapping_name)
}
 void DataType::set_mapping_name(const char* value, size_t size) {
  set_has_mapping_name();
  mapping_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.DataType.mapping_name)
}
 ::std::string* DataType::mutable_mapping_name() {
  set_has_mapping_name();
  // @@protoc_insertion_point(field_mutable:pb.DataType.mapping_name)
  return mapping_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DataType::release_mapping_name() {
  // @@protoc_insertion_point(field_release:pb.DataType.mapping_name)
  clear_has_mapping_name();
  return mapping_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DataType::set_allocated_mapping_name(::std::string* mapping_name) {
  if (mapping_name != NULL) {
    set_has_mapping_name();
  } else {
    clear_has_mapping_name();
  }
  mapping_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mapping_name);
  // @@protoc_insertion_point(field_set_allocated:pb.DataType.mapping_name)
}

// optional string encoding_name = 4;
bool DataType::has_encoding_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DataType::set_has_encoding_name() {
  _has_bits_[0] |= 0x00000008u;
}
void DataType::clear_has_encoding_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void DataType::clear_encoding_name() {
  encoding_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encoding_name();
}
 const ::std::string& DataType::encoding_name() const {
  // @@protoc_insertion_point(field_get:pb.DataType.encoding_name)
  return encoding_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DataType::set_encoding_name(const ::std::string& value) {
  set_has_encoding_name();
  encoding_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.DataType.encoding_name)
}
 void DataType::set_encoding_name(const char* value) {
  set_has_encoding_name();
  encoding_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.DataType.encoding_name)
}
 void DataType::set_encoding_name(const char* value, size_t size) {
  set_has_encoding_name();
  encoding_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.DataType.encoding_name)
}
 ::std::string* DataType::mutable_encoding_name() {
  set_has_encoding_name();
  // @@protoc_insertion_point(field_mutable:pb.DataType.encoding_name)
  return encoding_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DataType::release_encoding_name() {
  // @@protoc_insertion_point(field_release:pb.DataType.encoding_name)
  clear_has_encoding_name();
  return encoding_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DataType::set_allocated_encoding_name(::std::string* encoding_name) {
  if (encoding_name != NULL) {
    set_has_encoding_name();
  } else {
    clear_has_encoding_name();
  }
  encoding_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encoding_name);
  // @@protoc_insertion_point(field_set_allocated:pb.DataType.encoding_name)
}

// optional .pb.__unique_ptr_DataType key_type = 5;
bool DataType::has_key_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DataType::set_has_key_type() {
  _has_bits_[0] |= 0x00000010u;
}
void DataType::clear_has_key_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void DataType::clear_key_type() {
  if (key_type_ != NULL) key_type_->::pb::__unique_ptr_DataType::Clear();
  clear_has_key_type();
}
const ::pb::__unique_ptr_DataType& DataType::key_type() const {
  // @@protoc_insertion_point(field_get:pb.DataType.key_type)
  return key_type_ != NULL ? *key_type_ : *default_instance_->key_type_;
}
::pb::__unique_ptr_DataType* DataType::mutable_key_type() {
  set_has_key_type();
  if (key_type_ == NULL) {
    key_type_ = new ::pb::__unique_ptr_DataType;
  }
  // @@protoc_insertion_point(field_mutable:pb.DataType.key_type)
  return key_type_;
}
::pb::__unique_ptr_DataType* DataType::release_key_type() {
  // @@protoc_insertion_point(field_release:pb.DataType.key_type)
  clear_has_key_type();
  ::pb::__unique_ptr_DataType* temp = key_type_;
  key_type_ = NULL;
  return temp;
}
void DataType::set_allocated_key_type(::pb::__unique_ptr_DataType* key_type) {
  delete key_type_;
  key_type_ = key_type;
  if (key_type) {
    set_has_key_type();
  } else {
    clear_has_key_type();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.DataType.key_type)
}

// optional .pb.__unique_ptr_DataType param_type = 6;
bool DataType::has_param_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DataType::set_has_param_type() {
  _has_bits_[0] |= 0x00000020u;
}
void DataType::clear_has_param_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void DataType::clear_param_type() {
  if (param_type_ != NULL) param_type_->::pb::__unique_ptr_DataType::Clear();
  clear_has_param_type();
}
const ::pb::__unique_ptr_DataType& DataType::param_type() const {
  // @@protoc_insertion_point(field_get:pb.DataType.param_type)
  return param_type_ != NULL ? *param_type_ : *default_instance_->param_type_;
}
::pb::__unique_ptr_DataType* DataType::mutable_param_type() {
  set_has_param_type();
  if (param_type_ == NULL) {
    param_type_ = new ::pb::__unique_ptr_DataType;
  }
  // @@protoc_insertion_point(field_mutable:pb.DataType.param_type)
  return param_type_;
}
::pb::__unique_ptr_DataType* DataType::release_param_type() {
  // @@protoc_insertion_point(field_release:pb.DataType.param_type)
  clear_has_param_type();
  ::pb::__unique_ptr_DataType* temp = param_type_;
  param_type_ = NULL;
  return temp;
}
void DataType::set_allocated_param_type(::pb::__unique_ptr_DataType* param_type) {
  delete param_type_;
  param_type_ = param_type;
  if (param_type) {
    set_has_param_type();
  } else {
    clear_has_param_type();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.DataType.param_type)
}

// optional .pb.Limit low_limit = 7;
bool DataType::has_low_limit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void DataType::set_has_low_limit() {
  _has_bits_[0] |= 0x00000040u;
}
void DataType::clear_has_low_limit() {
  _has_bits_[0] &= ~0x00000040u;
}
void DataType::clear_low_limit() {
  if (low_limit_ != NULL) low_limit_->::pb::Limit::Clear();
  clear_has_low_limit();
}
const ::pb::Limit& DataType::low_limit() const {
  // @@protoc_insertion_point(field_get:pb.DataType.low_limit)
  return low_limit_ != NULL ? *low_limit_ : *default_instance_->low_limit_;
}
::pb::Limit* DataType::mutable_low_limit() {
  set_has_low_limit();
  if (low_limit_ == NULL) {
    low_limit_ = new ::pb::Limit;
  }
  // @@protoc_insertion_point(field_mutable:pb.DataType.low_limit)
  return low_limit_;
}
::pb::Limit* DataType::release_low_limit() {
  // @@protoc_insertion_point(field_release:pb.DataType.low_limit)
  clear_has_low_limit();
  ::pb::Limit* temp = low_limit_;
  low_limit_ = NULL;
  return temp;
}
void DataType::set_allocated_low_limit(::pb::Limit* low_limit) {
  delete low_limit_;
  low_limit_ = low_limit;
  if (low_limit) {
    set_has_low_limit();
  } else {
    clear_has_low_limit();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.DataType.low_limit)
}

// optional .pb.Limit high_limit = 8;
bool DataType::has_high_limit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void DataType::set_has_high_limit() {
  _has_bits_[0] |= 0x00000080u;
}
void DataType::clear_has_high_limit() {
  _has_bits_[0] &= ~0x00000080u;
}
void DataType::clear_high_limit() {
  if (high_limit_ != NULL) high_limit_->::pb::Limit::Clear();
  clear_has_high_limit();
}
const ::pb::Limit& DataType::high_limit() const {
  // @@protoc_insertion_point(field_get:pb.DataType.high_limit)
  return high_limit_ != NULL ? *high_limit_ : *default_instance_->high_limit_;
}
::pb::Limit* DataType::mutable_high_limit() {
  set_has_high_limit();
  if (high_limit_ == NULL) {
    high_limit_ = new ::pb::Limit;
  }
  // @@protoc_insertion_point(field_mutable:pb.DataType.high_limit)
  return high_limit_;
}
::pb::Limit* DataType::release_high_limit() {
  // @@protoc_insertion_point(field_release:pb.DataType.high_limit)
  clear_has_high_limit();
  ::pb::Limit* temp = high_limit_;
  high_limit_ = NULL;
  return temp;
}
void DataType::set_allocated_high_limit(::pb::Limit* high_limit) {
  delete high_limit_;
  high_limit_ = high_limit;
  if (high_limit) {
    set_has_high_limit();
  } else {
    clear_has_high_limit();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.DataType.high_limit)
}

// optional double fixed_precision = 9;
bool DataType::has_fixed_precision() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void DataType::set_has_fixed_precision() {
  _has_bits_[0] |= 0x00000100u;
}
void DataType::clear_has_fixed_precision() {
  _has_bits_[0] &= ~0x00000100u;
}
void DataType::clear_fixed_precision() {
  fixed_precision_ = 0;
  clear_has_fixed_precision();
}
 double DataType::fixed_precision() const {
  // @@protoc_insertion_point(field_get:pb.DataType.fixed_precision)
  return fixed_precision_;
}
 void DataType::set_fixed_precision(double value) {
  set_has_fixed_precision();
  fixed_precision_ = value;
  // @@protoc_insertion_point(field_set:pb.DataType.fixed_precision)
}

// optional uint32 floating_significand_bits = 10;
bool DataType::has_floating_significand_bits() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void DataType::set_has_floating_significand_bits() {
  _has_bits_[0] |= 0x00000200u;
}
void DataType::clear_has_floating_significand_bits() {
  _has_bits_[0] &= ~0x00000200u;
}
void DataType::clear_floating_significand_bits() {
  floating_significand_bits_ = 0u;
  clear_has_floating_significand_bits();
}
 ::google::protobuf::uint32 DataType::floating_significand_bits() const {
  // @@protoc_insertion_point(field_get:pb.DataType.floating_significand_bits)
  return floating_significand_bits_;
}
 void DataType::set_floating_significand_bits(::google::protobuf::uint32 value) {
  set_has_floating_significand_bits();
  floating_significand_bits_ = value;
  // @@protoc_insertion_point(field_set:pb.DataType.floating_significand_bits)
}

// optional uint32 floating_exponent_bits = 11;
bool DataType::has_floating_exponent_bits() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void DataType::set_has_floating_exponent_bits() {
  _has_bits_[0] |= 0x00000400u;
}
void DataType::clear_has_floating_exponent_bits() {
  _has_bits_[0] &= ~0x00000400u;
}
void DataType::clear_floating_exponent_bits() {
  floating_exponent_bits_ = 0u;
  clear_has_floating_exponent_bits();
}
 ::google::protobuf::uint32 DataType::floating_exponent_bits() const {
  // @@protoc_insertion_point(field_get:pb.DataType.floating_exponent_bits)
  return floating_exponent_bits_;
}
 void DataType::set_floating_exponent_bits(::google::protobuf::uint32 value) {
  set_has_floating_exponent_bits();
  floating_exponent_bits_ = value;
  // @@protoc_insertion_point(field_set:pb.DataType.floating_exponent_bits)
}

// optional .pb.CharacterSet character_set = 12;
bool DataType::has_character_set() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void DataType::set_has_character_set() {
  _has_bits_[0] |= 0x00000800u;
}
void DataType::clear_has_character_set() {
  _has_bits_[0] &= ~0x00000800u;
}
void DataType::clear_character_set() {
  if (character_set_ != NULL) character_set_->::pb::CharacterSet::Clear();
  clear_has_character_set();
}
const ::pb::CharacterSet& DataType::character_set() const {
  // @@protoc_insertion_point(field_get:pb.DataType.character_set)
  return character_set_ != NULL ? *character_set_ : *default_instance_->character_set_;
}
::pb::CharacterSet* DataType::mutable_character_set() {
  set_has_character_set();
  if (character_set_ == NULL) {
    character_set_ = new ::pb::CharacterSet;
  }
  // @@protoc_insertion_point(field_mutable:pb.DataType.character_set)
  return character_set_;
}
::pb::CharacterSet* DataType::release_character_set() {
  // @@protoc_insertion_point(field_release:pb.DataType.character_set)
  clear_has_character_set();
  ::pb::CharacterSet* temp = character_set_;
  character_set_ = NULL;
  return temp;
}
void DataType::set_allocated_character_set(::pb::CharacterSet* character_set) {
  delete character_set_;
  character_set_ = character_set;
  if (character_set) {
    set_has_character_set();
  } else {
    clear_has_character_set();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.DataType.character_set)
}

// optional uint32 string_min_size = 13;
bool DataType::has_string_min_size() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void DataType::set_has_string_min_size() {
  _has_bits_[0] |= 0x00001000u;
}
void DataType::clear_has_string_min_size() {
  _has_bits_[0] &= ~0x00001000u;
}
void DataType::clear_string_min_size() {
  string_min_size_ = 0u;
  clear_has_string_min_size();
}
 ::google::protobuf::uint32 DataType::string_min_size() const {
  // @@protoc_insertion_point(field_get:pb.DataType.string_min_size)
  return string_min_size_;
}
 void DataType::set_string_min_size(::google::protobuf::uint32 value) {
  set_has_string_min_size();
  string_min_size_ = value;
  // @@protoc_insertion_point(field_set:pb.DataType.string_min_size)
}

// optional uint32 string_max_size = 14;
bool DataType::has_string_max_size() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void DataType::set_has_string_max_size() {
  _has_bits_[0] |= 0x00002000u;
}
void DataType::clear_has_string_max_size() {
  _has_bits_[0] &= ~0x00002000u;
}
void DataType::clear_string_max_size() {
  string_max_size_ = 0u;
  clear_has_string_max_size();
}
 ::google::protobuf::uint32 DataType::string_max_size() const {
  // @@protoc_insertion_point(field_get:pb.DataType.string_max_size)
  return string_max_size_;
}
 void DataType::set_string_max_size(::google::protobuf::uint32 value) {
  set_has_string_max_size();
  string_max_size_ = value;
  // @@protoc_insertion_point(field_set:pb.DataType.string_max_size)
}

// repeated .pb.map_string_Variant encoding_attrs = 15;
int DataType::encoding_attrs_size() const {
  return encoding_attrs_.size();
}
void DataType::clear_encoding_attrs() {
  encoding_attrs_.Clear();
}
const ::pb::map_string_Variant& DataType::encoding_attrs(int index) const {
  // @@protoc_insertion_point(field_get:pb.DataType.encoding_attrs)
  return encoding_attrs_.Get(index);
}
::pb::map_string_Variant* DataType::mutable_encoding_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:pb.DataType.encoding_attrs)
  return encoding_attrs_.Mutable(index);
}
::pb::map_string_Variant* DataType::add_encoding_attrs() {
  // @@protoc_insertion_point(field_add:pb.DataType.encoding_attrs)
  return encoding_attrs_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::map_string_Variant >*
DataType::mutable_encoding_attrs() {
  // @@protoc_insertion_point(field_mutable_list:pb.DataType.encoding_attrs)
  return &encoding_attrs_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::map_string_Variant >&
DataType::encoding_attrs() const {
  // @@protoc_insertion_point(field_list:pb.DataType.encoding_attrs)
  return encoding_attrs_;
}

// repeated .pb.map_string_Variant mapping_attrs = 16;
int DataType::mapping_attrs_size() const {
  return mapping_attrs_.size();
}
void DataType::clear_mapping_attrs() {
  mapping_attrs_.Clear();
}
const ::pb::map_string_Variant& DataType::mapping_attrs(int index) const {
  // @@protoc_insertion_point(field_get:pb.DataType.mapping_attrs)
  return mapping_attrs_.Get(index);
}
::pb::map_string_Variant* DataType::mutable_mapping_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:pb.DataType.mapping_attrs)
  return mapping_attrs_.Mutable(index);
}
::pb::map_string_Variant* DataType::add_mapping_attrs() {
  // @@protoc_insertion_point(field_add:pb.DataType.mapping_attrs)
  return mapping_attrs_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::map_string_Variant >*
DataType::mutable_mapping_attrs() {
  // @@protoc_insertion_point(field_mutable_list:pb.DataType.mapping_attrs)
  return &mapping_attrs_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::map_string_Variant >&
DataType::mapping_attrs() const {
  // @@protoc_insertion_point(field_list:pb.DataType.mapping_attrs)
  return mapping_attrs_;
}

// repeated .pb.map_string_uint32 enum_values = 17;
int DataType::enum_values_size() const {
  return enum_values_.size();
}
void DataType::clear_enum_values() {
  enum_values_.Clear();
}
const ::pb::map_string_uint32& DataType::enum_values(int index) const {
  // @@protoc_insertion_point(field_get:pb.DataType.enum_values)
  return enum_values_.Get(index);
}
::pb::map_string_uint32* DataType::mutable_enum_values(int index) {
  // @@protoc_insertion_point(field_mutable:pb.DataType.enum_values)
  return enum_values_.Mutable(index);
}
::pb::map_string_uint32* DataType::add_enum_values() {
  // @@protoc_insertion_point(field_add:pb.DataType.enum_values)
  return enum_values_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::map_string_uint32 >*
DataType::mutable_enum_values() {
  // @@protoc_insertion_point(field_mutable_list:pb.DataType.enum_values)
  return &enum_values_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::map_string_uint32 >&
DataType::enum_values() const {
  // @@protoc_insertion_point(field_list:pb.DataType.enum_values)
  return enum_values_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncodingSpecifics::kNameFieldNumber;
const int EncodingSpecifics::kAttrsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncodingSpecifics::EncodingSpecifics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.EncodingSpecifics)
}

void EncodingSpecifics::InitAsDefaultInstance() {
}

EncodingSpecifics::EncodingSpecifics(const EncodingSpecifics& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.EncodingSpecifics)
}

void EncodingSpecifics::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EncodingSpecifics::~EncodingSpecifics() {
  // @@protoc_insertion_point(destructor:pb.EncodingSpecifics)
  SharedDtor();
}

void EncodingSpecifics::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EncodingSpecifics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EncodingSpecifics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EncodingSpecifics_descriptor_;
}

const EncodingSpecifics& EncodingSpecifics::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

EncodingSpecifics* EncodingSpecifics::default_instance_ = NULL;

EncodingSpecifics* EncodingSpecifics::New(::google::protobuf::Arena* arena) const {
  EncodingSpecifics* n = new EncodingSpecifics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EncodingSpecifics::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.EncodingSpecifics)
  if (has_name()) {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  attrs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EncodingSpecifics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.EncodingSpecifics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.EncodingSpecifics.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_attrs;
        break;
      }

      // repeated .pb.map_string_Variant attrs = 2;
      case 2: {
        if (tag == 18) {
         parse_attrs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_attrs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_attrs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_attrs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.EncodingSpecifics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.EncodingSpecifics)
  return false;
#undef DO_
}

void EncodingSpecifics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.EncodingSpecifics)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.EncodingSpecifics.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .pb.map_string_Variant attrs = 2;
  for (unsigned int i = 0, n = this->attrs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->attrs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.EncodingSpecifics)
}

::google::protobuf::uint8* EncodingSpecifics::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.EncodingSpecifics)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.EncodingSpecifics.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .pb.map_string_Variant attrs = 2;
  for (unsigned int i = 0, n = this->attrs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->attrs(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.EncodingSpecifics)
  return target;
}

int EncodingSpecifics::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.EncodingSpecifics)
  int total_size = 0;

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated .pb.map_string_Variant attrs = 2;
  total_size += 1 * this->attrs_size();
  for (int i = 0; i < this->attrs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attrs(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EncodingSpecifics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.EncodingSpecifics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EncodingSpecifics* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EncodingSpecifics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.EncodingSpecifics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.EncodingSpecifics)
    MergeFrom(*source);
  }
}

void EncodingSpecifics::MergeFrom(const EncodingSpecifics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.EncodingSpecifics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  attrs_.MergeFrom(from.attrs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EncodingSpecifics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.EncodingSpecifics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncodingSpecifics::CopyFrom(const EncodingSpecifics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.EncodingSpecifics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncodingSpecifics::IsInitialized() const {

  return true;
}

void EncodingSpecifics::Swap(EncodingSpecifics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncodingSpecifics::InternalSwap(EncodingSpecifics* other) {
  name_.Swap(&other->name_);
  attrs_.UnsafeArenaSwap(&other->attrs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EncodingSpecifics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EncodingSpecifics_descriptor_;
  metadata.reflection = EncodingSpecifics_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EncodingSpecifics

// optional string name = 1;
bool EncodingSpecifics::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EncodingSpecifics::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void EncodingSpecifics::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void EncodingSpecifics::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& EncodingSpecifics::name() const {
  // @@protoc_insertion_point(field_get:pb.EncodingSpecifics.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EncodingSpecifics::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.EncodingSpecifics.name)
}
 void EncodingSpecifics::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.EncodingSpecifics.name)
}
 void EncodingSpecifics::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.EncodingSpecifics.name)
}
 ::std::string* EncodingSpecifics::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pb.EncodingSpecifics.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EncodingSpecifics::release_name() {
  // @@protoc_insertion_point(field_release:pb.EncodingSpecifics.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EncodingSpecifics::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.EncodingSpecifics.name)
}

// repeated .pb.map_string_Variant attrs = 2;
int EncodingSpecifics::attrs_size() const {
  return attrs_.size();
}
void EncodingSpecifics::clear_attrs() {
  attrs_.Clear();
}
const ::pb::map_string_Variant& EncodingSpecifics::attrs(int index) const {
  // @@protoc_insertion_point(field_get:pb.EncodingSpecifics.attrs)
  return attrs_.Get(index);
}
::pb::map_string_Variant* EncodingSpecifics::mutable_attrs(int index) {
  // @@protoc_insertion_point(field_mutable:pb.EncodingSpecifics.attrs)
  return attrs_.Mutable(index);
}
::pb::map_string_Variant* EncodingSpecifics::add_attrs() {
  // @@protoc_insertion_point(field_add:pb.EncodingSpecifics.attrs)
  return attrs_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::map_string_Variant >*
EncodingSpecifics::mutable_attrs() {
  // @@protoc_insertion_point(field_mutable_list:pb.EncodingSpecifics.attrs)
  return &attrs_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::map_string_Variant >&
EncodingSpecifics::attrs() const {
  // @@protoc_insertion_point(field_list:pb.EncodingSpecifics.attrs)
  return attrs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncodedOrMember::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncodedOrMember::EncodedOrMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.EncodedOrMember)
}

void EncodedOrMember::InitAsDefaultInstance() {
  location_ = const_cast< ::pb::Location*>(&::pb::Location::default_instance());
}

EncodedOrMember::EncodedOrMember(const EncodedOrMember& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.EncodedOrMember)
}

void EncodedOrMember::SharedCtor() {
  _cached_size_ = 0;
  location_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EncodedOrMember::~EncodedOrMember() {
  // @@protoc_insertion_point(destructor:pb.EncodedOrMember)
  SharedDtor();
}

void EncodedOrMember::SharedDtor() {
  if (this != default_instance_) {
    delete location_;
  }
}

void EncodedOrMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EncodedOrMember::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EncodedOrMember_descriptor_;
}

const EncodedOrMember& EncodedOrMember::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

EncodedOrMember* EncodedOrMember::default_instance_ = NULL;

EncodedOrMember* EncodedOrMember::New(::google::protobuf::Arena* arena) const {
  EncodedOrMember* n = new EncodedOrMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EncodedOrMember::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.EncodedOrMember)
  if (has_location()) {
    if (location_ != NULL) location_->::pb::Location::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EncodedOrMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.EncodedOrMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.Location location = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.EncodedOrMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.EncodedOrMember)
  return false;
#undef DO_
}

void EncodedOrMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.EncodedOrMember)
  // optional .pb.Location location = 1;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->location_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.EncodedOrMember)
}

::google::protobuf::uint8* EncodedOrMember::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.EncodedOrMember)
  // optional .pb.Location location = 1;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->location_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.EncodedOrMember)
  return target;
}

int EncodedOrMember::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.EncodedOrMember)
  int total_size = 0;

  // optional .pb.Location location = 1;
  if (has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->location_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EncodedOrMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.EncodedOrMember)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EncodedOrMember* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EncodedOrMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.EncodedOrMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.EncodedOrMember)
    MergeFrom(*source);
  }
}

void EncodedOrMember::MergeFrom(const EncodedOrMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.EncodedOrMember)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_location()) {
      mutable_location()->::pb::Location::MergeFrom(from.location());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EncodedOrMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.EncodedOrMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncodedOrMember::CopyFrom(const EncodedOrMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.EncodedOrMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncodedOrMember::IsInitialized() const {

  return true;
}

void EncodedOrMember::Swap(EncodedOrMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncodedOrMember::InternalSwap(EncodedOrMember* other) {
  std::swap(location_, other->location_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EncodedOrMember::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EncodedOrMember_descriptor_;
  metadata.reflection = EncodedOrMember_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EncodedOrMember

// optional .pb.Location location = 1;
bool EncodedOrMember::has_location() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EncodedOrMember::set_has_location() {
  _has_bits_[0] |= 0x00000001u;
}
void EncodedOrMember::clear_has_location() {
  _has_bits_[0] &= ~0x00000001u;
}
void EncodedOrMember::clear_location() {
  if (location_ != NULL) location_->::pb::Location::Clear();
  clear_has_location();
}
const ::pb::Location& EncodedOrMember::location() const {
  // @@protoc_insertion_point(field_get:pb.EncodedOrMember.location)
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
::pb::Location* EncodedOrMember::mutable_location() {
  set_has_location();
  if (location_ == NULL) {
    location_ = new ::pb::Location;
  }
  // @@protoc_insertion_point(field_mutable:pb.EncodedOrMember.location)
  return location_;
}
::pb::Location* EncodedOrMember::release_location() {
  // @@protoc_insertion_point(field_release:pb.EncodedOrMember.location)
  clear_has_location();
  ::pb::Location* temp = location_;
  location_ = NULL;
  return temp;
}
void EncodedOrMember::set_allocated_location(::pb::Location* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.EncodedOrMember.location)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMember::kTypeFieldNumber;
const int DataMember::kNameFieldNumber;
const int DataMember::kExtendToFieldNumber;
const int DataMember::kDefaultValueFieldNumber;
const int DataMember::kWhenDiscriminantFieldNumber;
const int DataMember::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMember::DataMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.DataMember)
}

void DataMember::InitAsDefaultInstance() {
  type_ = const_cast< ::pb::DataType*>(&::pb::DataType::default_instance());
  default_value_ = const_cast< ::pb::Variant*>(&::pb::Variant::default_instance());
  __parent_ = const_cast< ::pb::EncodedOrMember*>(&::pb::EncodedOrMember::default_instance());
}

DataMember::DataMember(const DataMember& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.DataMember)
}

void DataMember::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = NULL;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_to_ = false;
  default_value_ = NULL;
  __parent_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataMember::~DataMember() {
  // @@protoc_insertion_point(destructor:pb.DataMember)
  SharedDtor();
}

void DataMember::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete type_;
    delete default_value_;
    delete __parent_;
  }
}

void DataMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataMember::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataMember_descriptor_;
}

const DataMember& DataMember::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

DataMember* DataMember::default_instance_ = NULL;

DataMember* DataMember::New(::google::protobuf::Arena* arena) const {
  DataMember* n = new DataMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataMember::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.DataMember)
  if (_has_bits_[0 / 32] & 47u) {
    if (has_type()) {
      if (type_ != NULL) type_->::pb::DataType::Clear();
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    extend_to_ = false;
    if (has_default_value()) {
      if (default_value_ != NULL) default_value_->::pb::Variant::Clear();
    }
    if (has___parent()) {
      if (__parent_ != NULL) __parent_->::pb::EncodedOrMember::Clear();
    }
  }
  when_discriminant_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DataMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.DataMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.DataType type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.DataMember.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_extend_to;
        break;
      }

      // optional bool extend_to = 3;
      case 3: {
        if (tag == 24) {
         parse_extend_to:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &extend_to_)));
          set_has_extend_to();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_default_value;
        break;
      }

      // optional .pb.Variant default_value = 4;
      case 4: {
        if (tag == 34) {
         parse_default_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_default_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_when_discriminant;
        break;
      }

      // repeated string when_discriminant = 5;
      case 5: {
        if (tag == 42) {
         parse_when_discriminant:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_when_discriminant()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->when_discriminant(this->when_discriminant_size() - 1).data(),
            this->when_discriminant(this->when_discriminant_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.DataMember.when_discriminant");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_when_discriminant;
        if (input->ExpectTag(50)) goto parse___parent;
        break;
      }

      // optional .pb.EncodedOrMember __parent = 6;
      case 6: {
        if (tag == 50) {
         parse___parent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable___parent()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.DataMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.DataMember)
  return false;
#undef DO_
}

void DataMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.DataMember)
  // optional .pb.DataType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->type_, output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.DataMember.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional bool extend_to = 3;
  if (has_extend_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->extend_to(), output);
  }

  // optional .pb.Variant default_value = 4;
  if (has_default_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->default_value_, output);
  }

  // repeated string when_discriminant = 5;
  for (int i = 0; i < this->when_discriminant_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->when_discriminant(i).data(), this->when_discriminant(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.DataMember.when_discriminant");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->when_discriminant(i), output);
  }

  // optional .pb.EncodedOrMember __parent = 6;
  if (has___parent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->__parent_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.DataMember)
}

::google::protobuf::uint8* DataMember::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.DataMember)
  // optional .pb.DataType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->type_, target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.DataMember.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional bool extend_to = 3;
  if (has_extend_to()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->extend_to(), target);
  }

  // optional .pb.Variant default_value = 4;
  if (has_default_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->default_value_, target);
  }

  // repeated string when_discriminant = 5;
  for (int i = 0; i < this->when_discriminant_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->when_discriminant(i).data(), this->when_discriminant(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.DataMember.when_discriminant");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->when_discriminant(i), target);
  }

  // optional .pb.EncodedOrMember __parent = 6;
  if (has___parent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->__parent_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.DataMember)
  return target;
}

int DataMember::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.DataMember)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 47u) {
    // optional .pb.DataType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->type_);
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bool extend_to = 3;
    if (has_extend_to()) {
      total_size += 1 + 1;
    }

    // optional .pb.Variant default_value = 4;
    if (has_default_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->default_value_);
    }

    // optional .pb.EncodedOrMember __parent = 6;
    if (has___parent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->__parent_);
    }

  }
  // repeated string when_discriminant = 5;
  total_size += 1 * this->when_discriminant_size();
  for (int i = 0; i < this->when_discriminant_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->when_discriminant(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.DataMember)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DataMember* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.DataMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.DataMember)
    MergeFrom(*source);
  }
}

void DataMember::MergeFrom(const DataMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.DataMember)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  when_discriminant_.MergeFrom(from.when_discriminant_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      mutable_type()->::pb::DataType::MergeFrom(from.type());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_extend_to()) {
      set_extend_to(from.extend_to());
    }
    if (from.has_default_value()) {
      mutable_default_value()->::pb::Variant::MergeFrom(from.default_value());
    }
    if (from.has___parent()) {
      mutable___parent()->::pb::EncodedOrMember::MergeFrom(from.__parent());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DataMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.DataMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMember::CopyFrom(const DataMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.DataMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMember::IsInitialized() const {

  return true;
}

void DataMember::Swap(DataMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataMember::InternalSwap(DataMember* other) {
  std::swap(type_, other->type_);
  name_.Swap(&other->name_);
  std::swap(extend_to_, other->extend_to_);
  std::swap(default_value_, other->default_value_);
  when_discriminant_.UnsafeArenaSwap(&other->when_discriminant_);
  std::swap(__parent_, other->__parent_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataMember::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataMember_descriptor_;
  metadata.reflection = DataMember_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataMember

// optional .pb.DataType type = 1;
bool DataMember::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DataMember::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void DataMember::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void DataMember::clear_type() {
  if (type_ != NULL) type_->::pb::DataType::Clear();
  clear_has_type();
}
const ::pb::DataType& DataMember::type() const {
  // @@protoc_insertion_point(field_get:pb.DataMember.type)
  return type_ != NULL ? *type_ : *default_instance_->type_;
}
::pb::DataType* DataMember::mutable_type() {
  set_has_type();
  if (type_ == NULL) {
    type_ = new ::pb::DataType;
  }
  // @@protoc_insertion_point(field_mutable:pb.DataMember.type)
  return type_;
}
::pb::DataType* DataMember::release_type() {
  // @@protoc_insertion_point(field_release:pb.DataMember.type)
  clear_has_type();
  ::pb::DataType* temp = type_;
  type_ = NULL;
  return temp;
}
void DataMember::set_allocated_type(::pb::DataType* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.DataMember.type)
}

// optional string name = 2;
bool DataMember::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DataMember::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void DataMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void DataMember::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& DataMember::name() const {
  // @@protoc_insertion_point(field_get:pb.DataMember.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DataMember::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.DataMember.name)
}
 void DataMember::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.DataMember.name)
}
 void DataMember::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.DataMember.name)
}
 ::std::string* DataMember::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pb.DataMember.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DataMember::release_name() {
  // @@protoc_insertion_point(field_release:pb.DataMember.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DataMember::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.DataMember.name)
}

// optional bool extend_to = 3;
bool DataMember::has_extend_to() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DataMember::set_has_extend_to() {
  _has_bits_[0] |= 0x00000004u;
}
void DataMember::clear_has_extend_to() {
  _has_bits_[0] &= ~0x00000004u;
}
void DataMember::clear_extend_to() {
  extend_to_ = false;
  clear_has_extend_to();
}
 bool DataMember::extend_to() const {
  // @@protoc_insertion_point(field_get:pb.DataMember.extend_to)
  return extend_to_;
}
 void DataMember::set_extend_to(bool value) {
  set_has_extend_to();
  extend_to_ = value;
  // @@protoc_insertion_point(field_set:pb.DataMember.extend_to)
}

// optional .pb.Variant default_value = 4;
bool DataMember::has_default_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DataMember::set_has_default_value() {
  _has_bits_[0] |= 0x00000008u;
}
void DataMember::clear_has_default_value() {
  _has_bits_[0] &= ~0x00000008u;
}
void DataMember::clear_default_value() {
  if (default_value_ != NULL) default_value_->::pb::Variant::Clear();
  clear_has_default_value();
}
const ::pb::Variant& DataMember::default_value() const {
  // @@protoc_insertion_point(field_get:pb.DataMember.default_value)
  return default_value_ != NULL ? *default_value_ : *default_instance_->default_value_;
}
::pb::Variant* DataMember::mutable_default_value() {
  set_has_default_value();
  if (default_value_ == NULL) {
    default_value_ = new ::pb::Variant;
  }
  // @@protoc_insertion_point(field_mutable:pb.DataMember.default_value)
  return default_value_;
}
::pb::Variant* DataMember::release_default_value() {
  // @@protoc_insertion_point(field_release:pb.DataMember.default_value)
  clear_has_default_value();
  ::pb::Variant* temp = default_value_;
  default_value_ = NULL;
  return temp;
}
void DataMember::set_allocated_default_value(::pb::Variant* default_value) {
  delete default_value_;
  default_value_ = default_value;
  if (default_value) {
    set_has_default_value();
  } else {
    clear_has_default_value();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.DataMember.default_value)
}

// repeated string when_discriminant = 5;
int DataMember::when_discriminant_size() const {
  return when_discriminant_.size();
}
void DataMember::clear_when_discriminant() {
  when_discriminant_.Clear();
}
 const ::std::string& DataMember::when_discriminant(int index) const {
  // @@protoc_insertion_point(field_get:pb.DataMember.when_discriminant)
  return when_discriminant_.Get(index);
}
 ::std::string* DataMember::mutable_when_discriminant(int index) {
  // @@protoc_insertion_point(field_mutable:pb.DataMember.when_discriminant)
  return when_discriminant_.Mutable(index);
}
 void DataMember::set_when_discriminant(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pb.DataMember.when_discriminant)
  when_discriminant_.Mutable(index)->assign(value);
}
 void DataMember::set_when_discriminant(int index, const char* value) {
  when_discriminant_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.DataMember.when_discriminant)
}
 void DataMember::set_when_discriminant(int index, const char* value, size_t size) {
  when_discriminant_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.DataMember.when_discriminant)
}
 ::std::string* DataMember::add_when_discriminant() {
  // @@protoc_insertion_point(field_add_mutable:pb.DataMember.when_discriminant)
  return when_discriminant_.Add();
}
 void DataMember::add_when_discriminant(const ::std::string& value) {
  when_discriminant_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pb.DataMember.when_discriminant)
}
 void DataMember::add_when_discriminant(const char* value) {
  when_discriminant_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pb.DataMember.when_discriminant)
}
 void DataMember::add_when_discriminant(const char* value, size_t size) {
  when_discriminant_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pb.DataMember.when_discriminant)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
DataMember::when_discriminant() const {
  // @@protoc_insertion_point(field_list:pb.DataMember.when_discriminant)
  return when_discriminant_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
DataMember::mutable_when_discriminant() {
  // @@protoc_insertion_point(field_mutable_list:pb.DataMember.when_discriminant)
  return &when_discriminant_;
}

// optional .pb.EncodedOrMember __parent = 6;
bool DataMember::has___parent() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DataMember::set_has___parent() {
  _has_bits_[0] |= 0x00000020u;
}
void DataMember::clear_has___parent() {
  _has_bits_[0] &= ~0x00000020u;
}
void DataMember::clear___parent() {
  if (__parent_ != NULL) __parent_->::pb::EncodedOrMember::Clear();
  clear_has___parent();
}
const ::pb::EncodedOrMember& DataMember::__parent() const {
  // @@protoc_insertion_point(field_get:pb.DataMember.__parent)
  return __parent_ != NULL ? *__parent_ : *default_instance_->__parent_;
}
::pb::EncodedOrMember* DataMember::mutable___parent() {
  set_has___parent();
  if (__parent_ == NULL) {
    __parent_ = new ::pb::EncodedOrMember;
  }
  // @@protoc_insertion_point(field_mutable:pb.DataMember.__parent)
  return __parent_;
}
::pb::EncodedOrMember* DataMember::release___parent() {
  // @@protoc_insertion_point(field_release:pb.DataMember.__parent)
  clear_has___parent();
  ::pb::EncodedOrMember* temp = __parent_;
  __parent_ = NULL;
  return temp;
}
void DataMember::set_allocated___parent(::pb::EncodedOrMember* __parent) {
  delete __parent_;
  __parent_ = __parent;
  if (__parent) {
    set_has___parent();
  } else {
    clear_has___parent();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.DataMember.__parent)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncodedMembers::kEncodingSpecificsFieldNumber;
const int EncodedMembers::kMembersFieldNumber;
const int EncodedMembers::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncodedMembers::EncodedMembers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.EncodedMembers)
}

void EncodedMembers::InitAsDefaultInstance() {
  encoding_specifics_ = const_cast< ::pb::EncodingSpecifics*>(&::pb::EncodingSpecifics::default_instance());
  __parent_ = const_cast< ::pb::EncodedOrMember*>(&::pb::EncodedOrMember::default_instance());
}

EncodedMembers::EncodedMembers(const EncodedMembers& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.EncodedMembers)
}

void EncodedMembers::SharedCtor() {
  _cached_size_ = 0;
  encoding_specifics_ = NULL;
  __parent_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EncodedMembers::~EncodedMembers() {
  // @@protoc_insertion_point(destructor:pb.EncodedMembers)
  SharedDtor();
}

void EncodedMembers::SharedDtor() {
  if (this != default_instance_) {
    delete encoding_specifics_;
    delete __parent_;
  }
}

void EncodedMembers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EncodedMembers::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EncodedMembers_descriptor_;
}

const EncodedMembers& EncodedMembers::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

EncodedMembers* EncodedMembers::default_instance_ = NULL;

EncodedMembers* EncodedMembers::New(::google::protobuf::Arena* arena) const {
  EncodedMembers* n = new EncodedMembers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EncodedMembers::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.EncodedMembers)
  if (_has_bits_[0 / 32] & 5u) {
    if (has_encoding_specifics()) {
      if (encoding_specifics_ != NULL) encoding_specifics_->::pb::EncodingSpecifics::Clear();
    }
    if (has___parent()) {
      if (__parent_ != NULL) __parent_->::pb::EncodedOrMember::Clear();
    }
  }
  members_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EncodedMembers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.EncodedMembers)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.EncodingSpecifics encoding_specifics = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_encoding_specifics()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_members;
        break;
      }

      // repeated .pb.__unique_ptr_EncodedOrMember members = 2;
      case 2: {
        if (tag == 18) {
         parse_members:
          DO_(input->IncrementRecursionDepth());
         parse_loop_members:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_members;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse___parent;
        break;
      }

      // optional .pb.EncodedOrMember __parent = 3;
      case 3: {
        if (tag == 26) {
         parse___parent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable___parent()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.EncodedMembers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.EncodedMembers)
  return false;
#undef DO_
}

void EncodedMembers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.EncodedMembers)
  // optional .pb.EncodingSpecifics encoding_specifics = 1;
  if (has_encoding_specifics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->encoding_specifics_, output);
  }

  // repeated .pb.__unique_ptr_EncodedOrMember members = 2;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->members(i), output);
  }

  // optional .pb.EncodedOrMember __parent = 3;
  if (has___parent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->__parent_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.EncodedMembers)
}

::google::protobuf::uint8* EncodedMembers::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.EncodedMembers)
  // optional .pb.EncodingSpecifics encoding_specifics = 1;
  if (has_encoding_specifics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->encoding_specifics_, target);
  }

  // repeated .pb.__unique_ptr_EncodedOrMember members = 2;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->members(i), target);
  }

  // optional .pb.EncodedOrMember __parent = 3;
  if (has___parent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->__parent_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.EncodedMembers)
  return target;
}

int EncodedMembers::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.EncodedMembers)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 5u) {
    // optional .pb.EncodingSpecifics encoding_specifics = 1;
    if (has_encoding_specifics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->encoding_specifics_);
    }

    // optional .pb.EncodedOrMember __parent = 3;
    if (has___parent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->__parent_);
    }

  }
  // repeated .pb.__unique_ptr_EncodedOrMember members = 2;
  total_size += 1 * this->members_size();
  for (int i = 0; i < this->members_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->members(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EncodedMembers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.EncodedMembers)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EncodedMembers* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EncodedMembers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.EncodedMembers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.EncodedMembers)
    MergeFrom(*source);
  }
}

void EncodedMembers::MergeFrom(const EncodedMembers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.EncodedMembers)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  members_.MergeFrom(from.members_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_encoding_specifics()) {
      mutable_encoding_specifics()->::pb::EncodingSpecifics::MergeFrom(from.encoding_specifics());
    }
    if (from.has___parent()) {
      mutable___parent()->::pb::EncodedOrMember::MergeFrom(from.__parent());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EncodedMembers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.EncodedMembers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncodedMembers::CopyFrom(const EncodedMembers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.EncodedMembers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncodedMembers::IsInitialized() const {

  return true;
}

void EncodedMembers::Swap(EncodedMembers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncodedMembers::InternalSwap(EncodedMembers* other) {
  std::swap(encoding_specifics_, other->encoding_specifics_);
  members_.UnsafeArenaSwap(&other->members_);
  std::swap(__parent_, other->__parent_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EncodedMembers::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EncodedMembers_descriptor_;
  metadata.reflection = EncodedMembers_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EncodedMembers

// optional .pb.EncodingSpecifics encoding_specifics = 1;
bool EncodedMembers::has_encoding_specifics() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EncodedMembers::set_has_encoding_specifics() {
  _has_bits_[0] |= 0x00000001u;
}
void EncodedMembers::clear_has_encoding_specifics() {
  _has_bits_[0] &= ~0x00000001u;
}
void EncodedMembers::clear_encoding_specifics() {
  if (encoding_specifics_ != NULL) encoding_specifics_->::pb::EncodingSpecifics::Clear();
  clear_has_encoding_specifics();
}
const ::pb::EncodingSpecifics& EncodedMembers::encoding_specifics() const {
  // @@protoc_insertion_point(field_get:pb.EncodedMembers.encoding_specifics)
  return encoding_specifics_ != NULL ? *encoding_specifics_ : *default_instance_->encoding_specifics_;
}
::pb::EncodingSpecifics* EncodedMembers::mutable_encoding_specifics() {
  set_has_encoding_specifics();
  if (encoding_specifics_ == NULL) {
    encoding_specifics_ = new ::pb::EncodingSpecifics;
  }
  // @@protoc_insertion_point(field_mutable:pb.EncodedMembers.encoding_specifics)
  return encoding_specifics_;
}
::pb::EncodingSpecifics* EncodedMembers::release_encoding_specifics() {
  // @@protoc_insertion_point(field_release:pb.EncodedMembers.encoding_specifics)
  clear_has_encoding_specifics();
  ::pb::EncodingSpecifics* temp = encoding_specifics_;
  encoding_specifics_ = NULL;
  return temp;
}
void EncodedMembers::set_allocated_encoding_specifics(::pb::EncodingSpecifics* encoding_specifics) {
  delete encoding_specifics_;
  encoding_specifics_ = encoding_specifics;
  if (encoding_specifics) {
    set_has_encoding_specifics();
  } else {
    clear_has_encoding_specifics();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.EncodedMembers.encoding_specifics)
}

// repeated .pb.__unique_ptr_EncodedOrMember members = 2;
int EncodedMembers::members_size() const {
  return members_.size();
}
void EncodedMembers::clear_members() {
  members_.Clear();
}
const ::pb::__unique_ptr_EncodedOrMember& EncodedMembers::members(int index) const {
  // @@protoc_insertion_point(field_get:pb.EncodedMembers.members)
  return members_.Get(index);
}
::pb::__unique_ptr_EncodedOrMember* EncodedMembers::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:pb.EncodedMembers.members)
  return members_.Mutable(index);
}
::pb::__unique_ptr_EncodedOrMember* EncodedMembers::add_members() {
  // @@protoc_insertion_point(field_add:pb.EncodedMembers.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::__unique_ptr_EncodedOrMember >*
EncodedMembers::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:pb.EncodedMembers.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::__unique_ptr_EncodedOrMember >&
EncodedMembers::members() const {
  // @@protoc_insertion_point(field_list:pb.EncodedMembers.members)
  return members_;
}

// optional .pb.EncodedOrMember __parent = 3;
bool EncodedMembers::has___parent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void EncodedMembers::set_has___parent() {
  _has_bits_[0] |= 0x00000004u;
}
void EncodedMembers::clear_has___parent() {
  _has_bits_[0] &= ~0x00000004u;
}
void EncodedMembers::clear___parent() {
  if (__parent_ != NULL) __parent_->::pb::EncodedOrMember::Clear();
  clear_has___parent();
}
const ::pb::EncodedOrMember& EncodedMembers::__parent() const {
  // @@protoc_insertion_point(field_get:pb.EncodedMembers.__parent)
  return __parent_ != NULL ? *__parent_ : *default_instance_->__parent_;
}
::pb::EncodedOrMember* EncodedMembers::mutable___parent() {
  set_has___parent();
  if (__parent_ == NULL) {
    __parent_ = new ::pb::EncodedOrMember;
  }
  // @@protoc_insertion_point(field_mutable:pb.EncodedMembers.__parent)
  return __parent_;
}
::pb::EncodedOrMember* EncodedMembers::release___parent() {
  // @@protoc_insertion_point(field_release:pb.EncodedMembers.__parent)
  clear_has___parent();
  ::pb::EncodedOrMember* temp = __parent_;
  __parent_ = NULL;
  return temp;
}
void EncodedMembers::set_allocated___parent(::pb::EncodedOrMember* __parent) {
  delete __parent_;
  __parent_ = __parent;
  if (__parent) {
    set_has___parent();
  } else {
    clear_has___parent();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.EncodedMembers.__parent)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Structure::kDeclTypeFieldNumber;
const int Structure::kTypeFieldNumber;
const int Structure::kNameFieldNumber;
const int Structure::kDiscriminantFieldNumber;
const int Structure::kInheritedFromFieldNumber;
const int Structure::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Structure::Structure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Structure)
}

void Structure::InitAsDefaultInstance() {
  __parent_ = const_cast< ::pb::EncodedMembers*>(&::pb::EncodedMembers::default_instance());
}

Structure::Structure(const Structure& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.Structure)
}

void Structure::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  decl_type_ = 0u;
  type_ = 0u;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  discriminant_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inherited_from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  __parent_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Structure::~Structure() {
  // @@protoc_insertion_point(destructor:pb.Structure)
  SharedDtor();
}

void Structure::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  discriminant_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inherited_from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete __parent_;
  }
}

void Structure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Structure::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Structure_descriptor_;
}

const Structure& Structure::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

Structure* Structure::default_instance_ = NULL;

Structure* Structure::New(::google::protobuf::Arena* arena) const {
  Structure* n = new Structure;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Structure::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Structure)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Structure, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Structure*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(decl_type_, type_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_discriminant()) {
      discriminant_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_inherited_from()) {
      inherited_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has___parent()) {
      if (__parent_ != NULL) __parent_->::pb::EncodedMembers::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Structure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Structure)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 decl_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &decl_type_)));
          set_has_decl_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional uint32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.Structure.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_discriminant;
        break;
      }

      // optional string discriminant = 4;
      case 4: {
        if (tag == 34) {
         parse_discriminant:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_discriminant()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->discriminant().data(), this->discriminant().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.Structure.discriminant");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_inherited_from;
        break;
      }

      // optional string inherited_from = 5;
      case 5: {
        if (tag == 42) {
         parse_inherited_from:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inherited_from()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->inherited_from().data(), this->inherited_from().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.Structure.inherited_from");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse___parent;
        break;
      }

      // optional .pb.EncodedMembers __parent = 6;
      case 6: {
        if (tag == 50) {
         parse___parent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable___parent()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Structure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Structure)
  return false;
#undef DO_
}

void Structure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Structure)
  // optional uint32 decl_type = 1;
  if (has_decl_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->decl_type(), output);
  }

  // optional uint32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Structure.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string discriminant = 4;
  if (has_discriminant()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->discriminant().data(), this->discriminant().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Structure.discriminant");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->discriminant(), output);
  }

  // optional string inherited_from = 5;
  if (has_inherited_from()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inherited_from().data(), this->inherited_from().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Structure.inherited_from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->inherited_from(), output);
  }

  // optional .pb.EncodedMembers __parent = 6;
  if (has___parent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->__parent_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Structure)
}

::google::protobuf::uint8* Structure::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.Structure)
  // optional uint32 decl_type = 1;
  if (has_decl_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->decl_type(), target);
  }

  // optional uint32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Structure.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string discriminant = 4;
  if (has_discriminant()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->discriminant().data(), this->discriminant().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Structure.discriminant");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->discriminant(), target);
  }

  // optional string inherited_from = 5;
  if (has_inherited_from()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inherited_from().data(), this->inherited_from().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Structure.inherited_from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->inherited_from(), target);
  }

  // optional .pb.EncodedMembers __parent = 6;
  if (has___parent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->__parent_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Structure)
  return target;
}

int Structure::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Structure)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 decl_type = 1;
    if (has_decl_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->decl_type());
    }

    // optional uint32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string discriminant = 4;
    if (has_discriminant()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->discriminant());
    }

    // optional string inherited_from = 5;
    if (has_inherited_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inherited_from());
    }

    // optional .pb.EncodedMembers __parent = 6;
    if (has___parent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->__parent_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Structure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Structure)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Structure* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Structure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Structure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Structure)
    MergeFrom(*source);
  }
}

void Structure::MergeFrom(const Structure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Structure)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_decl_type()) {
      set_decl_type(from.decl_type());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_discriminant()) {
      set_has_discriminant();
      discriminant_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.discriminant_);
    }
    if (from.has_inherited_from()) {
      set_has_inherited_from();
      inherited_from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inherited_from_);
    }
    if (from.has___parent()) {
      mutable___parent()->::pb::EncodedMembers::MergeFrom(from.__parent());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Structure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Structure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Structure::CopyFrom(const Structure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Structure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Structure::IsInitialized() const {

  return true;
}

void Structure::Swap(Structure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Structure::InternalSwap(Structure* other) {
  std::swap(decl_type_, other->decl_type_);
  std::swap(type_, other->type_);
  name_.Swap(&other->name_);
  discriminant_.Swap(&other->discriminant_);
  inherited_from_.Swap(&other->inherited_from_);
  std::swap(__parent_, other->__parent_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Structure::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Structure_descriptor_;
  metadata.reflection = Structure_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Structure

// optional uint32 decl_type = 1;
bool Structure::has_decl_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Structure::set_has_decl_type() {
  _has_bits_[0] |= 0x00000001u;
}
void Structure::clear_has_decl_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void Structure::clear_decl_type() {
  decl_type_ = 0u;
  clear_has_decl_type();
}
 ::google::protobuf::uint32 Structure::decl_type() const {
  // @@protoc_insertion_point(field_get:pb.Structure.decl_type)
  return decl_type_;
}
 void Structure::set_decl_type(::google::protobuf::uint32 value) {
  set_has_decl_type();
  decl_type_ = value;
  // @@protoc_insertion_point(field_set:pb.Structure.decl_type)
}

// optional uint32 type = 2;
bool Structure::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Structure::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void Structure::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void Structure::clear_type() {
  type_ = 0u;
  clear_has_type();
}
 ::google::protobuf::uint32 Structure::type() const {
  // @@protoc_insertion_point(field_get:pb.Structure.type)
  return type_;
}
 void Structure::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:pb.Structure.type)
}

// optional string name = 3;
bool Structure::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Structure::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
void Structure::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void Structure::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Structure::name() const {
  // @@protoc_insertion_point(field_get:pb.Structure.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Structure::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Structure.name)
}
 void Structure::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Structure.name)
}
 void Structure::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Structure.name)
}
 ::std::string* Structure::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pb.Structure.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Structure::release_name() {
  // @@protoc_insertion_point(field_release:pb.Structure.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Structure::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.Structure.name)
}

// optional string discriminant = 4;
bool Structure::has_discriminant() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Structure::set_has_discriminant() {
  _has_bits_[0] |= 0x00000008u;
}
void Structure::clear_has_discriminant() {
  _has_bits_[0] &= ~0x00000008u;
}
void Structure::clear_discriminant() {
  discriminant_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_discriminant();
}
 const ::std::string& Structure::discriminant() const {
  // @@protoc_insertion_point(field_get:pb.Structure.discriminant)
  return discriminant_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Structure::set_discriminant(const ::std::string& value) {
  set_has_discriminant();
  discriminant_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Structure.discriminant)
}
 void Structure::set_discriminant(const char* value) {
  set_has_discriminant();
  discriminant_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Structure.discriminant)
}
 void Structure::set_discriminant(const char* value, size_t size) {
  set_has_discriminant();
  discriminant_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Structure.discriminant)
}
 ::std::string* Structure::mutable_discriminant() {
  set_has_discriminant();
  // @@protoc_insertion_point(field_mutable:pb.Structure.discriminant)
  return discriminant_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Structure::release_discriminant() {
  // @@protoc_insertion_point(field_release:pb.Structure.discriminant)
  clear_has_discriminant();
  return discriminant_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Structure::set_allocated_discriminant(::std::string* discriminant) {
  if (discriminant != NULL) {
    set_has_discriminant();
  } else {
    clear_has_discriminant();
  }
  discriminant_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), discriminant);
  // @@protoc_insertion_point(field_set_allocated:pb.Structure.discriminant)
}

// optional string inherited_from = 5;
bool Structure::has_inherited_from() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Structure::set_has_inherited_from() {
  _has_bits_[0] |= 0x00000010u;
}
void Structure::clear_has_inherited_from() {
  _has_bits_[0] &= ~0x00000010u;
}
void Structure::clear_inherited_from() {
  inherited_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_inherited_from();
}
 const ::std::string& Structure::inherited_from() const {
  // @@protoc_insertion_point(field_get:pb.Structure.inherited_from)
  return inherited_from_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Structure::set_inherited_from(const ::std::string& value) {
  set_has_inherited_from();
  inherited_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Structure.inherited_from)
}
 void Structure::set_inherited_from(const char* value) {
  set_has_inherited_from();
  inherited_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Structure.inherited_from)
}
 void Structure::set_inherited_from(const char* value, size_t size) {
  set_has_inherited_from();
  inherited_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Structure.inherited_from)
}
 ::std::string* Structure::mutable_inherited_from() {
  set_has_inherited_from();
  // @@protoc_insertion_point(field_mutable:pb.Structure.inherited_from)
  return inherited_from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Structure::release_inherited_from() {
  // @@protoc_insertion_point(field_release:pb.Structure.inherited_from)
  clear_has_inherited_from();
  return inherited_from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Structure::set_allocated_inherited_from(::std::string* inherited_from) {
  if (inherited_from != NULL) {
    set_has_inherited_from();
  } else {
    clear_has_inherited_from();
  }
  inherited_from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inherited_from);
  // @@protoc_insertion_point(field_set_allocated:pb.Structure.inherited_from)
}

// optional .pb.EncodedMembers __parent = 6;
bool Structure::has___parent() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Structure::set_has___parent() {
  _has_bits_[0] |= 0x00000020u;
}
void Structure::clear_has___parent() {
  _has_bits_[0] &= ~0x00000020u;
}
void Structure::clear___parent() {
  if (__parent_ != NULL) __parent_->::pb::EncodedMembers::Clear();
  clear_has___parent();
}
const ::pb::EncodedMembers& Structure::__parent() const {
  // @@protoc_insertion_point(field_get:pb.Structure.__parent)
  return __parent_ != NULL ? *__parent_ : *default_instance_->__parent_;
}
::pb::EncodedMembers* Structure::mutable___parent() {
  set_has___parent();
  if (__parent_ == NULL) {
    __parent_ = new ::pb::EncodedMembers;
  }
  // @@protoc_insertion_point(field_mutable:pb.Structure.__parent)
  return __parent_;
}
::pb::EncodedMembers* Structure::release___parent() {
  // @@protoc_insertion_point(field_release:pb.Structure.__parent)
  clear_has___parent();
  ::pb::EncodedMembers* temp = __parent_;
  __parent_ = NULL;
  return temp;
}
void Structure::set_allocated___parent(::pb::EncodedMembers* __parent) {
  delete __parent_;
  __parent_ = __parent;
  if (__parent) {
    set_has___parent();
  } else {
    clear_has___parent();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.Structure.__parent)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Typedef::kLocationFieldNumber;
const int Typedef::kTypeFieldNumber;
const int Typedef::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Typedef::Typedef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Typedef)
}

void Typedef::InitAsDefaultInstance() {
  location_ = const_cast< ::pb::Location*>(&::pb::Location::default_instance());
  type_ = const_cast< ::pb::DataType*>(&::pb::DataType::default_instance());
}

Typedef::Typedef(const Typedef& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.Typedef)
}

void Typedef::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  location_ = NULL;
  type_ = NULL;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Typedef::~Typedef() {
  // @@protoc_insertion_point(destructor:pb.Typedef)
  SharedDtor();
}

void Typedef::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete location_;
    delete type_;
  }
}

void Typedef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Typedef::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Typedef_descriptor_;
}

const Typedef& Typedef::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

Typedef* Typedef::default_instance_ = NULL;

Typedef* Typedef::New(::google::protobuf::Arena* arena) const {
  Typedef* n = new Typedef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Typedef::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Typedef)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_location()) {
      if (location_ != NULL) location_->::pb::Location::Clear();
    }
    if (has_type()) {
      if (type_ != NULL) type_->::pb::DataType::Clear();
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Typedef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Typedef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.Location location = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // optional .pb.DataType type = 2;
      case 2: {
        if (tag == 18) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.Typedef.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Typedef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Typedef)
  return false;
#undef DO_
}

void Typedef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Typedef)
  // optional .pb.Location location = 1;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->location_, output);
  }

  // optional .pb.DataType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->type_, output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Typedef.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Typedef)
}

::google::protobuf::uint8* Typedef::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.Typedef)
  // optional .pb.Location location = 1;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->location_, target);
  }

  // optional .pb.DataType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->type_, target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.Typedef.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Typedef)
  return target;
}

int Typedef::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Typedef)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional .pb.Location location = 1;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->location_);
    }

    // optional .pb.DataType type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->type_);
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Typedef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Typedef)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Typedef* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Typedef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Typedef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Typedef)
    MergeFrom(*source);
  }
}

void Typedef::MergeFrom(const Typedef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Typedef)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_location()) {
      mutable_location()->::pb::Location::MergeFrom(from.location());
    }
    if (from.has_type()) {
      mutable_type()->::pb::DataType::MergeFrom(from.type());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Typedef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Typedef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Typedef::CopyFrom(const Typedef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Typedef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Typedef::IsInitialized() const {

  return true;
}

void Typedef::Swap(Typedef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Typedef::InternalSwap(Typedef* other) {
  std::swap(location_, other->location_);
  std::swap(type_, other->type_);
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Typedef::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Typedef_descriptor_;
  metadata.reflection = Typedef_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Typedef

// optional .pb.Location location = 1;
bool Typedef::has_location() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Typedef::set_has_location() {
  _has_bits_[0] |= 0x00000001u;
}
void Typedef::clear_has_location() {
  _has_bits_[0] &= ~0x00000001u;
}
void Typedef::clear_location() {
  if (location_ != NULL) location_->::pb::Location::Clear();
  clear_has_location();
}
const ::pb::Location& Typedef::location() const {
  // @@protoc_insertion_point(field_get:pb.Typedef.location)
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
::pb::Location* Typedef::mutable_location() {
  set_has_location();
  if (location_ == NULL) {
    location_ = new ::pb::Location;
  }
  // @@protoc_insertion_point(field_mutable:pb.Typedef.location)
  return location_;
}
::pb::Location* Typedef::release_location() {
  // @@protoc_insertion_point(field_release:pb.Typedef.location)
  clear_has_location();
  ::pb::Location* temp = location_;
  location_ = NULL;
  return temp;
}
void Typedef::set_allocated_location(::pb::Location* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.Typedef.location)
}

// optional .pb.DataType type = 2;
bool Typedef::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Typedef::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void Typedef::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void Typedef::clear_type() {
  if (type_ != NULL) type_->::pb::DataType::Clear();
  clear_has_type();
}
const ::pb::DataType& Typedef::type() const {
  // @@protoc_insertion_point(field_get:pb.Typedef.type)
  return type_ != NULL ? *type_ : *default_instance_->type_;
}
::pb::DataType* Typedef::mutable_type() {
  set_has_type();
  if (type_ == NULL) {
    type_ = new ::pb::DataType;
  }
  // @@protoc_insertion_point(field_mutable:pb.Typedef.type)
  return type_;
}
::pb::DataType* Typedef::release_type() {
  // @@protoc_insertion_point(field_release:pb.Typedef.type)
  clear_has_type();
  ::pb::DataType* temp = type_;
  type_ = NULL;
  return temp;
}
void Typedef::set_allocated_type(::pb::DataType* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.Typedef.type)
}

// optional string name = 3;
bool Typedef::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Typedef::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
void Typedef::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void Typedef::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Typedef::name() const {
  // @@protoc_insertion_point(field_get:pb.Typedef.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Typedef::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Typedef.name)
}
 void Typedef::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Typedef.name)
}
 void Typedef::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Typedef.name)
}
 ::std::string* Typedef::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pb.Typedef.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Typedef::release_name() {
  // @@protoc_insertion_point(field_release:pb.Typedef.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Typedef::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.Typedef.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Root::kTypedefsFieldNumber;
const int Root::kStructuresFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Root::Root()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Root)
}

void Root::InitAsDefaultInstance() {
}

Root::Root(const Root& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.Root)
}

void Root::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Root::~Root() {
  // @@protoc_insertion_point(destructor:pb.Root)
  SharedDtor();
}

void Root::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Root::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Root::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Root_descriptor_;
}

const Root& Root::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

Root* Root::default_instance_ = NULL;

Root* Root::New(::google::protobuf::Arena* arena) const {
  Root* n = new Root;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Root::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Root)
  typedefs_.Clear();
  structures_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Root::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Root)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.Typedef typedefs = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_typedefs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_typedefs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_typedefs;
        if (input->ExpectTag(18)) goto parse_loop_structures;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .pb.__unique_ptr_Structure structures = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_structures:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_structures()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_structures;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Root)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Root)
  return false;
#undef DO_
}

void Root::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Root)
  // repeated .pb.Typedef typedefs = 1;
  for (unsigned int i = 0, n = this->typedefs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->typedefs(i), output);
  }

  // repeated .pb.__unique_ptr_Structure structures = 2;
  for (unsigned int i = 0, n = this->structures_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->structures(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Root)
}

::google::protobuf::uint8* Root::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.Root)
  // repeated .pb.Typedef typedefs = 1;
  for (unsigned int i = 0, n = this->typedefs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->typedefs(i), target);
  }

  // repeated .pb.__unique_ptr_Structure structures = 2;
  for (unsigned int i = 0, n = this->structures_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->structures(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Root)
  return target;
}

int Root::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Root)
  int total_size = 0;

  // repeated .pb.Typedef typedefs = 1;
  total_size += 1 * this->typedefs_size();
  for (int i = 0; i < this->typedefs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->typedefs(i));
  }

  // repeated .pb.__unique_ptr_Structure structures = 2;
  total_size += 1 * this->structures_size();
  for (int i = 0; i < this->structures_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->structures(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Root::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Root)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Root* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Root>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Root)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Root)
    MergeFrom(*source);
  }
}

void Root::MergeFrom(const Root& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Root)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  typedefs_.MergeFrom(from.typedefs_);
  structures_.MergeFrom(from.structures_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Root::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Root)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Root::CopyFrom(const Root& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Root)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Root::IsInitialized() const {

  return true;
}

void Root::Swap(Root* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Root::InternalSwap(Root* other) {
  typedefs_.UnsafeArenaSwap(&other->typedefs_);
  structures_.UnsafeArenaSwap(&other->structures_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Root::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Root_descriptor_;
  metadata.reflection = Root_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Root

// repeated .pb.Typedef typedefs = 1;
int Root::typedefs_size() const {
  return typedefs_.size();
}
void Root::clear_typedefs() {
  typedefs_.Clear();
}
const ::pb::Typedef& Root::typedefs(int index) const {
  // @@protoc_insertion_point(field_get:pb.Root.typedefs)
  return typedefs_.Get(index);
}
::pb::Typedef* Root::mutable_typedefs(int index) {
  // @@protoc_insertion_point(field_mutable:pb.Root.typedefs)
  return typedefs_.Mutable(index);
}
::pb::Typedef* Root::add_typedefs() {
  // @@protoc_insertion_point(field_add:pb.Root.typedefs)
  return typedefs_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::Typedef >*
Root::mutable_typedefs() {
  // @@protoc_insertion_point(field_mutable_list:pb.Root.typedefs)
  return &typedefs_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::Typedef >&
Root::typedefs() const {
  // @@protoc_insertion_point(field_list:pb.Root.typedefs)
  return typedefs_;
}

// repeated .pb.__unique_ptr_Structure structures = 2;
int Root::structures_size() const {
  return structures_.size();
}
void Root::clear_structures() {
  structures_.Clear();
}
const ::pb::__unique_ptr_Structure& Root::structures(int index) const {
  // @@protoc_insertion_point(field_get:pb.Root.structures)
  return structures_.Get(index);
}
::pb::__unique_ptr_Structure* Root::mutable_structures(int index) {
  // @@protoc_insertion_point(field_mutable:pb.Root.structures)
  return structures_.Mutable(index);
}
::pb::__unique_ptr_Structure* Root::add_structures() {
  // @@protoc_insertion_point(field_add:pb.Root.structures)
  return structures_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::__unique_ptr_Structure >*
Root::mutable_structures() {
  // @@protoc_insertion_point(field_mutable_list:pb.Root.structures)
  return &structures_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::__unique_ptr_Structure >&
Root::structures() const {
  // @@protoc_insertion_point(field_list:pb.Root.structures)
  return structures_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int __unique_ptr_DataType::kDuDataTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

__unique_ptr_DataType::__unique_ptr_DataType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.__unique_ptr_DataType)
}

void __unique_ptr_DataType::InitAsDefaultInstance() {
  du_data_type_ = const_cast< ::pb::DataType*>(&::pb::DataType::default_instance());
}

__unique_ptr_DataType::__unique_ptr_DataType(const __unique_ptr_DataType& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.__unique_ptr_DataType)
}

void __unique_ptr_DataType::SharedCtor() {
  _cached_size_ = 0;
  du_data_type_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

__unique_ptr_DataType::~__unique_ptr_DataType() {
  // @@protoc_insertion_point(destructor:pb.__unique_ptr_DataType)
  SharedDtor();
}

void __unique_ptr_DataType::SharedDtor() {
  if (this != default_instance_) {
    delete du_data_type_;
  }
}

void __unique_ptr_DataType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* __unique_ptr_DataType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return __unique_ptr_DataType_descriptor_;
}

const __unique_ptr_DataType& __unique_ptr_DataType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

__unique_ptr_DataType* __unique_ptr_DataType::default_instance_ = NULL;

__unique_ptr_DataType* __unique_ptr_DataType::New(::google::protobuf::Arena* arena) const {
  __unique_ptr_DataType* n = new __unique_ptr_DataType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void __unique_ptr_DataType::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.__unique_ptr_DataType)
  if (has_du_data_type()) {
    if (du_data_type_ != NULL) du_data_type_->::pb::DataType::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool __unique_ptr_DataType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.__unique_ptr_DataType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.DataType du_data_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_du_data_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.__unique_ptr_DataType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.__unique_ptr_DataType)
  return false;
#undef DO_
}

void __unique_ptr_DataType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.__unique_ptr_DataType)
  // optional .pb.DataType du_data_type = 1;
  if (has_du_data_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->du_data_type_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.__unique_ptr_DataType)
}

::google::protobuf::uint8* __unique_ptr_DataType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.__unique_ptr_DataType)
  // optional .pb.DataType du_data_type = 1;
  if (has_du_data_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->du_data_type_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.__unique_ptr_DataType)
  return target;
}

int __unique_ptr_DataType::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.__unique_ptr_DataType)
  int total_size = 0;

  // optional .pb.DataType du_data_type = 1;
  if (has_du_data_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->du_data_type_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void __unique_ptr_DataType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.__unique_ptr_DataType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const __unique_ptr_DataType* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const __unique_ptr_DataType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.__unique_ptr_DataType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.__unique_ptr_DataType)
    MergeFrom(*source);
  }
}

void __unique_ptr_DataType::MergeFrom(const __unique_ptr_DataType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.__unique_ptr_DataType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_du_data_type()) {
      mutable_du_data_type()->::pb::DataType::MergeFrom(from.du_data_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void __unique_ptr_DataType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.__unique_ptr_DataType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void __unique_ptr_DataType::CopyFrom(const __unique_ptr_DataType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.__unique_ptr_DataType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool __unique_ptr_DataType::IsInitialized() const {

  return true;
}

void __unique_ptr_DataType::Swap(__unique_ptr_DataType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void __unique_ptr_DataType::InternalSwap(__unique_ptr_DataType* other) {
  std::swap(du_data_type_, other->du_data_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata __unique_ptr_DataType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = __unique_ptr_DataType_descriptor_;
  metadata.reflection = __unique_ptr_DataType_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// __unique_ptr_DataType

// optional .pb.DataType du_data_type = 1;
bool __unique_ptr_DataType::has_du_data_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void __unique_ptr_DataType::set_has_du_data_type() {
  _has_bits_[0] |= 0x00000001u;
}
void __unique_ptr_DataType::clear_has_du_data_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void __unique_ptr_DataType::clear_du_data_type() {
  if (du_data_type_ != NULL) du_data_type_->::pb::DataType::Clear();
  clear_has_du_data_type();
}
const ::pb::DataType& __unique_ptr_DataType::du_data_type() const {
  // @@protoc_insertion_point(field_get:pb.__unique_ptr_DataType.du_data_type)
  return du_data_type_ != NULL ? *du_data_type_ : *default_instance_->du_data_type_;
}
::pb::DataType* __unique_ptr_DataType::mutable_du_data_type() {
  set_has_du_data_type();
  if (du_data_type_ == NULL) {
    du_data_type_ = new ::pb::DataType;
  }
  // @@protoc_insertion_point(field_mutable:pb.__unique_ptr_DataType.du_data_type)
  return du_data_type_;
}
::pb::DataType* __unique_ptr_DataType::release_du_data_type() {
  // @@protoc_insertion_point(field_release:pb.__unique_ptr_DataType.du_data_type)
  clear_has_du_data_type();
  ::pb::DataType* temp = du_data_type_;
  du_data_type_ = NULL;
  return temp;
}
void __unique_ptr_DataType::set_allocated_du_data_type(::pb::DataType* du_data_type) {
  delete du_data_type_;
  du_data_type_ = du_data_type;
  if (du_data_type) {
    set_has_du_data_type();
  } else {
    clear_has_du_data_type();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.__unique_ptr_DataType.du_data_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int __unique_ptr_EncodedOrMember::kDuDataMemberFieldNumber;
const int __unique_ptr_EncodedOrMember::kDuEncodedMembersFieldNumber;
const int __unique_ptr_EncodedOrMember::kDuEncodedOrMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

__unique_ptr_EncodedOrMember::__unique_ptr_EncodedOrMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.__unique_ptr_EncodedOrMember)
}

void __unique_ptr_EncodedOrMember::InitAsDefaultInstance() {
  du_data_member_ = const_cast< ::pb::DataMember*>(&::pb::DataMember::default_instance());
  du_encoded_members_ = const_cast< ::pb::EncodedMembers*>(&::pb::EncodedMembers::default_instance());
  du_encoded_or_member_ = const_cast< ::pb::EncodedOrMember*>(&::pb::EncodedOrMember::default_instance());
}

__unique_ptr_EncodedOrMember::__unique_ptr_EncodedOrMember(const __unique_ptr_EncodedOrMember& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.__unique_ptr_EncodedOrMember)
}

void __unique_ptr_EncodedOrMember::SharedCtor() {
  _cached_size_ = 0;
  du_data_member_ = NULL;
  du_encoded_members_ = NULL;
  du_encoded_or_member_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

__unique_ptr_EncodedOrMember::~__unique_ptr_EncodedOrMember() {
  // @@protoc_insertion_point(destructor:pb.__unique_ptr_EncodedOrMember)
  SharedDtor();
}

void __unique_ptr_EncodedOrMember::SharedDtor() {
  if (this != default_instance_) {
    delete du_data_member_;
    delete du_encoded_members_;
    delete du_encoded_or_member_;
  }
}

void __unique_ptr_EncodedOrMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* __unique_ptr_EncodedOrMember::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return __unique_ptr_EncodedOrMember_descriptor_;
}

const __unique_ptr_EncodedOrMember& __unique_ptr_EncodedOrMember::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

__unique_ptr_EncodedOrMember* __unique_ptr_EncodedOrMember::default_instance_ = NULL;

__unique_ptr_EncodedOrMember* __unique_ptr_EncodedOrMember::New(::google::protobuf::Arena* arena) const {
  __unique_ptr_EncodedOrMember* n = new __unique_ptr_EncodedOrMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void __unique_ptr_EncodedOrMember::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.__unique_ptr_EncodedOrMember)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_du_data_member()) {
      if (du_data_member_ != NULL) du_data_member_->::pb::DataMember::Clear();
    }
    if (has_du_encoded_members()) {
      if (du_encoded_members_ != NULL) du_encoded_members_->::pb::EncodedMembers::Clear();
    }
    if (has_du_encoded_or_member()) {
      if (du_encoded_or_member_ != NULL) du_encoded_or_member_->::pb::EncodedOrMember::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool __unique_ptr_EncodedOrMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.__unique_ptr_EncodedOrMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.DataMember du_data_member = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_du_data_member()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_du_encoded_members;
        break;
      }

      // optional .pb.EncodedMembers du_encoded_members = 2;
      case 2: {
        if (tag == 18) {
         parse_du_encoded_members:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_du_encoded_members()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_du_encoded_or_member;
        break;
      }

      // optional .pb.EncodedOrMember du_encoded_or_member = 3;
      case 3: {
        if (tag == 26) {
         parse_du_encoded_or_member:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_du_encoded_or_member()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.__unique_ptr_EncodedOrMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.__unique_ptr_EncodedOrMember)
  return false;
#undef DO_
}

void __unique_ptr_EncodedOrMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.__unique_ptr_EncodedOrMember)
  // optional .pb.DataMember du_data_member = 1;
  if (has_du_data_member()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->du_data_member_, output);
  }

  // optional .pb.EncodedMembers du_encoded_members = 2;
  if (has_du_encoded_members()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->du_encoded_members_, output);
  }

  // optional .pb.EncodedOrMember du_encoded_or_member = 3;
  if (has_du_encoded_or_member()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->du_encoded_or_member_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.__unique_ptr_EncodedOrMember)
}

::google::protobuf::uint8* __unique_ptr_EncodedOrMember::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.__unique_ptr_EncodedOrMember)
  // optional .pb.DataMember du_data_member = 1;
  if (has_du_data_member()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->du_data_member_, target);
  }

  // optional .pb.EncodedMembers du_encoded_members = 2;
  if (has_du_encoded_members()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->du_encoded_members_, target);
  }

  // optional .pb.EncodedOrMember du_encoded_or_member = 3;
  if (has_du_encoded_or_member()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->du_encoded_or_member_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.__unique_ptr_EncodedOrMember)
  return target;
}

int __unique_ptr_EncodedOrMember::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.__unique_ptr_EncodedOrMember)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional .pb.DataMember du_data_member = 1;
    if (has_du_data_member()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->du_data_member_);
    }

    // optional .pb.EncodedMembers du_encoded_members = 2;
    if (has_du_encoded_members()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->du_encoded_members_);
    }

    // optional .pb.EncodedOrMember du_encoded_or_member = 3;
    if (has_du_encoded_or_member()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->du_encoded_or_member_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void __unique_ptr_EncodedOrMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.__unique_ptr_EncodedOrMember)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const __unique_ptr_EncodedOrMember* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const __unique_ptr_EncodedOrMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.__unique_ptr_EncodedOrMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.__unique_ptr_EncodedOrMember)
    MergeFrom(*source);
  }
}

void __unique_ptr_EncodedOrMember::MergeFrom(const __unique_ptr_EncodedOrMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.__unique_ptr_EncodedOrMember)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_du_data_member()) {
      mutable_du_data_member()->::pb::DataMember::MergeFrom(from.du_data_member());
    }
    if (from.has_du_encoded_members()) {
      mutable_du_encoded_members()->::pb::EncodedMembers::MergeFrom(from.du_encoded_members());
    }
    if (from.has_du_encoded_or_member()) {
      mutable_du_encoded_or_member()->::pb::EncodedOrMember::MergeFrom(from.du_encoded_or_member());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void __unique_ptr_EncodedOrMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.__unique_ptr_EncodedOrMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void __unique_ptr_EncodedOrMember::CopyFrom(const __unique_ptr_EncodedOrMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.__unique_ptr_EncodedOrMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool __unique_ptr_EncodedOrMember::IsInitialized() const {

  return true;
}

void __unique_ptr_EncodedOrMember::Swap(__unique_ptr_EncodedOrMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void __unique_ptr_EncodedOrMember::InternalSwap(__unique_ptr_EncodedOrMember* other) {
  std::swap(du_data_member_, other->du_data_member_);
  std::swap(du_encoded_members_, other->du_encoded_members_);
  std::swap(du_encoded_or_member_, other->du_encoded_or_member_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata __unique_ptr_EncodedOrMember::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = __unique_ptr_EncodedOrMember_descriptor_;
  metadata.reflection = __unique_ptr_EncodedOrMember_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// __unique_ptr_EncodedOrMember

// optional .pb.DataMember du_data_member = 1;
bool __unique_ptr_EncodedOrMember::has_du_data_member() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void __unique_ptr_EncodedOrMember::set_has_du_data_member() {
  _has_bits_[0] |= 0x00000001u;
}
void __unique_ptr_EncodedOrMember::clear_has_du_data_member() {
  _has_bits_[0] &= ~0x00000001u;
}
void __unique_ptr_EncodedOrMember::clear_du_data_member() {
  if (du_data_member_ != NULL) du_data_member_->::pb::DataMember::Clear();
  clear_has_du_data_member();
}
const ::pb::DataMember& __unique_ptr_EncodedOrMember::du_data_member() const {
  // @@protoc_insertion_point(field_get:pb.__unique_ptr_EncodedOrMember.du_data_member)
  return du_data_member_ != NULL ? *du_data_member_ : *default_instance_->du_data_member_;
}
::pb::DataMember* __unique_ptr_EncodedOrMember::mutable_du_data_member() {
  set_has_du_data_member();
  if (du_data_member_ == NULL) {
    du_data_member_ = new ::pb::DataMember;
  }
  // @@protoc_insertion_point(field_mutable:pb.__unique_ptr_EncodedOrMember.du_data_member)
  return du_data_member_;
}
::pb::DataMember* __unique_ptr_EncodedOrMember::release_du_data_member() {
  // @@protoc_insertion_point(field_release:pb.__unique_ptr_EncodedOrMember.du_data_member)
  clear_has_du_data_member();
  ::pb::DataMember* temp = du_data_member_;
  du_data_member_ = NULL;
  return temp;
}
void __unique_ptr_EncodedOrMember::set_allocated_du_data_member(::pb::DataMember* du_data_member) {
  delete du_data_member_;
  du_data_member_ = du_data_member;
  if (du_data_member) {
    set_has_du_data_member();
  } else {
    clear_has_du_data_member();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.__unique_ptr_EncodedOrMember.du_data_member)
}

// optional .pb.EncodedMembers du_encoded_members = 2;
bool __unique_ptr_EncodedOrMember::has_du_encoded_members() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void __unique_ptr_EncodedOrMember::set_has_du_encoded_members() {
  _has_bits_[0] |= 0x00000002u;
}
void __unique_ptr_EncodedOrMember::clear_has_du_encoded_members() {
  _has_bits_[0] &= ~0x00000002u;
}
void __unique_ptr_EncodedOrMember::clear_du_encoded_members() {
  if (du_encoded_members_ != NULL) du_encoded_members_->::pb::EncodedMembers::Clear();
  clear_has_du_encoded_members();
}
const ::pb::EncodedMembers& __unique_ptr_EncodedOrMember::du_encoded_members() const {
  // @@protoc_insertion_point(field_get:pb.__unique_ptr_EncodedOrMember.du_encoded_members)
  return du_encoded_members_ != NULL ? *du_encoded_members_ : *default_instance_->du_encoded_members_;
}
::pb::EncodedMembers* __unique_ptr_EncodedOrMember::mutable_du_encoded_members() {
  set_has_du_encoded_members();
  if (du_encoded_members_ == NULL) {
    du_encoded_members_ = new ::pb::EncodedMembers;
  }
  // @@protoc_insertion_point(field_mutable:pb.__unique_ptr_EncodedOrMember.du_encoded_members)
  return du_encoded_members_;
}
::pb::EncodedMembers* __unique_ptr_EncodedOrMember::release_du_encoded_members() {
  // @@protoc_insertion_point(field_release:pb.__unique_ptr_EncodedOrMember.du_encoded_members)
  clear_has_du_encoded_members();
  ::pb::EncodedMembers* temp = du_encoded_members_;
  du_encoded_members_ = NULL;
  return temp;
}
void __unique_ptr_EncodedOrMember::set_allocated_du_encoded_members(::pb::EncodedMembers* du_encoded_members) {
  delete du_encoded_members_;
  du_encoded_members_ = du_encoded_members;
  if (du_encoded_members) {
    set_has_du_encoded_members();
  } else {
    clear_has_du_encoded_members();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.__unique_ptr_EncodedOrMember.du_encoded_members)
}

// optional .pb.EncodedOrMember du_encoded_or_member = 3;
bool __unique_ptr_EncodedOrMember::has_du_encoded_or_member() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void __unique_ptr_EncodedOrMember::set_has_du_encoded_or_member() {
  _has_bits_[0] |= 0x00000004u;
}
void __unique_ptr_EncodedOrMember::clear_has_du_encoded_or_member() {
  _has_bits_[0] &= ~0x00000004u;
}
void __unique_ptr_EncodedOrMember::clear_du_encoded_or_member() {
  if (du_encoded_or_member_ != NULL) du_encoded_or_member_->::pb::EncodedOrMember::Clear();
  clear_has_du_encoded_or_member();
}
const ::pb::EncodedOrMember& __unique_ptr_EncodedOrMember::du_encoded_or_member() const {
  // @@protoc_insertion_point(field_get:pb.__unique_ptr_EncodedOrMember.du_encoded_or_member)
  return du_encoded_or_member_ != NULL ? *du_encoded_or_member_ : *default_instance_->du_encoded_or_member_;
}
::pb::EncodedOrMember* __unique_ptr_EncodedOrMember::mutable_du_encoded_or_member() {
  set_has_du_encoded_or_member();
  if (du_encoded_or_member_ == NULL) {
    du_encoded_or_member_ = new ::pb::EncodedOrMember;
  }
  // @@protoc_insertion_point(field_mutable:pb.__unique_ptr_EncodedOrMember.du_encoded_or_member)
  return du_encoded_or_member_;
}
::pb::EncodedOrMember* __unique_ptr_EncodedOrMember::release_du_encoded_or_member() {
  // @@protoc_insertion_point(field_release:pb.__unique_ptr_EncodedOrMember.du_encoded_or_member)
  clear_has_du_encoded_or_member();
  ::pb::EncodedOrMember* temp = du_encoded_or_member_;
  du_encoded_or_member_ = NULL;
  return temp;
}
void __unique_ptr_EncodedOrMember::set_allocated_du_encoded_or_member(::pb::EncodedOrMember* du_encoded_or_member) {
  delete du_encoded_or_member_;
  du_encoded_or_member_ = du_encoded_or_member;
  if (du_encoded_or_member) {
    set_has_du_encoded_or_member();
  } else {
    clear_has_du_encoded_or_member();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.__unique_ptr_EncodedOrMember.du_encoded_or_member)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int __unique_ptr_Structure::kDuStructureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

__unique_ptr_Structure::__unique_ptr_Structure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.__unique_ptr_Structure)
}

void __unique_ptr_Structure::InitAsDefaultInstance() {
  du_structure_ = const_cast< ::pb::Structure*>(&::pb::Structure::default_instance());
}

__unique_ptr_Structure::__unique_ptr_Structure(const __unique_ptr_Structure& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.__unique_ptr_Structure)
}

void __unique_ptr_Structure::SharedCtor() {
  _cached_size_ = 0;
  du_structure_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

__unique_ptr_Structure::~__unique_ptr_Structure() {
  // @@protoc_insertion_point(destructor:pb.__unique_ptr_Structure)
  SharedDtor();
}

void __unique_ptr_Structure::SharedDtor() {
  if (this != default_instance_) {
    delete du_structure_;
  }
}

void __unique_ptr_Structure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* __unique_ptr_Structure::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return __unique_ptr_Structure_descriptor_;
}

const __unique_ptr_Structure& __unique_ptr_Structure::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

__unique_ptr_Structure* __unique_ptr_Structure::default_instance_ = NULL;

__unique_ptr_Structure* __unique_ptr_Structure::New(::google::protobuf::Arena* arena) const {
  __unique_ptr_Structure* n = new __unique_ptr_Structure;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void __unique_ptr_Structure::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.__unique_ptr_Structure)
  if (has_du_structure()) {
    if (du_structure_ != NULL) du_structure_->::pb::Structure::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool __unique_ptr_Structure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.__unique_ptr_Structure)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pb.Structure du_structure = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_du_structure()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.__unique_ptr_Structure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.__unique_ptr_Structure)
  return false;
#undef DO_
}

void __unique_ptr_Structure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.__unique_ptr_Structure)
  // optional .pb.Structure du_structure = 1;
  if (has_du_structure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->du_structure_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.__unique_ptr_Structure)
}

::google::protobuf::uint8* __unique_ptr_Structure::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.__unique_ptr_Structure)
  // optional .pb.Structure du_structure = 1;
  if (has_du_structure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->du_structure_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.__unique_ptr_Structure)
  return target;
}

int __unique_ptr_Structure::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.__unique_ptr_Structure)
  int total_size = 0;

  // optional .pb.Structure du_structure = 1;
  if (has_du_structure()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->du_structure_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void __unique_ptr_Structure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.__unique_ptr_Structure)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const __unique_ptr_Structure* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const __unique_ptr_Structure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.__unique_ptr_Structure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.__unique_ptr_Structure)
    MergeFrom(*source);
  }
}

void __unique_ptr_Structure::MergeFrom(const __unique_ptr_Structure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.__unique_ptr_Structure)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_du_structure()) {
      mutable_du_structure()->::pb::Structure::MergeFrom(from.du_structure());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void __unique_ptr_Structure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.__unique_ptr_Structure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void __unique_ptr_Structure::CopyFrom(const __unique_ptr_Structure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.__unique_ptr_Structure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool __unique_ptr_Structure::IsInitialized() const {

  return true;
}

void __unique_ptr_Structure::Swap(__unique_ptr_Structure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void __unique_ptr_Structure::InternalSwap(__unique_ptr_Structure* other) {
  std::swap(du_structure_, other->du_structure_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata __unique_ptr_Structure::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = __unique_ptr_Structure_descriptor_;
  metadata.reflection = __unique_ptr_Structure_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// __unique_ptr_Structure

// optional .pb.Structure du_structure = 1;
bool __unique_ptr_Structure::has_du_structure() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void __unique_ptr_Structure::set_has_du_structure() {
  _has_bits_[0] |= 0x00000001u;
}
void __unique_ptr_Structure::clear_has_du_structure() {
  _has_bits_[0] &= ~0x00000001u;
}
void __unique_ptr_Structure::clear_du_structure() {
  if (du_structure_ != NULL) du_structure_->::pb::Structure::Clear();
  clear_has_du_structure();
}
const ::pb::Structure& __unique_ptr_Structure::du_structure() const {
  // @@protoc_insertion_point(field_get:pb.__unique_ptr_Structure.du_structure)
  return du_structure_ != NULL ? *du_structure_ : *default_instance_->du_structure_;
}
::pb::Structure* __unique_ptr_Structure::mutable_du_structure() {
  set_has_du_structure();
  if (du_structure_ == NULL) {
    du_structure_ = new ::pb::Structure;
  }
  // @@protoc_insertion_point(field_mutable:pb.__unique_ptr_Structure.du_structure)
  return du_structure_;
}
::pb::Structure* __unique_ptr_Structure::release_du_structure() {
  // @@protoc_insertion_point(field_release:pb.__unique_ptr_Structure.du_structure)
  clear_has_du_structure();
  ::pb::Structure* temp = du_structure_;
  du_structure_ = NULL;
  return temp;
}
void __unique_ptr_Structure::set_allocated_du_structure(::pb::Structure* du_structure) {
  delete du_structure_;
  du_structure_ = du_structure;
  if (du_structure) {
    set_has_du_structure();
  } else {
    clear_has_du_structure();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.__unique_ptr_Structure.du_structure)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int map_string_Variant::kKeyFieldNumber;
const int map_string_Variant::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

map_string_Variant::map_string_Variant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.map_string_Variant)
}

void map_string_Variant::InitAsDefaultInstance() {
  value_ = const_cast< ::pb::Variant*>(&::pb::Variant::default_instance());
}

map_string_Variant::map_string_Variant(const map_string_Variant& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.map_string_Variant)
}

void map_string_Variant::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

map_string_Variant::~map_string_Variant() {
  // @@protoc_insertion_point(destructor:pb.map_string_Variant)
  SharedDtor();
}

void map_string_Variant::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete value_;
  }
}

void map_string_Variant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* map_string_Variant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return map_string_Variant_descriptor_;
}

const map_string_Variant& map_string_Variant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

map_string_Variant* map_string_Variant::default_instance_ = NULL;

map_string_Variant* map_string_Variant::New(::google::protobuf::Arena* arena) const {
  map_string_Variant* n = new map_string_Variant;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void map_string_Variant::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.map_string_Variant)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      if (value_ != NULL) value_->::pb::Variant::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool map_string_Variant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.map_string_Variant)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.map_string_Variant.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional .pb.Variant value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.map_string_Variant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.map_string_Variant)
  return false;
#undef DO_
}

void map_string_Variant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.map_string_Variant)
  // optional string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.map_string_Variant.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional .pb.Variant value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.map_string_Variant)
}

::google::protobuf::uint8* map_string_Variant::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.map_string_Variant)
  // optional string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.map_string_Variant.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional .pb.Variant value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->value_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.map_string_Variant)
  return target;
}

int map_string_Variant::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.map_string_Variant)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional .pb.Variant value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->value_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void map_string_Variant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.map_string_Variant)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const map_string_Variant* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const map_string_Variant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.map_string_Variant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.map_string_Variant)
    MergeFrom(*source);
  }
}

void map_string_Variant::MergeFrom(const map_string_Variant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.map_string_Variant)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_value()) {
      mutable_value()->::pb::Variant::MergeFrom(from.value());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void map_string_Variant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.map_string_Variant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void map_string_Variant::CopyFrom(const map_string_Variant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.map_string_Variant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool map_string_Variant::IsInitialized() const {

  return true;
}

void map_string_Variant::Swap(map_string_Variant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void map_string_Variant::InternalSwap(map_string_Variant* other) {
  key_.Swap(&other->key_);
  std::swap(value_, other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata map_string_Variant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = map_string_Variant_descriptor_;
  metadata.reflection = map_string_Variant_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// map_string_Variant

// optional string key = 1;
bool map_string_Variant::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void map_string_Variant::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void map_string_Variant::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void map_string_Variant::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& map_string_Variant::key() const {
  // @@protoc_insertion_point(field_get:pb.map_string_Variant.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void map_string_Variant::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.map_string_Variant.key)
}
 void map_string_Variant::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.map_string_Variant.key)
}
 void map_string_Variant::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.map_string_Variant.key)
}
 ::std::string* map_string_Variant::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:pb.map_string_Variant.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* map_string_Variant::release_key() {
  // @@protoc_insertion_point(field_release:pb.map_string_Variant.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void map_string_Variant::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:pb.map_string_Variant.key)
}

// optional .pb.Variant value = 2;
bool map_string_Variant::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void map_string_Variant::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void map_string_Variant::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void map_string_Variant::clear_value() {
  if (value_ != NULL) value_->::pb::Variant::Clear();
  clear_has_value();
}
const ::pb::Variant& map_string_Variant::value() const {
  // @@protoc_insertion_point(field_get:pb.map_string_Variant.value)
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
::pb::Variant* map_string_Variant::mutable_value() {
  set_has_value();
  if (value_ == NULL) {
    value_ = new ::pb::Variant;
  }
  // @@protoc_insertion_point(field_mutable:pb.map_string_Variant.value)
  return value_;
}
::pb::Variant* map_string_Variant::release_value() {
  // @@protoc_insertion_point(field_release:pb.map_string_Variant.value)
  clear_has_value();
  ::pb::Variant* temp = value_;
  value_ = NULL;
  return temp;
}
void map_string_Variant::set_allocated_value(::pb::Variant* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.map_string_Variant.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int map_string_uint32::kKeyFieldNumber;
const int map_string_uint32::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

map_string_uint32::map_string_uint32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.map_string_uint32)
}

void map_string_uint32::InitAsDefaultInstance() {
}

map_string_uint32::map_string_uint32(const map_string_uint32& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.map_string_uint32)
}

void map_string_uint32::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

map_string_uint32::~map_string_uint32() {
  // @@protoc_insertion_point(destructor:pb.map_string_uint32)
  SharedDtor();
}

void map_string_uint32::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void map_string_uint32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* map_string_uint32::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return map_string_uint32_descriptor_;
}

const map_string_uint32& map_string_uint32::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

map_string_uint32* map_string_uint32::default_instance_ = NULL;

map_string_uint32* map_string_uint32::New(::google::protobuf::Arena* arena) const {
  map_string_uint32* n = new map_string_uint32;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void map_string_uint32::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.map_string_uint32)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    value_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool map_string_uint32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.map_string_uint32)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.map_string_uint32.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional uint32 value = 2;
      case 2: {
        if (tag == 16) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.map_string_uint32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.map_string_uint32)
  return false;
#undef DO_
}

void map_string_uint32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.map_string_uint32)
  // optional string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.map_string_uint32.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional uint32 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.map_string_uint32)
}

::google::protobuf::uint8* map_string_uint32::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.map_string_uint32)
  // optional string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.map_string_uint32.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional uint32 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.map_string_uint32)
  return target;
}

int map_string_uint32::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pb.map_string_uint32)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional uint32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void map_string_uint32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.map_string_uint32)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const map_string_uint32* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const map_string_uint32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.map_string_uint32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.map_string_uint32)
    MergeFrom(*source);
  }
}

void map_string_uint32::MergeFrom(const map_string_uint32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.map_string_uint32)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void map_string_uint32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.map_string_uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void map_string_uint32::CopyFrom(const map_string_uint32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.map_string_uint32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool map_string_uint32::IsInitialized() const {

  return true;
}

void map_string_uint32::Swap(map_string_uint32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void map_string_uint32::InternalSwap(map_string_uint32* other) {
  key_.Swap(&other->key_);
  std::swap(value_, other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata map_string_uint32::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = map_string_uint32_descriptor_;
  metadata.reflection = map_string_uint32_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// map_string_uint32

// optional string key = 1;
bool map_string_uint32::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void map_string_uint32::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void map_string_uint32::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void map_string_uint32::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& map_string_uint32::key() const {
  // @@protoc_insertion_point(field_get:pb.map_string_uint32.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void map_string_uint32::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.map_string_uint32.key)
}
 void map_string_uint32::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.map_string_uint32.key)
}
 void map_string_uint32::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.map_string_uint32.key)
}
 ::std::string* map_string_uint32::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:pb.map_string_uint32.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* map_string_uint32::release_key() {
  // @@protoc_insertion_point(field_release:pb.map_string_uint32.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void map_string_uint32::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:pb.map_string_uint32.key)
}

// optional uint32 value = 2;
bool map_string_uint32::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void map_string_uint32::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void map_string_uint32::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void map_string_uint32::clear_value() {
  value_ = 0u;
  clear_has_value();
}
 ::google::protobuf::uint32 map_string_uint32::value() const {
  // @@protoc_insertion_point(field_get:pb.map_string_uint32.value)
  return value_;
}
 void map_string_uint32::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:pb.map_string_uint32.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
