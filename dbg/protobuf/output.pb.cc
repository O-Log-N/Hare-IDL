// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: output.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "output.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* Root_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Root_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_output_2eproto() {
  protobuf_AddDesc_output_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "output.proto");
  GOOGLE_CHECK(file != NULL);
  Root_descriptor_ = file->message_type(0);
  static const int Root_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, packed_var_ints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, packed_doubles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, unpacked_strings_),
  };
  Root_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Root_descriptor_,
      Root::default_instance_,
      Root_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Root, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Root));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_output_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Root_descriptor_, &Root::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_output_2eproto() {
  delete Root::default_instance_;
  delete Root_reflection_;
}

void protobuf_AddDesc_output_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014output.proto\022\002pb\"Y\n\004Root\022\033\n\017packed_var"
    "_ints\030\001 \003(\021B\002\020\001\022\032\n\016packed_doubles\030\002 \003(\001B"
    "\002\020\001\022\030\n\020unpacked_strings\030\003 \003(\t", 109);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "output.proto", &protobuf_RegisterTypes);
  Root::default_instance_ = new Root();
  Root::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_output_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_output_2eproto {
  StaticDescriptorInitializer_output_2eproto() {
    protobuf_AddDesc_output_2eproto();
  }
} static_descriptor_initializer_output_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Root::kPackedVarIntsFieldNumber;
const int Root::kPackedDoublesFieldNumber;
const int Root::kUnpackedStringsFieldNumber;
#endif  // !_MSC_VER

Root::Root()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Root)
}

void Root::InitAsDefaultInstance() {
}

Root::Root(const Root& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.Root)
}

void Root::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Root::~Root() {
  // @@protoc_insertion_point(destructor:pb.Root)
  SharedDtor();
}

void Root::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Root::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Root::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Root_descriptor_;
}

const Root& Root::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_output_2eproto();
  return *default_instance_;
}

Root* Root::default_instance_ = NULL;

Root* Root::New() const {
  return new Root;
}

void Root::Clear() {
  packed_var_ints_.Clear();
  packed_doubles_.Clear();
  unpacked_strings_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Root::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Root)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 packed_var_ints = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_packed_var_ints())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 10, input, this->mutable_packed_var_ints())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_packed_doubles;
        break;
      }

      // repeated double packed_doubles = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_packed_doubles:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_packed_doubles())));
        } else if (tag == 17) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18, input, this->mutable_packed_doubles())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_unpacked_strings;
        break;
      }

      // repeated string unpacked_strings = 3;
      case 3: {
        if (tag == 26) {
         parse_unpacked_strings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_unpacked_strings()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unpacked_strings(this->unpacked_strings_size() - 1).data(),
            this->unpacked_strings(this->unpacked_strings_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "unpacked_strings");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_unpacked_strings;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Root)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Root)
  return false;
#undef DO_
}

void Root::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Root)
  // repeated sint32 packed_var_ints = 1 [packed = true];
  if (this->packed_var_ints_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_var_ints_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_var_ints_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->packed_var_ints(i), output);
  }

  // repeated double packed_doubles = 2 [packed = true];
  if (this->packed_doubles_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_packed_doubles_cached_byte_size_);
  }
  for (int i = 0; i < this->packed_doubles_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->packed_doubles(i), output);
  }

  // repeated string unpacked_strings = 3;
  for (int i = 0; i < this->unpacked_strings_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->unpacked_strings(i).data(), this->unpacked_strings(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "unpacked_strings");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->unpacked_strings(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Root)
}

::google::protobuf::uint8* Root::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.Root)
  // repeated sint32 packed_var_ints = 1 [packed = true];
  if (this->packed_var_ints_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_var_ints_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_var_ints_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->packed_var_ints(i), target);
  }

  // repeated double packed_doubles = 2 [packed = true];
  if (this->packed_doubles_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _packed_doubles_cached_byte_size_, target);
  }
  for (int i = 0; i < this->packed_doubles_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->packed_doubles(i), target);
  }

  // repeated string unpacked_strings = 3;
  for (int i = 0; i < this->unpacked_strings_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unpacked_strings(i).data(), this->unpacked_strings(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unpacked_strings");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->unpacked_strings(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Root)
  return target;
}

int Root::ByteSize() const {
  int total_size = 0;

  // repeated sint32 packed_var_ints = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->packed_var_ints_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->packed_var_ints(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_var_ints_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double packed_doubles = 2 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->packed_doubles_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _packed_doubles_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string unpacked_strings = 3;
  total_size += 1 * this->unpacked_strings_size();
  for (int i = 0; i < this->unpacked_strings_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->unpacked_strings(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Root::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Root* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Root*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Root::MergeFrom(const Root& from) {
  GOOGLE_CHECK_NE(&from, this);
  packed_var_ints_.MergeFrom(from.packed_var_ints_);
  packed_doubles_.MergeFrom(from.packed_doubles_);
  unpacked_strings_.MergeFrom(from.unpacked_strings_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Root::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Root::CopyFrom(const Root& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Root::IsInitialized() const {

  return true;
}

void Root::Swap(Root* other) {
  if (other != this) {
    packed_var_ints_.Swap(&other->packed_var_ints_);
    packed_doubles_.Swap(&other->packed_doubles_);
    unpacked_strings_.Swap(&other->unpacked_strings_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Root::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Root_descriptor_;
  metadata.reflection = Root_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
