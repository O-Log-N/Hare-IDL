Root
|-Structure kind=MAPPING type=STRUCT name=Limit encAttrs=( ClangOptions = ( kind=STRING stringValue=-fno-ms-compatibility -I.. ) , Lang = ( kind=STRING stringValue=C++ ) ) discr=
| |-DataMember name='inclusive'  type='MAPPING_SPECIFIC bool (  )'
| |-DataMember name='value'  type='MAPPING_SPECIFIC double (  )'
|-Structure kind=MAPPING type=STRUCT name=Location encAttrs=( ClangOptions = ( kind=STRING stringValue=-fno-ms-compatibility -I.. ) , Lang = ( kind=STRING stringValue=C++ ) ) discr=
| |-DataMember name='fileName'  type='MAPPING_SPECIFIC string (  )'
| |-DataMember name='lineNumber'  type='MAPPING_SPECIFIC int32_t (  )'
|-Structure kind=MAPPING type=STRUCT name=CharacterRange encAttrs=( ClangOptions = ( kind=STRING stringValue=-fno-ms-compatibility -I.. ) , Lang = ( kind=STRING stringValue=C++ ) ) discr=
| |-DataMember name='from'  type='MAPPING_SPECIFIC uint32_t (  )'
| |-DataMember name='to'  type='MAPPING_SPECIFIC uint32_t (  )'
|-Structure kind=MAPPING type=STRUCT name=CharacterSet encAttrs=( ClangOptions = ( kind=STRING stringValue=-fno-ms-compatibility -I.. ) , Lang = ( kind=STRING stringValue=C++ ) ) discr=
| |-DataMember name='ranges'  type='SEQUENCE< MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=CharacterRange ) ) >'
|-Structure kind=MAPPING type=STRUCT name=Variant encAttrs=( ClangOptions = ( kind=STRING stringValue=-fno-ms-compatibility -I.. ) , Lang = ( kind=STRING stringValue=C++ ) ) discr=
| |-DataMember name='kind'  type='ENUM  { NONE = 0 , NUMBER = 1 , STRING = 2 }'
| |-DataMember name='numberValue'  type='MAPPING_SPECIFIC double (  )'
| |-DataMember name='stringValue'  type='MAPPING_SPECIFIC string (  )'
|-Structure kind=MAPPING type=STRUCT name=DataType encAttrs=( ClangOptions = ( kind=STRING stringValue=-fno-ms-compatibility -I.. ) , Lang = ( kind=STRING stringValue=C++ ) ) discr=
| |-DataMember name='kind'  type='ENUM  { BIT_STRING = 10 , CHARACTER = 8 , CHARACTER_STRING = 9 , DICTIONARY = 11 , DISCRIMINATED_UNION = 12 , ENCODING_SPECIFIC = 3 , ENUM = 0 , FIXED_POINT = 6 , FLOATING_POINT = 7 , INTEGER = 5 , MAPPING_SPECIFIC = 4 , NAMED_TYPE = 1 , SEQUENCE = 2 }'
| |-DataMember name='name'  type='MAPPING_SPECIFIC string (  )'
| |-DataMember name='mappingName'  type='MAPPING_SPECIFIC string (  )'
| |-DataMember name='encodingName'  type='MAPPING_SPECIFIC string (  )'
| |-DataMember name='keyType'  type='MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=std::unique_ptr<DataType, std::default_delete<DataType> > ) )'
| |-DataMember name='paramType'  type='MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=std::unique_ptr<DataType, std::default_delete<DataType> > ) )'
| |-DataMember name='lowLimit'  type='MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=Limit ) )'
| |-DataMember name='highLimit'  type='MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=Limit ) )'
| |-DataMember name='fixedPrecision'  type='MAPPING_SPECIFIC double (  )'
| |-DataMember name='floatingSignificandBits'  type='MAPPING_SPECIFIC uint8_t (  )'
| |-DataMember name='floatingExponentBits'  type='MAPPING_SPECIFIC uint8_t (  )'
| |-DataMember name='characterSet'  type='MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=CharacterSet ) )'
| |-DataMember name='stringMinSize'  type='MAPPING_SPECIFIC uint32_t (  )'
| |-DataMember name='stringMaxSize'  type='MAPPING_SPECIFIC uint32_t (  )'
| |-DataMember name='encodingAttrs'  type='DICTIONARY< MAPPING_SPECIFIC string (  ) , MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=Variant ) ) >'
| |-DataMember name='mappingAttrs'  type='DICTIONARY< MAPPING_SPECIFIC string (  ) , MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=Variant ) ) >'
| |-DataMember name='enumValues'  type='DICTIONARY< MAPPING_SPECIFIC string (  ) , MAPPING_SPECIFIC uint32_t (  ) >'
|-Structure kind=MAPPING type=STRUCT name=EncodingSpecifics encAttrs=( ClangOptions = ( kind=STRING stringValue=-fno-ms-compatibility -I.. ) , Lang = ( kind=STRING stringValue=C++ ) ) discr=
| |-DataMember name='name'  type='MAPPING_SPECIFIC string (  )'
| |-DataMember name='attrs'  type='DICTIONARY< MAPPING_SPECIFIC string (  ) , MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=Variant ) ) >'
|-Structure kind=MAPPING type=STRUCT name=EncodedOrMember encAttrs=( ClangOptions = ( kind=STRING stringValue=-fno-ms-compatibility -I.. ) , Lang = ( kind=STRING stringValue=C++ ) ) discr=
| |-DataMember name='location'  type='MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=Location ) )'
|-Structure kind=MAPPING type=STRUCT name=DataMember encAttrs=( ClangOptions = ( kind=STRING stringValue=-fno-ms-compatibility -I.. ) , Lang = ( kind=STRING stringValue=C++ ) ) discr=
| |-DataMember name='type'  type='MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=DataType ) )'
| |-DataMember name='name'  type='MAPPING_SPECIFIC string (  )'
| |-DataMember name='extendTo'  type='MAPPING_SPECIFIC bool (  )'
| |-DataMember name='defaultValue'  type='MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=Variant ) )'
| |-DataMember name='whenDiscriminant'  type='SEQUENCE< MAPPING_SPECIFIC string (  ) >'
|-Structure kind=MAPPING type=STRUCT name=EncodedMembers encAttrs=( ClangOptions = ( kind=STRING stringValue=-fno-ms-compatibility -I.. ) , Lang = ( kind=STRING stringValue=C++ ) ) discr=
| |-DataMember name='encodingSpecifics'  type='MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=EncodingSpecifics ) )'
| |-DataMember name='members'  type='SEQUENCE< MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=std::unique_ptr<EncodedOrMember, std::default_delete<EncodedOrMember> > ) ) >'
|-Structure kind=MAPPING type=STRUCT name=Structure encAttrs=( ClangOptions = ( kind=STRING stringValue=-fno-ms-compatibility -I.. ) , Lang = ( kind=STRING stringValue=C++ ) ) discr=
| |-DataMember name='declType'  type='ENUM  { ENCODING = 2 , IDL = 0 , MAPPING = 1 }'
| |-DataMember name='type'  type='ENUM  { DISCRIMINATED_UNION = 2 , RPC = 1 , STRUCT = 0 }'
| |-DataMember name='name'  type='MAPPING_SPECIFIC string (  )'
| |-DataMember name='discriminant'  type='MAPPING_SPECIFIC string (  )'
|-Structure kind=MAPPING type=STRUCT name=Typedef encAttrs=( ClangOptions = ( kind=STRING stringValue=-fno-ms-compatibility -I.. ) , Lang = ( kind=STRING stringValue=C++ ) ) discr=
| |-DataMember name='location'  type='MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=Location ) )'
| |-DataMember name='type'  type='MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=DataType ) )'
| |-DataMember name='name'  type='MAPPING_SPECIFIC string (  )'
|-Structure kind=MAPPING type=STRUCT name=Root encAttrs=( ClangOptions = ( kind=STRING stringValue=-fno-ms-compatibility -I.. ) , Lang = ( kind=STRING stringValue=C++ ) ) discr=
| |-DataMember name='typedefs'  type='SEQUENCE< MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=Typedef ) ) >'
| |-DataMember name='structures'  type='SEQUENCE< MAPPING_SPECIFIC class ( className = ( kind=STRING stringValue=std::unique_ptr<Structure, std::default_delete<Structure> > ) ) >'
